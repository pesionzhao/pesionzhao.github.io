{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ZPSJLU \u00b6 Hi There! This is Pesion \u4e00\u679a\u6765\u81ea\u5409\u6797\u5927\u5b66\u4fe1\u606f\u5de5\u7a0b\u7684\u5927\u56db\u72d7\uff0c\u4e4b\u540e\u4f1a\u5728\u897f\u5b89\u4ea4\u901a\u5927\u5b66\u7ee7\u7eed\u5b66\u4e60 \u70ed\u7231 \u4fe1\u53f7\u5904\u7406 \uff0c \u6a21\u5f0f\u8bc6\u522b \uff0c \u6df1\u5ea6\u5b66\u4e60 \u4eba\u83dc\u5c31\u8981\u591a\u5b66\u4e60\uff0c\u8fd9\u91cc\u4f1a\u5b9a\u671f\u603b\u7ed3\u6211\u7684\u9879\u76ee\u3001\u7ade\u8d5b\u7ecf\u5386\uff0c\u4ee5\u53ca\u5b66\u4e60\u7b14\u8bb0 \u5b9d\u85cf\u5fae\u4fe1\u516c\u4f17\u53f7 \u6781\u5e02\u5e73\u53f0 GiantPandaCV \u96c6\u667a\u4e66\u7ae5 \u535a\u5ba2\u642d\u5efa\u53c2\u8003 MkDocs: https://www.mkdocs.org giantpandacv: http://giantpandacv.com/ MathJax = { tex: { inlineMath: [['$', '$'], ['\\\\(', '\\\\)']] } };","title":"Home"},{"location":"#zpsjlu","text":"Hi There! This is Pesion \u4e00\u679a\u6765\u81ea\u5409\u6797\u5927\u5b66\u4fe1\u606f\u5de5\u7a0b\u7684\u5927\u56db\u72d7\uff0c\u4e4b\u540e\u4f1a\u5728\u897f\u5b89\u4ea4\u901a\u5927\u5b66\u7ee7\u7eed\u5b66\u4e60 \u70ed\u7231 \u4fe1\u53f7\u5904\u7406 \uff0c \u6a21\u5f0f\u8bc6\u522b \uff0c \u6df1\u5ea6\u5b66\u4e60 \u4eba\u83dc\u5c31\u8981\u591a\u5b66\u4e60\uff0c\u8fd9\u91cc\u4f1a\u5b9a\u671f\u603b\u7ed3\u6211\u7684\u9879\u76ee\u3001\u7ade\u8d5b\u7ecf\u5386\uff0c\u4ee5\u53ca\u5b66\u4e60\u7b14\u8bb0 \u5b9d\u85cf\u5fae\u4fe1\u516c\u4f17\u53f7 \u6781\u5e02\u5e73\u53f0 GiantPandaCV \u96c6\u667a\u4e66\u7ae5 \u535a\u5ba2\u642d\u5efa\u53c2\u8003 MkDocs: https://www.mkdocs.org giantpandacv: http://giantpandacv.com/ MathJax = { tex: { inlineMath: [['$', '$'], ['\\\\(', '\\\\)']] } };","title":"ZPSJLU"},{"location":"welcome/","text":"TODO list cascade rcnn \u5206\u5e03\u5f0f\u8bad\u7ec3 yolov3v4 faster-rcnn \u6ce8\u610f\u529b\u673a\u5236 docker \u5173\u952e\u70b9\u68c0\u6d4b","title":"Welcome"},{"location":"Rule/Rule/","text":"Rule for the third year in JLU for ZPS \u00b6 a sentence for today : \u00b6 Morning(except Monday and Wednesday in odd week) \u00b6 cite 40 words read passage in wechat read a part of paper Afternoon(13:30-17:00) \u00b6 for your own project without any pressure finish a CET6 test Noon(18:00-21:00) \u00b6 cite 40 words practice listening skills read the rest of paper write the note for the day review Night(22:30-24:00) \u00b6 listening class on line watch American drama cite rest of the words Summary: \u00b6","title":"Rule for the third year in JLU for ZPS"},{"location":"Rule/Rule/#rule-for-the-third-year-in-jlu-for-zps","text":"","title":"Rule for the third year in JLU for ZPS"},{"location":"Rule/Rule/#a-sentence-for-today","text":"","title":"a sentence for today:"},{"location":"Rule/Rule/#morningexcept-monday-and-wednesday-in-odd-week","text":"cite 40 words read passage in wechat read a part of paper","title":"Morning(except Monday and Wednesday in odd week)"},{"location":"Rule/Rule/#afternoon1330-1700","text":"for your own project without any pressure finish a CET6 test","title":"Afternoon(13:30-17:00)"},{"location":"Rule/Rule/#noon1800-2100","text":"cite 40 words practice listening skills read the rest of paper write the note for the day review","title":"Noon(18:00-21:00)"},{"location":"Rule/Rule/#night2230-2400","text":"listening class on line watch American drama cite rest of the words","title":"Night(22:30-24:00)"},{"location":"Rule/Rule/#summary","text":"","title":"Summary:"},{"location":"Rule/new%20word/","text":"ongoing \u6301\u7eed\u5b58\u5728\u7684 alter \u6539\u53d8 pointed \u5c16\u9510\u7684\u3001\u660e\u663e\u7684 mend \u597d\u8f6c underlying \u6839\u672c\u7684\u3001\u5b9e\u9645\u7684 bilateral \u53cc\u65b9\u7684 complement \u8865\u5145","title":"New word"},{"location":"Rule/new_rule/","text":"New Rule For Pesion \u00b6 a poetry for today : \u00b6 \u6c5f\u57ce\u5b50 \u5341\u5e74\u751f\u6b7b\u4e24\u832b\u832b\uff0c\u4e0d\u601d\u91cf\uff0c\u81ea\u96be\u5fd8\uff0c\u5343\u91cc\u5b64\u575f\uff0c\u65e0\u5904\u8bdd\u51c4\u51c9\uff0c\u7eb5\u4f7f\u76f8\u9022\u5e94\u4e0d\u8bc6\uff0c\u5c18\u6ee1\u9762\uff0c\u9b13\u5982\u971c\u3002 \u591c\u6765\u5e7d\u68a6\u5ffd\u8fd8\u4e61\uff0c\u5c0f\u8f69\u7a97\uff0c\u6b63\u68b3\u5986\uff0c\u76f8\u987e\u65e0\u8a00\uff0c\u552f\u6709\u6cea\u5343\u884c\uff0c\u6599\u5f97\u5e74\u5e74\u80a0\u65ad\u5904\uff0c","title":"New Rule For Pesion"},{"location":"Rule/new_rule/#new-rule-for-pesion","text":"","title":"New Rule For Pesion"},{"location":"Rule/new_rule/#a-poetry-for-today","text":"\u6c5f\u57ce\u5b50 \u5341\u5e74\u751f\u6b7b\u4e24\u832b\u832b\uff0c\u4e0d\u601d\u91cf\uff0c\u81ea\u96be\u5fd8\uff0c\u5343\u91cc\u5b64\u575f\uff0c\u65e0\u5904\u8bdd\u51c4\u51c9\uff0c\u7eb5\u4f7f\u76f8\u9022\u5e94\u4e0d\u8bc6\uff0c\u5c18\u6ee1\u9762\uff0c\u9b13\u5982\u971c\u3002 \u591c\u6765\u5e7d\u68a6\u5ffd\u8fd8\u4e61\uff0c\u5c0f\u8f69\u7a97\uff0c\u6b63\u68b3\u5986\uff0c\u76f8\u987e\u65e0\u8a00\uff0c\u552f\u6709\u6cea\u5343\u884c\uff0c\u6599\u5f97\u5e74\u5e74\u80a0\u65ad\u5904\uff0c","title":"a poetry for today:"},{"location":"Rule/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E9%80%9F%E6%9F%A5/","text":"\u5e38\u7528\u5b57\u7b26 \u00b6 \\to \\to \\to \\times \\times \\times \\div \\div \\dive \\sqrt x \\sqrt x \\sqrt \\frac{x}{y} \\frac{x}{y} \\frac{}{} x\\cdot y x\\cdot y \\cdot \\lim_{x \\to \\infty} \\lim_{x \\to \\infty} \\lim_ \\sum_n^4 \\sum_n^4 \\sum_^ \\displaystyle \\lim_{x\\to\\infty} \\displaystyle \\lim_{x\\to\\infty} \\displaystyle \\overline x \\overline x \\overline \\hat{H} \\hat{H} \\hat{H} \\bold x \\bold x \\bold x \\alpha \\alpha \\beta \\beta \\gamma \\gamma \\lambda \\lambda \\Delta \\Delta \\omega \\omega \u5e0c\u814a\u5b57\u6bcd \u00b6","title":"\u6570\u5b66\u516c\u5f0f\u901f\u67e5"},{"location":"Rule/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E9%80%9F%E6%9F%A5/#_1","text":"\\to \\to \\to \\times \\times \\times \\div \\div \\dive \\sqrt x \\sqrt x \\sqrt \\frac{x}{y} \\frac{x}{y} \\frac{}{} x\\cdot y x\\cdot y \\cdot \\lim_{x \\to \\infty} \\lim_{x \\to \\infty} \\lim_ \\sum_n^4 \\sum_n^4 \\sum_^ \\displaystyle \\lim_{x\\to\\infty} \\displaystyle \\lim_{x\\to\\infty} \\displaystyle \\overline x \\overline x \\overline \\hat{H} \\hat{H} \\hat{H} \\bold x \\bold x \\bold x \\alpha \\alpha \\beta \\beta \\gamma \\gamma \\lambda \\lambda \\Delta \\Delta \\omega \\omega","title":"\u5e38\u7528\u5b57\u7b26"},{"location":"Rule/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E9%80%9F%E6%9F%A5/#_2","text":"","title":"\u5e0c\u814a\u5b57\u6bcd"},{"location":"Rule/%E9%80%9F%E6%9F%A5/","text":"People \u00b6 \ud83d\ude04 :smile: \ud83d\ude06 :laughing: \ud83d\ude2b :tired_face: \ud83d\ude0a :blush: \ud83d\ude03 :smiley: \u263a\ufe0f :relaxed: \ud83d\ude0f :smirk: \ud83d\ude0d :heart_eyes: \ud83d\ude18 :kissing_heart: \ud83d\ude1a :kissing_closed_eyes: \ud83d\ude33 :flushed: \ud83d\ude0c :relieved: \ud83d\ude06 :satisfied: \ud83d\ude01 :grin: \ud83d\ude09 :wink: \ud83d\ude1c :stuck_out_tongue_winking_eye: \ud83d\ude1d :stuck_out_tongue_closed_eyes: \ud83d\ude00 :grinning: \ud83d\ude17 :kissing: \ud83d\ude19 :kissing_smiling_eyes: \ud83d\ude1b :stuck_out_tongue: \ud83d\ude34 :sleeping: \ud83d\ude1f :worried: \ud83d\ude26 :frowning: \ud83d\ude27 :anguished: \ud83d\ude2e :open_mouth: \ud83d\ude2c :grimacing: \ud83d\ude15 :confused: \ud83d\ude2f :hushed: \ud83d\ude11 :expressionless: \ud83d\ude12 :unamused: \ud83d\ude05 :sweat_smile: \ud83d\ude13 :sweat: \ud83d\ude25 :disappointed_relieved: \ud83d\ude29 :weary: \ud83d\ude14 :pensive: \ud83d\ude1e :disappointed: \ud83d\ude16 :confounded: \ud83d\ude28 :fearful: \ud83d\ude30 :cold_sweat: \ud83d\ude23 :persevere: \ud83d\ude22 :cry: \ud83d\ude2d :sob: \ud83d\ude02 :joy: \ud83d\ude32 :astonished: \ud83d\ude31 :scream: \ud83d\ude20 :angry: \ud83d\ude21 :rage: \ud83d\ude24 :triumph: \ud83d\ude2a :sleepy: \ud83d\ude0b :yum: \ud83d\ude37 :mask: \ud83d\ude0e :sunglasses: \ud83d\ude35 :dizzy_face: \ud83d\udc7f :imp: \ud83d\ude08 :smiling_imp: \ud83d\ude10 :neutral_face: \ud83d\ude36 :no_mouth: \ud83d\ude07 :innocent: \ud83d\udc7d :alien: \ud83d\udc9b :yellow_heart: \ud83d\udc99 :blue_heart: \ud83d\udc9c :purple_heart: \u2764\ufe0f :heart: \ud83d\udc9a :green_heart: \ud83d\udc94 :broken_heart: \ud83d\udc93 :heartbeat: \ud83d\udc97 :heartpulse: \ud83d\udc95 :two_hearts: \ud83d\udc9e :revolving_hearts: \ud83d\udc98 :cupid: \ud83d\udc96 :sparkling_heart: \u2728 :sparkles: \u2b50\ufe0f :star: \ud83c\udf1f :star2: \ud83d\udcab :dizzy: \ud83d\udca5 :boom: \ud83d\udca5 :collision: \ud83d\udca2 :anger: \u2757\ufe0f :exclamation: \u2753 :question: \u2755 :grey_exclamation: \u2754 :grey_question: \ud83d\udca4 :zzz: \ud83d\udca8 :dash: \ud83d\udca6 :sweat_drops: \ud83c\udfb6 :notes: \ud83c\udfb5 :musical_note: \ud83d\udd25 :fire: \ud83d\udca9 :hankey: \ud83d\udca9 :poop: \ud83d\udca9 :shit: \ud83d\udc4d :+1: \ud83d\udc4d :thumbsup: \ud83d\udc4e :-1: \ud83d\udc4e :thumbsdown: \ud83d\udc4c :ok_hand: \ud83d\udc4a :punch: \ud83d\udc4a :facepunch: \u270a :fist: \u270c\ufe0f :v: \ud83d\udc4b :wave: \u270b :hand: \u270b :raised_hand: \ud83d\udc50 :open_hands: \u261d\ufe0f :point_up: \ud83d\udc47 :point_down: \ud83d\udc48 :point_left: \ud83d\udc49 :point_right: \ud83d\ude4c :raised_hands: \ud83d\ude4f :pray: \ud83d\udc46 :point_up_2: \ud83d\udc4f :clap: \ud83d\udcaa :muscle: \ud83e\udd18 :metal: \ud83d\udd95 :fu: \ud83d\udeb6 :walking: \ud83c\udfc3 :runner: \ud83c\udfc3 :running: \ud83d\udc6b :couple: \ud83d\udc6a :family: \ud83d\udc6c :two_men_holding_hands: \ud83d\udc6d :two_women_holding_hands: \ud83d\udc83 :dancer: \ud83d\udc6f :dancers: \ud83d\ude46 :ok_woman: \ud83d\ude45 :no_good: \ud83d\udc81 :information_desk_person: \ud83d\ude4b :raising_hand: \ud83d\udc70 :bride_with_veil: \ud83d\ude4e :person_with_pouting_face: \ud83d\ude4d :person_frowning: \ud83d\ude47 :bow: :couplekiss: \ud83d\udc91 :couple_with_heart: \ud83d\udc86 :massage: \ud83d\udc87 :haircut: \ud83d\udc85 :nail_care: \ud83d\udc66 :boy: \ud83d\udc67 :girl: \ud83d\udc69 :woman: \ud83d\udc68 :man: \ud83d\udc76 :baby: \ud83d\udc75 :older_woman: \ud83d\udc74 :older_man: \ud83d\udc71 :person_with_blond_hair: \ud83d\udc72 :man_with_gua_pi_mao: \ud83d\udc73 :man_with_turban: \ud83d\udc77 :construction_worker: \ud83d\udc6e :cop: \ud83d\udc7c :angel: \ud83d\udc78 :princess: \ud83d\ude3a :smiley_cat: \ud83d\ude38 :smile_cat: \ud83d\ude3b :heart_eyes_cat: \ud83d\ude3d :kissing_cat: \ud83d\ude3c :smirk_cat: \ud83d\ude40 :scream_cat: \ud83d\ude3f :crying_cat_face: \ud83d\ude39 :joy_cat: \ud83d\ude3e :pouting_cat: \ud83d\udc79 :japanese_ogre: \ud83d\udc7a :japanese_goblin: \ud83d\ude48 :see_no_evil: \ud83d\ude49 :hear_no_evil: \ud83d\ude4a :speak_no_evil: \ud83d\udc82 :guardsman: \ud83d\udc80 :skull: \ud83d\udc3e :feet: \ud83d\udc44 :lips: \ud83d\udc8b :kiss: \ud83d\udca7 :droplet: \ud83d\udc42 :ear: \ud83d\udc40 :eyes: \ud83d\udc43 :nose: \ud83d\udc45 :tongue: \ud83d\udc8c :love_letter: \ud83d\udc64 :bust_in_silhouette: \ud83d\udc65 :busts_in_silhouette: \ud83d\udcac :speech_balloon: \ud83d\udcad :thought_balloon: Nature \u00b6 \u2600\ufe0f :sunny: \u2614\ufe0f :umbrella: \u2601\ufe0f :cloud: \u2744\ufe0f :snowflake: \u26c4\ufe0f :snowman: \u26a1\ufe0f :zap: \ud83c\udf00 :cyclone: \ud83c\udf01 :foggy: \ud83c\udf0a :ocean: \ud83d\udc31 :cat: \ud83d\udc36 :dog: \ud83d\udc2d :mouse: \ud83d\udc39 :hamster: \ud83d\udc30 :rabbit: \ud83d\udc3a :wolf: \ud83d\udc38 :frog: \ud83d\udc2f :tiger: \ud83d\udc28 :koala: \ud83d\udc3b :bear: \ud83d\udc37 :pig: \ud83d\udc3d :pig_nose: \ud83d\udc2e :cow: \ud83d\udc17 :boar: \ud83d\udc35 :monkey_face: \ud83d\udc12 :monkey: \ud83d\udc34 :horse: \ud83d\udc0e :racehorse: \ud83d\udc2b :camel: \ud83d\udc11 :sheep: \ud83d\udc18 :elephant: \ud83d\udc3c :panda_face: \ud83d\udc0d :snake: \ud83d\udc26 :bird: \ud83d\udc24 :baby_chick: \ud83d\udc25 :hatched_chick: \ud83d\udc23 :hatching_chick: \ud83d\udc14 :chicken: \ud83d\udc27 :penguin: \ud83d\udc22 :turtle: \ud83d\udc1b :bug: \ud83d\udc1d :honeybee: \ud83d\udc1c :ant: \ud83d\udc1e :beetle: \ud83d\udc0c :snail: \ud83d\udc19 :octopus: \ud83d\udc20 :tropical_fish: \ud83d\udc1f :fish: \ud83d\udc33 :whale: \ud83d\udc0b :whale2: \ud83d\udc2c :dolphin: \ud83d\udc04 :cow2: \ud83d\udc0f :ram: \ud83d\udc00 :rat: \ud83d\udc03 :water_buffalo: \ud83d\udc05 :tiger2: \ud83d\udc07 :rabbit2: \ud83d\udc09 :dragon: \ud83d\udc10 :goat: \ud83d\udc13 :rooster: \ud83d\udc15 :dog2: \ud83d\udc16 :pig2: \ud83d\udc01 :mouse2: \ud83d\udc02 :ox: \ud83d\udc32 :dragon_face: \ud83d\udc21 :blowfish: \ud83d\udc0a :crocodile: \ud83d\udc2a :dromedary_camel: \ud83d\udc06 :leopard: \ud83d\udc08 :cat2: \ud83d\udc29 :poodle: \ud83d\udc3e :paw_prints: \ud83d\udc90 :bouquet: \ud83c\udf38 :cherry_blossom: \ud83c\udf37 :tulip: \ud83c\udf40 :four_leaf_clover: \ud83c\udf39 :rose: \ud83c\udf3b :sunflower: \ud83c\udf3a :hibiscus: \ud83c\udf41 :maple_leaf: \ud83c\udf43 :leaves: \ud83c\udf42 :fallen_leaf: \ud83c\udf3f :herb: \ud83c\udf44 :mushroom: \ud83c\udf35 :cactus: \ud83c\udf34 :palm_tree: \ud83c\udf32 :evergreen_tree: \ud83c\udf33 :deciduous_tree: \ud83c\udf30 :chestnut: \ud83c\udf31 :seedling: \ud83c\udf3c :blossom: \ud83c\udf3e :ear_of_rice: \ud83d\udc1a :shell: \ud83c\udf10 :globe_with_meridians: \ud83c\udf1e :sun_with_face: \ud83c\udf1d :full_moon_with_face: \ud83c\udf1a :new_moon_with_face: \ud83c\udf11 :new_moon: \ud83c\udf12 :waxing_crescent_moon: \ud83c\udf13 :first_quarter_moon: \ud83c\udf14 :waxing_gibbous_moon: \ud83c\udf15 :full_moon: \ud83c\udf16 :waning_gibbous_moon: \ud83c\udf17 :last_quarter_moon: \ud83c\udf18 :waning_crescent_moon: \ud83c\udf1c :last_quarter_moon_with_face: \ud83c\udf1b :first_quarter_moon_with_face: \ud83c\udf14 :moon: \ud83c\udf0d :earth_africa: \ud83c\udf0e :earth_americas: \ud83c\udf0f :earth_asia: \ud83c\udf0b :volcano: \ud83c\udf0c :milky_way: \u26c5\ufe0f :partly_sunny: Object \u00b6 \ud83c\udf8d :bamboo: \ud83d\udc9d :gift_heart: \ud83c\udf8e :dolls: \ud83c\udf92 :school_satchel: \ud83c\udf93 :mortar_board: \ud83c\udf8f :flags: \ud83c\udf86 :fireworks: \ud83c\udf87 :sparkler: \ud83c\udf90 :wind_chime: \ud83c\udf91 :rice_scene: \ud83c\udf83 :jack_o_lantern: \ud83d\udc7b :ghost: \ud83c\udf85 :santa: \ud83c\udf84 :christmas_tree: \ud83c\udf81 :gift: \ud83d\udd14 :bell: \ud83d\udd15 :no_bell: \ud83c\udf8b :tanabata_tree: \ud83c\udf89 :tada: \ud83c\udf8a :confetti_ball: \ud83c\udf88 :balloon: \ud83d\udd2e :crystal_ball: \ud83d\udcbf :cd: \ud83d\udcc0 :dvd: \ud83d\udcbe :floppy_disk: \ud83d\udcf7 :camera: \ud83d\udcf9 :video_camera: \ud83c\udfa5 :movie_camera: \ud83d\udcbb :computer: \ud83d\udcfa :tv: \ud83d\udcf1 :iphone: \u260e\ufe0f :phone: \u260e\ufe0f :telephone: \ud83d\udcde :telephone_receiver: \ud83d\udcdf :pager: \ud83d\udce0 :fax: \ud83d\udcbd :minidisc: \ud83d\udcfc :vhs: \ud83d\udd09 :sound: \ud83d\udd08 :speaker: \ud83d\udd07 :mute: \ud83d\udce2 :loudspeaker: \ud83d\udce3 :mega: \u231b\ufe0f :hourglass: \u23f3 :hourglass_flowing_sand: \u23f0 :alarm_clock: \u231a\ufe0f :watch: \ud83d\udcfb :radio: \ud83d\udce1 :satellite: \u27bf :loop: \ud83d\udd0d :mag: \ud83d\udd0e :mag_right: \ud83d\udd13 :unlock: \ud83d\udd12 :lock: \ud83d\udd0f :lock_with_ink_pen: \ud83d\udd10 :closed_lock_with_key: \ud83d\udd11 :key: \ud83d\udca1 :bulb: \ud83d\udd26 :flashlight: \ud83d\udd06 :high_brightness: \ud83d\udd05 :low_brightness: \ud83d\udd0c :electric_plug: \ud83d\udd0b :battery: \ud83d\udcf2 :calling: \u2709\ufe0f :email: \ud83d\udceb :mailbox: \ud83d\udcee :postbox: \ud83d\udec0 :bath: \ud83d\udec1 :bathtub: \ud83d\udebf :shower: \ud83d\udebd :toilet: \ud83d\udd27 :wrench: \ud83d\udd29 :nut_and_bolt: \ud83d\udd28 :hammer: \ud83d\udcba :seat: \ud83d\udcb0 :moneybag: \ud83d\udcb4 :yen: \ud83d\udcb5 :dollar: \ud83d\udcb7 :pound: \ud83d\udcb6 :euro: \ud83d\udcb3 :credit_card: \ud83d\udcb8 :money_with_wings: \ud83d\udce7 :e-mail: \ud83d\udce5 :inbox_tray: \ud83d\udce4 :outbox_tray: \u2709\ufe0f :envelope: \ud83d\udce8 :incoming_envelope: \ud83d\udcef :postal_horn: \ud83d\udcea :mailbox_closed: \ud83d\udcec :mailbox_with_mail: \ud83d\udced :mailbox_with_no_mail: \ud83d\udeaa :door: \ud83d\udeac :smoking: \ud83d\udca3 :bomb: \ud83d\udd2b :gun: \ud83d\udd2a :hocho: \ud83d\udc8a :pill: \ud83d\udc89 :syringe: \ud83d\udcc4 :page_facing_up: \ud83d\udcc3 :page_with_curl: \ud83d\udcd1 :bookmark_tabs: \ud83d\udcca :bar_chart: \ud83d\udcc8 :chart_with_upwards_trend: \ud83d\udcc9 :chart_with_downwards_trend: \ud83d\udcdc :scroll: \ud83d\udccb :clipboard: \ud83d\udcc6 :calendar: \ud83d\udcc5 :date: \ud83d\udcc7 :card_index: \ud83d\udcc1 :file_folder: \ud83d\udcc2 :open_file_folder: \u2702\ufe0f :scissors: \ud83d\udccc :pushpin: \ud83d\udcce :paperclip: \u2712\ufe0f :black_nib: \u270f\ufe0f :pencil2: \ud83d\udccf :straight_ruler: \ud83d\udcd0 :triangular_ruler: \ud83d\udcd5 :closed_book: \ud83d\udcd7 :green_book: \ud83d\udcd8 :blue_book: \ud83d\udcd9 :orange_book: \ud83d\udcd3 :notebook: \ud83d\udcd4 :notebook_with_decorative_cover: \ud83d\udcd2 :ledger: \ud83d\udcda :books: \ud83d\udd16 :bookmark: \ud83d\udcdb :name_badge: \ud83d\udd2c :microscope: \ud83d\udd2d :telescope: \ud83d\udcf0 :newspaper: \ud83c\udfc8 :football: \ud83c\udfc0 :basketball: \u26bd\ufe0f :soccer: \u26be\ufe0f :baseball: \ud83c\udfbe :tennis: \ud83c\udfb1 :8ball: \ud83c\udfc9 :rugby_football: \ud83c\udfb3 :bowling: \u26f3\ufe0f :golf: \ud83d\udeb5 :mountain_bicyclist: \ud83d\udeb4 :bicyclist: \ud83c\udfc7 :horse_racing: \ud83c\udfc2 :snowboarder: \ud83c\udfca :swimmer: \ud83c\udfc4 :surfer: \ud83c\udfbf :ski: \u2660\ufe0f :spades: \u2665\ufe0f :hearts: \u2663\ufe0f :clubs: \u2666\ufe0f :diamonds: \ud83d\udc8e :gem: \ud83d\udc8d :ring: \ud83c\udfc6 :trophy: \ud83c\udfbc :musical_score: \ud83c\udfb9 :musical_keyboard: \ud83c\udfbb :violin: \ud83d\udc7e :space_invader: \ud83c\udfae :video_game: \ud83c\udccf :black_joker: \ud83c\udfb4 :flower_playing_cards: \ud83c\udfb2 :game_die: \ud83c\udfaf :dart: \ud83c\udc04\ufe0f :mahjong: \ud83c\udfac :clapper: \ud83d\udcdd :memo: \ud83d\udcdd :pencil: \ud83d\udcd6 :book: \ud83c\udfa8 :art: \ud83c\udfa4 :microphone: \ud83c\udfa7 :headphones: \ud83c\udfba :trumpet: \ud83c\udfb7 :saxophone: \ud83c\udfb8 :guitar: \ud83d\udc5e :shoe: \ud83d\udc61 :sandal: \ud83d\udc60 :high_heel: \ud83d\udc84 :lipstick: \ud83d\udc62 :boot: \ud83d\udc55 :shirt: \ud83d\udc55 :tshirt: \ud83d\udc54 :necktie: \ud83d\udc5a :womans_clothes: \ud83d\udc57 :dress: \ud83c\udfbd :running_shirt_with_sash: \ud83d\udc56 :jeans: \ud83d\udc58 :kimono: \ud83d\udc59 :bikini: \ud83c\udf80 :ribbon: \ud83c\udfa9 :tophat: \ud83d\udc51 :crown: \ud83d\udc52 :womans_hat: \ud83d\udc5e :mans_shoe: \ud83c\udf02 :closed_umbrella: \ud83d\udcbc :briefcase: \ud83d\udc5c :handbag: \ud83d\udc5d :pouch: \ud83d\udc5b :purse: \ud83d\udc53 :eyeglasses: \ud83c\udfa3 :fishing_pole_and_fish: \u2615\ufe0f :coffee: \ud83c\udf75 :tea: \ud83c\udf76 :sake: \ud83c\udf7c :baby_bottle: \ud83c\udf7a :beer: \ud83c\udf7b :beers: \ud83c\udf78 :cocktail: \ud83c\udf79 :tropical_drink: \ud83c\udf77 :wine_glass: \ud83c\udf74 :fork_and_knife: \ud83c\udf55 :pizza: \ud83c\udf54 :hamburger: \ud83c\udf5f :fries: \ud83c\udf57 :poultry_leg: \ud83c\udf56 :meat_on_bone: \ud83c\udf5d :spaghetti: \ud83c\udf5b :curry: \ud83c\udf64 :fried_shrimp: \ud83c\udf71 :bento: \ud83c\udf63 :sushi: \ud83c\udf65 :fish_cake: \ud83c\udf59 :rice_ball: \ud83c\udf58 :rice_cracker: \ud83c\udf5a :rice: \ud83c\udf5c :ramen: \ud83c\udf72 :stew: \ud83c\udf62 :oden: \ud83c\udf61 :dango: \ud83e\udd5a :egg: \ud83c\udf5e :bread: \ud83c\udf69 :doughnut: \ud83c\udf6e :custard: \ud83c\udf66 :icecream: \ud83c\udf68 :ice_cream: \ud83c\udf67 :shaved_ice: \ud83c\udf82 :birthday: \ud83c\udf70 :cake: \ud83c\udf6a :cookie: \ud83c\udf6b :chocolate_bar: \ud83c\udf6c :candy: \ud83c\udf6d :lollipop: \ud83c\udf6f :honey_pot: \ud83c\udf4e :apple: \ud83c\udf4f :green_apple: \ud83c\udf4a :tangerine: \ud83c\udf4b :lemon: \ud83c\udf52 :cherries: \ud83c\udf47 :grapes: \ud83c\udf49 :watermelon: \ud83c\udf53 :strawberry: \ud83c\udf51 :peach: \ud83c\udf48 :melon: \ud83c\udf4c :banana: \ud83c\udf50 :pear: \ud83c\udf4d :pineapple: \ud83c\udf60 :sweet_potato: \ud83c\udf46 :eggplant: \ud83c\udf45 :tomato: \ud83c\udf3d :corn: Places \u00b6 \ud83c\udfe0 :house: \ud83c\udfe1 :house_with_garden: \ud83c\udfeb :school: \ud83c\udfe2 :office: \ud83c\udfe3 :post_office: \ud83c\udfe5 :hospital: \ud83c\udfe6 :bank: \ud83c\udfea :convenience_store: \ud83c\udfe9 :love_hotel: \ud83c\udfe8 :hotel: \ud83d\udc92 :wedding: \u26ea\ufe0f :church: \ud83c\udfec :department_store: \ud83c\udfe4 :european_post_office: \ud83c\udf07 :city_sunrise: \ud83c\udf06 :city_sunset: \ud83c\udfef :japanese_castle: \ud83c\udff0 :european_castle: \u26fa\ufe0f :tent: \ud83c\udfed :factory: \ud83d\uddfc :tokyo_tower: \ud83d\uddfe :japan: \ud83d\uddfb :mount_fuji: \ud83c\udf04 :sunrise_over_mountains: \ud83c\udf05 :sunrise: \ud83c\udf20 :stars: \ud83d\uddfd :statue_of_liberty: \ud83c\udf09 :bridge_at_night: \ud83c\udfa0 :carousel_horse: \ud83c\udf08 :rainbow: \ud83c\udfa1 :ferris_wheel: \u26f2\ufe0f :fountain: \ud83c\udfa2 :roller_coaster: \ud83d\udea2 :ship: \ud83d\udea4 :speedboat: \u26f5\ufe0f :boat: \u26f5\ufe0f :sailboat: \ud83d\udea3 :rowboat: \u2693\ufe0f :anchor: \ud83d\ude80 :rocket: \u2708\ufe0f :airplane: \ud83d\ude81 :helicopter: \ud83d\ude82 :steam_locomotive: \ud83d\ude8a :tram: \ud83d\ude9e :mountain_railway: \ud83d\udeb2 :bike: \ud83d\udea1 :aerial_tramway: \ud83d\ude9f :suspension_railway: \ud83d\udea0 :mountain_cableway: \ud83d\ude9c :tractor: \ud83d\ude99 :blue_car: \ud83d\ude98 :oncoming_automobile: \ud83d\ude97 :car: \ud83d\ude97 :red_car: \ud83d\ude95 :taxi: \ud83d\ude96 :oncoming_taxi: \ud83d\ude9b :articulated_lorry: \ud83d\ude8c :bus: \ud83d\ude8d :oncoming_bus: \ud83d\udea8 :rotating_light: \ud83d\ude93 :police_car: \ud83d\ude94 :oncoming_police_car: \ud83d\ude92 :fire_engine: \ud83d\ude91 :ambulance: \ud83d\ude90 :minibus: \ud83d\ude9a :truck: \ud83d\ude8b :train: \ud83d\ude89 :station: \ud83d\ude86 :train2: \ud83d\ude85 :bullettrain_front: \ud83d\ude84 :bullettrain_side: \ud83d\ude88 :light_rail: \ud83d\ude9d :monorail: \ud83d\ude83 :railway_car: \ud83d\ude8e :trolleybus: \ud83c\udfab :ticket: \u26fd\ufe0f :fuelpump: \ud83d\udea6 :vertical_traffic_light: \ud83d\udea5 :traffic_light: \u26a0\ufe0f :warning: \ud83d\udea7 :construction: \ud83d\udd30 :beginner: \ud83c\udfe7 :atm: \ud83c\udfb0 :slot_machine: \ud83d\ude8f :busstop: \ud83d\udc88 :barber: \u2668\ufe0f :hotsprings: \ud83c\udfc1 :checkered_flag: \ud83c\udf8c :crossed_flags: \ud83c\udfee :izakaya_lantern: \ud83d\uddff :moyai: \ud83c\udfaa :circus_tent: \ud83c\udfad :performing_arts: \ud83d\udccd :round_pushpin: \ud83d\udea9 :triangular_flag_on_post: \ud83c\uddef\ud83c\uddf5 :jp: \ud83c\uddf0\ud83c\uddf7 :kr: \ud83c\udde8\ud83c\uddf3 :cn: \ud83c\uddfa\ud83c\uddf8 :us: \ud83c\uddeb\ud83c\uddf7 :fr: \ud83c\uddea\ud83c\uddf8 :es: \ud83c\uddee\ud83c\uddf9 :it: \ud83c\uddf7\ud83c\uddfa :ru: \ud83c\uddec\ud83c\udde7 :gb: \ud83c\uddec\ud83c\udde7 :uk: \ud83c\udde9\ud83c\uddea :de: Symbols \u00b6 1\ufe0f\u20e3 :one: 2\ufe0f\u20e3 :two: 3\ufe0f\u20e3 :three: 4\ufe0f\u20e3 :four: 5\ufe0f\u20e3 :five: 6\ufe0f\u20e3 :six: 7\ufe0f\u20e3 :seven: 8\ufe0f\u20e3 :eight: 9\ufe0f\u20e3 :nine: \ud83d\udd1f :keycap_ten: \ud83d\udd22 :1234: 0\ufe0f\u20e3 :zero: #\ufe0f\u20e3 :hash: \ud83d\udd23 :symbols: \u25c0\ufe0f :arrow_backward: \u2b07\ufe0f :arrow_down: \u25b6\ufe0f :arrow_forward: \u2b05\ufe0f :arrow_left: \ud83d\udd20 :capital_abcd: \ud83d\udd21 :abcd: \ud83d\udd24 :abc: \u2199\ufe0f :arrow_lower_left: \u2198\ufe0f :arrow_lower_right: \u27a1\ufe0f :arrow_right: \u2b06\ufe0f :arrow_up: \u2196\ufe0f :arrow_upper_left: \u2197\ufe0f :arrow_upper_right: \u23ec :arrow_double_down: \u23eb :arrow_double_up: \ud83d\udd3d :arrow_down_small: \u2935\ufe0f :arrow_heading_down: \u2934\ufe0f :arrow_heading_up: \u21a9\ufe0f :leftwards_arrow_with_hook: \u21aa\ufe0f :arrow_right_hook: \u2194\ufe0f :left_right_arrow: \u2195\ufe0f :arrow_up_down: \ud83d\udd3c :arrow_up_small: \ud83d\udd03 :arrows_clockwise: \ud83d\udd04 :arrows_counterclockwise: \u23ea :rewind: \u23e9 :fast_forward: \u2139\ufe0f :information_source: \ud83c\udd97 :ok: \ud83d\udd00 :twisted_rightwards_arrows: \ud83d\udd01 :repeat: \ud83d\udd02 :repeat_one: \ud83c\udd95 :new: \ud83d\udd1d :top: \ud83c\udd99 :up: \ud83c\udd92 :cool: \ud83c\udd93 :free: \ud83c\udd96 :ng: \ud83c\udfa6 :cinema: \ud83c\ude01 :koko: \ud83d\udcf6 :signal_strength: \ud83c\ude39 :u5272: \ud83c\ude34 :u5408: \ud83c\ude3a :u55b6: \ud83c\ude2f\ufe0f :u6307: \ud83c\ude37\ufe0f :u6708: \ud83c\ude36 :u6709: \ud83c\ude35 :u6e80: \ud83c\ude1a\ufe0f :u7121: \ud83c\ude38 :u7533: \ud83c\ude33 :u7a7a: \ud83c\ude32 :u7981: \ud83c\ude02\ufe0f :sa: \ud83d\udebb :restroom: \ud83d\udeb9 :mens: \ud83d\udeba :womens: \ud83d\udebc :baby_symbol: \ud83d\udead :no_smoking: \ud83c\udd7f\ufe0f :parking: \u267f\ufe0f :wheelchair: \ud83d\ude87 :metro: \ud83d\udec4 :baggage_claim: \ud83c\ude51 :accept: \ud83d\udebe :wc: \ud83d\udeb0 :potable_water: \ud83d\udeae :put_litter_in_its_place: \u3299\ufe0f :secret: \u3297\ufe0f :congratulations: \u24c2\ufe0f :m: \ud83d\udec2 :passport_control: \ud83d\udec5 :left_luggage: \ud83d\udec3 :customs: \ud83c\ude50 :ideograph_advantage: \ud83c\udd91 :cl: \ud83c\udd98 :sos: \ud83c\udd94 :id: \ud83d\udeab :no_entry_sign: \ud83d\udd1e :underage: \ud83d\udcf5 :no_mobile_phones: \ud83d\udeaf :do_not_litter: \ud83d\udeb1 :non-potable_water: \ud83d\udeb3 :no_bicycles: \ud83d\udeb7 :no_pedestrians: \ud83d\udeb8 :children_crossing: \u26d4\ufe0f :no_entry: \u2733\ufe0f :eight_spoked_asterisk: \u2734\ufe0f :eight_pointed_black_star: \ud83d\udc9f :heart_decoration: \ud83c\udd9a :vs: \ud83d\udcf3 :vibration_mode: \ud83d\udcf4 :mobile_phone_off: \ud83d\udcb9 :chart: \ud83d\udcb1 :currency_exchange: \u2648\ufe0f :aries: \u2649\ufe0f :taurus: \u264a\ufe0f :gemini: \u264b\ufe0f :cancer: \u264c\ufe0f :leo: \u264d\ufe0f :virgo: \u264e\ufe0f :libra: \u264f\ufe0f :scorpius: \u2650\ufe0f :sagittarius: \u2651\ufe0f :capricorn: \u2652\ufe0f :aquarius: \u2653\ufe0f :pisces: \u26ce :ophiuchus: \ud83d\udd2f :six_pointed_star: \u274e :negative_squared_cross_mark: \ud83c\udd70\ufe0f :a: \ud83c\udd71\ufe0f :b: \ud83c\udd8e :ab: \ud83c\udd7e\ufe0f :o2: \ud83d\udca0 :diamond_shape_with_a_dot_inside: \u267b\ufe0f :recycle: \ud83d\udd1a :end: \ud83d\udd1b :on: \ud83d\udd1c :soon: \ud83d\udd50 :clock1: \ud83d\udd5c :clock130: \ud83d\udd59 :clock10: \ud83d\udd65 :clock1030: \ud83d\udd5a :clock11: \ud83d\udd66 :clock1130: \ud83d\udd5b :clock12: \ud83d\udd67 :clock1230: \ud83d\udd51 :clock2: \ud83d\udd5d :clock230: \ud83d\udd52 :clock3: \ud83d\udd5e :clock330: \ud83d\udd53 :clock4: \ud83d\udd5f :clock430: \ud83d\udd54 :clock5: \ud83d\udd60 :clock530: \ud83d\udd55 :clock6: \ud83d\udd61 :clock630: \ud83d\udd56 :clock7: \ud83d\udd62 :clock730: \ud83d\udd57 :clock8: \ud83d\udd63 :clock830: \ud83d\udd58 :clock9: \ud83d\udd64 :clock930: \ud83d\udcb2 :heavy_dollar_sign: \u00a9\ufe0f :copyright: \u00ae\ufe0f :registered: \u2122\ufe0f :tm: \u274c :x: \u2757\ufe0f :heavy_exclamation_mark: \u203c\ufe0f :bangbang: \u2049\ufe0f :interrobang: \u2b55\ufe0f :o: \u2716\ufe0f :heavy_multiplication_x: \u2795 :heavy_plus_sign: \u2796 :heavy_minus_sign: \u2797 :heavy_division_sign: \ud83d\udcae :white_flower: \ud83d\udcaf :100: \u2714\ufe0f :heavy_check_mark: \u2611\ufe0f :ballot_box_with_check: \ud83d\udd18 :radio_button: \ud83d\udd17 :link: \u27b0 :curly_loop: \u3030\ufe0f :wavy_dash: \u303d\ufe0f :part_alternation_mark: \u2705 :white_check_mark: \ud83d\udd32 :black_square_button: \ud83d\udd33 :white_square_button: \u26ab\ufe0f :black_circle: \u26aa\ufe0f :white_circle: \ud83d\udd34 :red_circle: \ud83d\udd35 :large_blue_circle: \ud83d\udd37 :large_blue_diamond: \ud83d\udd36 :large_orange_diamond: \ud83d\udd39 :small_blue_diamond: \ud83d\udd38 :small_orange_diamond: \ud83d\udd3a :small_red_triangle: \ud83d\udd3b :small_red_triangle_down: \ud83d\udd31 `","title":"People"},{"location":"Rule/%E9%80%9F%E6%9F%A5/#people","text":"\ud83d\ude04 :smile: \ud83d\ude06 :laughing: \ud83d\ude2b :tired_face: \ud83d\ude0a :blush: \ud83d\ude03 :smiley: \u263a\ufe0f :relaxed: \ud83d\ude0f :smirk: \ud83d\ude0d :heart_eyes: \ud83d\ude18 :kissing_heart: \ud83d\ude1a :kissing_closed_eyes: \ud83d\ude33 :flushed: \ud83d\ude0c :relieved: \ud83d\ude06 :satisfied: \ud83d\ude01 :grin: \ud83d\ude09 :wink: \ud83d\ude1c :stuck_out_tongue_winking_eye: \ud83d\ude1d :stuck_out_tongue_closed_eyes: \ud83d\ude00 :grinning: \ud83d\ude17 :kissing: \ud83d\ude19 :kissing_smiling_eyes: \ud83d\ude1b :stuck_out_tongue: \ud83d\ude34 :sleeping: \ud83d\ude1f :worried: \ud83d\ude26 :frowning: \ud83d\ude27 :anguished: \ud83d\ude2e :open_mouth: \ud83d\ude2c :grimacing: \ud83d\ude15 :confused: \ud83d\ude2f :hushed: \ud83d\ude11 :expressionless: \ud83d\ude12 :unamused: \ud83d\ude05 :sweat_smile: \ud83d\ude13 :sweat: \ud83d\ude25 :disappointed_relieved: \ud83d\ude29 :weary: \ud83d\ude14 :pensive: \ud83d\ude1e :disappointed: \ud83d\ude16 :confounded: \ud83d\ude28 :fearful: \ud83d\ude30 :cold_sweat: \ud83d\ude23 :persevere: \ud83d\ude22 :cry: \ud83d\ude2d :sob: \ud83d\ude02 :joy: \ud83d\ude32 :astonished: \ud83d\ude31 :scream: \ud83d\ude20 :angry: \ud83d\ude21 :rage: \ud83d\ude24 :triumph: \ud83d\ude2a :sleepy: \ud83d\ude0b :yum: \ud83d\ude37 :mask: \ud83d\ude0e :sunglasses: \ud83d\ude35 :dizzy_face: \ud83d\udc7f :imp: \ud83d\ude08 :smiling_imp: \ud83d\ude10 :neutral_face: \ud83d\ude36 :no_mouth: \ud83d\ude07 :innocent: \ud83d\udc7d :alien: \ud83d\udc9b :yellow_heart: \ud83d\udc99 :blue_heart: \ud83d\udc9c :purple_heart: \u2764\ufe0f :heart: \ud83d\udc9a :green_heart: \ud83d\udc94 :broken_heart: \ud83d\udc93 :heartbeat: \ud83d\udc97 :heartpulse: \ud83d\udc95 :two_hearts: \ud83d\udc9e :revolving_hearts: \ud83d\udc98 :cupid: \ud83d\udc96 :sparkling_heart: \u2728 :sparkles: \u2b50\ufe0f :star: \ud83c\udf1f :star2: \ud83d\udcab :dizzy: \ud83d\udca5 :boom: \ud83d\udca5 :collision: \ud83d\udca2 :anger: \u2757\ufe0f :exclamation: \u2753 :question: \u2755 :grey_exclamation: \u2754 :grey_question: \ud83d\udca4 :zzz: \ud83d\udca8 :dash: \ud83d\udca6 :sweat_drops: \ud83c\udfb6 :notes: \ud83c\udfb5 :musical_note: \ud83d\udd25 :fire: \ud83d\udca9 :hankey: \ud83d\udca9 :poop: \ud83d\udca9 :shit: \ud83d\udc4d :+1: \ud83d\udc4d :thumbsup: \ud83d\udc4e :-1: \ud83d\udc4e :thumbsdown: \ud83d\udc4c :ok_hand: \ud83d\udc4a :punch: \ud83d\udc4a :facepunch: \u270a :fist: \u270c\ufe0f :v: \ud83d\udc4b :wave: \u270b :hand: \u270b :raised_hand: \ud83d\udc50 :open_hands: \u261d\ufe0f :point_up: \ud83d\udc47 :point_down: \ud83d\udc48 :point_left: \ud83d\udc49 :point_right: \ud83d\ude4c :raised_hands: \ud83d\ude4f :pray: \ud83d\udc46 :point_up_2: \ud83d\udc4f :clap: \ud83d\udcaa :muscle: \ud83e\udd18 :metal: \ud83d\udd95 :fu: \ud83d\udeb6 :walking: \ud83c\udfc3 :runner: \ud83c\udfc3 :running: \ud83d\udc6b :couple: \ud83d\udc6a :family: \ud83d\udc6c :two_men_holding_hands: \ud83d\udc6d :two_women_holding_hands: \ud83d\udc83 :dancer: \ud83d\udc6f :dancers: \ud83d\ude46 :ok_woman: \ud83d\ude45 :no_good: \ud83d\udc81 :information_desk_person: \ud83d\ude4b :raising_hand: \ud83d\udc70 :bride_with_veil: \ud83d\ude4e :person_with_pouting_face: \ud83d\ude4d :person_frowning: \ud83d\ude47 :bow: :couplekiss: \ud83d\udc91 :couple_with_heart: \ud83d\udc86 :massage: \ud83d\udc87 :haircut: \ud83d\udc85 :nail_care: \ud83d\udc66 :boy: \ud83d\udc67 :girl: \ud83d\udc69 :woman: \ud83d\udc68 :man: \ud83d\udc76 :baby: \ud83d\udc75 :older_woman: \ud83d\udc74 :older_man: \ud83d\udc71 :person_with_blond_hair: \ud83d\udc72 :man_with_gua_pi_mao: \ud83d\udc73 :man_with_turban: \ud83d\udc77 :construction_worker: \ud83d\udc6e :cop: \ud83d\udc7c :angel: \ud83d\udc78 :princess: \ud83d\ude3a :smiley_cat: \ud83d\ude38 :smile_cat: \ud83d\ude3b :heart_eyes_cat: \ud83d\ude3d :kissing_cat: \ud83d\ude3c :smirk_cat: \ud83d\ude40 :scream_cat: \ud83d\ude3f :crying_cat_face: \ud83d\ude39 :joy_cat: \ud83d\ude3e :pouting_cat: \ud83d\udc79 :japanese_ogre: \ud83d\udc7a :japanese_goblin: \ud83d\ude48 :see_no_evil: \ud83d\ude49 :hear_no_evil: \ud83d\ude4a :speak_no_evil: \ud83d\udc82 :guardsman: \ud83d\udc80 :skull: \ud83d\udc3e :feet: \ud83d\udc44 :lips: \ud83d\udc8b :kiss: \ud83d\udca7 :droplet: \ud83d\udc42 :ear: \ud83d\udc40 :eyes: \ud83d\udc43 :nose: \ud83d\udc45 :tongue: \ud83d\udc8c :love_letter: \ud83d\udc64 :bust_in_silhouette: \ud83d\udc65 :busts_in_silhouette: \ud83d\udcac :speech_balloon: \ud83d\udcad :thought_balloon:","title":"People"},{"location":"Rule/%E9%80%9F%E6%9F%A5/#nature","text":"\u2600\ufe0f :sunny: \u2614\ufe0f :umbrella: \u2601\ufe0f :cloud: \u2744\ufe0f :snowflake: \u26c4\ufe0f :snowman: \u26a1\ufe0f :zap: \ud83c\udf00 :cyclone: \ud83c\udf01 :foggy: \ud83c\udf0a :ocean: \ud83d\udc31 :cat: \ud83d\udc36 :dog: \ud83d\udc2d :mouse: \ud83d\udc39 :hamster: \ud83d\udc30 :rabbit: \ud83d\udc3a :wolf: \ud83d\udc38 :frog: \ud83d\udc2f :tiger: \ud83d\udc28 :koala: \ud83d\udc3b :bear: \ud83d\udc37 :pig: \ud83d\udc3d :pig_nose: \ud83d\udc2e :cow: \ud83d\udc17 :boar: \ud83d\udc35 :monkey_face: \ud83d\udc12 :monkey: \ud83d\udc34 :horse: \ud83d\udc0e :racehorse: \ud83d\udc2b :camel: \ud83d\udc11 :sheep: \ud83d\udc18 :elephant: \ud83d\udc3c :panda_face: \ud83d\udc0d :snake: \ud83d\udc26 :bird: \ud83d\udc24 :baby_chick: \ud83d\udc25 :hatched_chick: \ud83d\udc23 :hatching_chick: \ud83d\udc14 :chicken: \ud83d\udc27 :penguin: \ud83d\udc22 :turtle: \ud83d\udc1b :bug: \ud83d\udc1d :honeybee: \ud83d\udc1c :ant: \ud83d\udc1e :beetle: \ud83d\udc0c :snail: \ud83d\udc19 :octopus: \ud83d\udc20 :tropical_fish: \ud83d\udc1f :fish: \ud83d\udc33 :whale: \ud83d\udc0b :whale2: \ud83d\udc2c :dolphin: \ud83d\udc04 :cow2: \ud83d\udc0f :ram: \ud83d\udc00 :rat: \ud83d\udc03 :water_buffalo: \ud83d\udc05 :tiger2: \ud83d\udc07 :rabbit2: \ud83d\udc09 :dragon: \ud83d\udc10 :goat: \ud83d\udc13 :rooster: \ud83d\udc15 :dog2: \ud83d\udc16 :pig2: \ud83d\udc01 :mouse2: \ud83d\udc02 :ox: \ud83d\udc32 :dragon_face: \ud83d\udc21 :blowfish: \ud83d\udc0a :crocodile: \ud83d\udc2a :dromedary_camel: \ud83d\udc06 :leopard: \ud83d\udc08 :cat2: \ud83d\udc29 :poodle: \ud83d\udc3e :paw_prints: \ud83d\udc90 :bouquet: \ud83c\udf38 :cherry_blossom: \ud83c\udf37 :tulip: \ud83c\udf40 :four_leaf_clover: \ud83c\udf39 :rose: \ud83c\udf3b :sunflower: \ud83c\udf3a :hibiscus: \ud83c\udf41 :maple_leaf: \ud83c\udf43 :leaves: \ud83c\udf42 :fallen_leaf: \ud83c\udf3f :herb: \ud83c\udf44 :mushroom: \ud83c\udf35 :cactus: \ud83c\udf34 :palm_tree: \ud83c\udf32 :evergreen_tree: \ud83c\udf33 :deciduous_tree: \ud83c\udf30 :chestnut: \ud83c\udf31 :seedling: \ud83c\udf3c :blossom: \ud83c\udf3e :ear_of_rice: \ud83d\udc1a :shell: \ud83c\udf10 :globe_with_meridians: \ud83c\udf1e :sun_with_face: \ud83c\udf1d :full_moon_with_face: \ud83c\udf1a :new_moon_with_face: \ud83c\udf11 :new_moon: \ud83c\udf12 :waxing_crescent_moon: \ud83c\udf13 :first_quarter_moon: \ud83c\udf14 :waxing_gibbous_moon: \ud83c\udf15 :full_moon: \ud83c\udf16 :waning_gibbous_moon: \ud83c\udf17 :last_quarter_moon: \ud83c\udf18 :waning_crescent_moon: \ud83c\udf1c :last_quarter_moon_with_face: \ud83c\udf1b :first_quarter_moon_with_face: \ud83c\udf14 :moon: \ud83c\udf0d :earth_africa: \ud83c\udf0e :earth_americas: \ud83c\udf0f :earth_asia: \ud83c\udf0b :volcano: \ud83c\udf0c :milky_way: \u26c5\ufe0f :partly_sunny:","title":"Nature"},{"location":"Rule/%E9%80%9F%E6%9F%A5/#object","text":"\ud83c\udf8d :bamboo: \ud83d\udc9d :gift_heart: \ud83c\udf8e :dolls: \ud83c\udf92 :school_satchel: \ud83c\udf93 :mortar_board: \ud83c\udf8f :flags: \ud83c\udf86 :fireworks: \ud83c\udf87 :sparkler: \ud83c\udf90 :wind_chime: \ud83c\udf91 :rice_scene: \ud83c\udf83 :jack_o_lantern: \ud83d\udc7b :ghost: \ud83c\udf85 :santa: \ud83c\udf84 :christmas_tree: \ud83c\udf81 :gift: \ud83d\udd14 :bell: \ud83d\udd15 :no_bell: \ud83c\udf8b :tanabata_tree: \ud83c\udf89 :tada: \ud83c\udf8a :confetti_ball: \ud83c\udf88 :balloon: \ud83d\udd2e :crystal_ball: \ud83d\udcbf :cd: \ud83d\udcc0 :dvd: \ud83d\udcbe :floppy_disk: \ud83d\udcf7 :camera: \ud83d\udcf9 :video_camera: \ud83c\udfa5 :movie_camera: \ud83d\udcbb :computer: \ud83d\udcfa :tv: \ud83d\udcf1 :iphone: \u260e\ufe0f :phone: \u260e\ufe0f :telephone: \ud83d\udcde :telephone_receiver: \ud83d\udcdf :pager: \ud83d\udce0 :fax: \ud83d\udcbd :minidisc: \ud83d\udcfc :vhs: \ud83d\udd09 :sound: \ud83d\udd08 :speaker: \ud83d\udd07 :mute: \ud83d\udce2 :loudspeaker: \ud83d\udce3 :mega: \u231b\ufe0f :hourglass: \u23f3 :hourglass_flowing_sand: \u23f0 :alarm_clock: \u231a\ufe0f :watch: \ud83d\udcfb :radio: \ud83d\udce1 :satellite: \u27bf :loop: \ud83d\udd0d :mag: \ud83d\udd0e :mag_right: \ud83d\udd13 :unlock: \ud83d\udd12 :lock: \ud83d\udd0f :lock_with_ink_pen: \ud83d\udd10 :closed_lock_with_key: \ud83d\udd11 :key: \ud83d\udca1 :bulb: \ud83d\udd26 :flashlight: \ud83d\udd06 :high_brightness: \ud83d\udd05 :low_brightness: \ud83d\udd0c :electric_plug: \ud83d\udd0b :battery: \ud83d\udcf2 :calling: \u2709\ufe0f :email: \ud83d\udceb :mailbox: \ud83d\udcee :postbox: \ud83d\udec0 :bath: \ud83d\udec1 :bathtub: \ud83d\udebf :shower: \ud83d\udebd :toilet: \ud83d\udd27 :wrench: \ud83d\udd29 :nut_and_bolt: \ud83d\udd28 :hammer: \ud83d\udcba :seat: \ud83d\udcb0 :moneybag: \ud83d\udcb4 :yen: \ud83d\udcb5 :dollar: \ud83d\udcb7 :pound: \ud83d\udcb6 :euro: \ud83d\udcb3 :credit_card: \ud83d\udcb8 :money_with_wings: \ud83d\udce7 :e-mail: \ud83d\udce5 :inbox_tray: \ud83d\udce4 :outbox_tray: \u2709\ufe0f :envelope: \ud83d\udce8 :incoming_envelope: \ud83d\udcef :postal_horn: \ud83d\udcea :mailbox_closed: \ud83d\udcec :mailbox_with_mail: \ud83d\udced :mailbox_with_no_mail: \ud83d\udeaa :door: \ud83d\udeac :smoking: \ud83d\udca3 :bomb: \ud83d\udd2b :gun: \ud83d\udd2a :hocho: \ud83d\udc8a :pill: \ud83d\udc89 :syringe: \ud83d\udcc4 :page_facing_up: \ud83d\udcc3 :page_with_curl: \ud83d\udcd1 :bookmark_tabs: \ud83d\udcca :bar_chart: \ud83d\udcc8 :chart_with_upwards_trend: \ud83d\udcc9 :chart_with_downwards_trend: \ud83d\udcdc :scroll: \ud83d\udccb :clipboard: \ud83d\udcc6 :calendar: \ud83d\udcc5 :date: \ud83d\udcc7 :card_index: \ud83d\udcc1 :file_folder: \ud83d\udcc2 :open_file_folder: \u2702\ufe0f :scissors: \ud83d\udccc :pushpin: \ud83d\udcce :paperclip: \u2712\ufe0f :black_nib: \u270f\ufe0f :pencil2: \ud83d\udccf :straight_ruler: \ud83d\udcd0 :triangular_ruler: \ud83d\udcd5 :closed_book: \ud83d\udcd7 :green_book: \ud83d\udcd8 :blue_book: \ud83d\udcd9 :orange_book: \ud83d\udcd3 :notebook: \ud83d\udcd4 :notebook_with_decorative_cover: \ud83d\udcd2 :ledger: \ud83d\udcda :books: \ud83d\udd16 :bookmark: \ud83d\udcdb :name_badge: \ud83d\udd2c :microscope: \ud83d\udd2d :telescope: \ud83d\udcf0 :newspaper: \ud83c\udfc8 :football: \ud83c\udfc0 :basketball: \u26bd\ufe0f :soccer: \u26be\ufe0f :baseball: \ud83c\udfbe :tennis: \ud83c\udfb1 :8ball: \ud83c\udfc9 :rugby_football: \ud83c\udfb3 :bowling: \u26f3\ufe0f :golf: \ud83d\udeb5 :mountain_bicyclist: \ud83d\udeb4 :bicyclist: \ud83c\udfc7 :horse_racing: \ud83c\udfc2 :snowboarder: \ud83c\udfca :swimmer: \ud83c\udfc4 :surfer: \ud83c\udfbf :ski: \u2660\ufe0f :spades: \u2665\ufe0f :hearts: \u2663\ufe0f :clubs: \u2666\ufe0f :diamonds: \ud83d\udc8e :gem: \ud83d\udc8d :ring: \ud83c\udfc6 :trophy: \ud83c\udfbc :musical_score: \ud83c\udfb9 :musical_keyboard: \ud83c\udfbb :violin: \ud83d\udc7e :space_invader: \ud83c\udfae :video_game: \ud83c\udccf :black_joker: \ud83c\udfb4 :flower_playing_cards: \ud83c\udfb2 :game_die: \ud83c\udfaf :dart: \ud83c\udc04\ufe0f :mahjong: \ud83c\udfac :clapper: \ud83d\udcdd :memo: \ud83d\udcdd :pencil: \ud83d\udcd6 :book: \ud83c\udfa8 :art: \ud83c\udfa4 :microphone: \ud83c\udfa7 :headphones: \ud83c\udfba :trumpet: \ud83c\udfb7 :saxophone: \ud83c\udfb8 :guitar: \ud83d\udc5e :shoe: \ud83d\udc61 :sandal: \ud83d\udc60 :high_heel: \ud83d\udc84 :lipstick: \ud83d\udc62 :boot: \ud83d\udc55 :shirt: \ud83d\udc55 :tshirt: \ud83d\udc54 :necktie: \ud83d\udc5a :womans_clothes: \ud83d\udc57 :dress: \ud83c\udfbd :running_shirt_with_sash: \ud83d\udc56 :jeans: \ud83d\udc58 :kimono: \ud83d\udc59 :bikini: \ud83c\udf80 :ribbon: \ud83c\udfa9 :tophat: \ud83d\udc51 :crown: \ud83d\udc52 :womans_hat: \ud83d\udc5e :mans_shoe: \ud83c\udf02 :closed_umbrella: \ud83d\udcbc :briefcase: \ud83d\udc5c :handbag: \ud83d\udc5d :pouch: \ud83d\udc5b :purse: \ud83d\udc53 :eyeglasses: \ud83c\udfa3 :fishing_pole_and_fish: \u2615\ufe0f :coffee: \ud83c\udf75 :tea: \ud83c\udf76 :sake: \ud83c\udf7c :baby_bottle: \ud83c\udf7a :beer: \ud83c\udf7b :beers: \ud83c\udf78 :cocktail: \ud83c\udf79 :tropical_drink: \ud83c\udf77 :wine_glass: \ud83c\udf74 :fork_and_knife: \ud83c\udf55 :pizza: \ud83c\udf54 :hamburger: \ud83c\udf5f :fries: \ud83c\udf57 :poultry_leg: \ud83c\udf56 :meat_on_bone: \ud83c\udf5d :spaghetti: \ud83c\udf5b :curry: \ud83c\udf64 :fried_shrimp: \ud83c\udf71 :bento: \ud83c\udf63 :sushi: \ud83c\udf65 :fish_cake: \ud83c\udf59 :rice_ball: \ud83c\udf58 :rice_cracker: \ud83c\udf5a :rice: \ud83c\udf5c :ramen: \ud83c\udf72 :stew: \ud83c\udf62 :oden: \ud83c\udf61 :dango: \ud83e\udd5a :egg: \ud83c\udf5e :bread: \ud83c\udf69 :doughnut: \ud83c\udf6e :custard: \ud83c\udf66 :icecream: \ud83c\udf68 :ice_cream: \ud83c\udf67 :shaved_ice: \ud83c\udf82 :birthday: \ud83c\udf70 :cake: \ud83c\udf6a :cookie: \ud83c\udf6b :chocolate_bar: \ud83c\udf6c :candy: \ud83c\udf6d :lollipop: \ud83c\udf6f :honey_pot: \ud83c\udf4e :apple: \ud83c\udf4f :green_apple: \ud83c\udf4a :tangerine: \ud83c\udf4b :lemon: \ud83c\udf52 :cherries: \ud83c\udf47 :grapes: \ud83c\udf49 :watermelon: \ud83c\udf53 :strawberry: \ud83c\udf51 :peach: \ud83c\udf48 :melon: \ud83c\udf4c :banana: \ud83c\udf50 :pear: \ud83c\udf4d :pineapple: \ud83c\udf60 :sweet_potato: \ud83c\udf46 :eggplant: \ud83c\udf45 :tomato: \ud83c\udf3d :corn:","title":"Object"},{"location":"Rule/%E9%80%9F%E6%9F%A5/#places","text":"\ud83c\udfe0 :house: \ud83c\udfe1 :house_with_garden: \ud83c\udfeb :school: \ud83c\udfe2 :office: \ud83c\udfe3 :post_office: \ud83c\udfe5 :hospital: \ud83c\udfe6 :bank: \ud83c\udfea :convenience_store: \ud83c\udfe9 :love_hotel: \ud83c\udfe8 :hotel: \ud83d\udc92 :wedding: \u26ea\ufe0f :church: \ud83c\udfec :department_store: \ud83c\udfe4 :european_post_office: \ud83c\udf07 :city_sunrise: \ud83c\udf06 :city_sunset: \ud83c\udfef :japanese_castle: \ud83c\udff0 :european_castle: \u26fa\ufe0f :tent: \ud83c\udfed :factory: \ud83d\uddfc :tokyo_tower: \ud83d\uddfe :japan: \ud83d\uddfb :mount_fuji: \ud83c\udf04 :sunrise_over_mountains: \ud83c\udf05 :sunrise: \ud83c\udf20 :stars: \ud83d\uddfd :statue_of_liberty: \ud83c\udf09 :bridge_at_night: \ud83c\udfa0 :carousel_horse: \ud83c\udf08 :rainbow: \ud83c\udfa1 :ferris_wheel: \u26f2\ufe0f :fountain: \ud83c\udfa2 :roller_coaster: \ud83d\udea2 :ship: \ud83d\udea4 :speedboat: \u26f5\ufe0f :boat: \u26f5\ufe0f :sailboat: \ud83d\udea3 :rowboat: \u2693\ufe0f :anchor: \ud83d\ude80 :rocket: \u2708\ufe0f :airplane: \ud83d\ude81 :helicopter: \ud83d\ude82 :steam_locomotive: \ud83d\ude8a :tram: \ud83d\ude9e :mountain_railway: \ud83d\udeb2 :bike: \ud83d\udea1 :aerial_tramway: \ud83d\ude9f :suspension_railway: \ud83d\udea0 :mountain_cableway: \ud83d\ude9c :tractor: \ud83d\ude99 :blue_car: \ud83d\ude98 :oncoming_automobile: \ud83d\ude97 :car: \ud83d\ude97 :red_car: \ud83d\ude95 :taxi: \ud83d\ude96 :oncoming_taxi: \ud83d\ude9b :articulated_lorry: \ud83d\ude8c :bus: \ud83d\ude8d :oncoming_bus: \ud83d\udea8 :rotating_light: \ud83d\ude93 :police_car: \ud83d\ude94 :oncoming_police_car: \ud83d\ude92 :fire_engine: \ud83d\ude91 :ambulance: \ud83d\ude90 :minibus: \ud83d\ude9a :truck: \ud83d\ude8b :train: \ud83d\ude89 :station: \ud83d\ude86 :train2: \ud83d\ude85 :bullettrain_front: \ud83d\ude84 :bullettrain_side: \ud83d\ude88 :light_rail: \ud83d\ude9d :monorail: \ud83d\ude83 :railway_car: \ud83d\ude8e :trolleybus: \ud83c\udfab :ticket: \u26fd\ufe0f :fuelpump: \ud83d\udea6 :vertical_traffic_light: \ud83d\udea5 :traffic_light: \u26a0\ufe0f :warning: \ud83d\udea7 :construction: \ud83d\udd30 :beginner: \ud83c\udfe7 :atm: \ud83c\udfb0 :slot_machine: \ud83d\ude8f :busstop: \ud83d\udc88 :barber: \u2668\ufe0f :hotsprings: \ud83c\udfc1 :checkered_flag: \ud83c\udf8c :crossed_flags: \ud83c\udfee :izakaya_lantern: \ud83d\uddff :moyai: \ud83c\udfaa :circus_tent: \ud83c\udfad :performing_arts: \ud83d\udccd :round_pushpin: \ud83d\udea9 :triangular_flag_on_post: \ud83c\uddef\ud83c\uddf5 :jp: \ud83c\uddf0\ud83c\uddf7 :kr: \ud83c\udde8\ud83c\uddf3 :cn: \ud83c\uddfa\ud83c\uddf8 :us: \ud83c\uddeb\ud83c\uddf7 :fr: \ud83c\uddea\ud83c\uddf8 :es: \ud83c\uddee\ud83c\uddf9 :it: \ud83c\uddf7\ud83c\uddfa :ru: \ud83c\uddec\ud83c\udde7 :gb: \ud83c\uddec\ud83c\udde7 :uk: \ud83c\udde9\ud83c\uddea :de:","title":"Places"},{"location":"Rule/%E9%80%9F%E6%9F%A5/#symbols","text":"1\ufe0f\u20e3 :one: 2\ufe0f\u20e3 :two: 3\ufe0f\u20e3 :three: 4\ufe0f\u20e3 :four: 5\ufe0f\u20e3 :five: 6\ufe0f\u20e3 :six: 7\ufe0f\u20e3 :seven: 8\ufe0f\u20e3 :eight: 9\ufe0f\u20e3 :nine: \ud83d\udd1f :keycap_ten: \ud83d\udd22 :1234: 0\ufe0f\u20e3 :zero: #\ufe0f\u20e3 :hash: \ud83d\udd23 :symbols: \u25c0\ufe0f :arrow_backward: \u2b07\ufe0f :arrow_down: \u25b6\ufe0f :arrow_forward: \u2b05\ufe0f :arrow_left: \ud83d\udd20 :capital_abcd: \ud83d\udd21 :abcd: \ud83d\udd24 :abc: \u2199\ufe0f :arrow_lower_left: \u2198\ufe0f :arrow_lower_right: \u27a1\ufe0f :arrow_right: \u2b06\ufe0f :arrow_up: \u2196\ufe0f :arrow_upper_left: \u2197\ufe0f :arrow_upper_right: \u23ec :arrow_double_down: \u23eb :arrow_double_up: \ud83d\udd3d :arrow_down_small: \u2935\ufe0f :arrow_heading_down: \u2934\ufe0f :arrow_heading_up: \u21a9\ufe0f :leftwards_arrow_with_hook: \u21aa\ufe0f :arrow_right_hook: \u2194\ufe0f :left_right_arrow: \u2195\ufe0f :arrow_up_down: \ud83d\udd3c :arrow_up_small: \ud83d\udd03 :arrows_clockwise: \ud83d\udd04 :arrows_counterclockwise: \u23ea :rewind: \u23e9 :fast_forward: \u2139\ufe0f :information_source: \ud83c\udd97 :ok: \ud83d\udd00 :twisted_rightwards_arrows: \ud83d\udd01 :repeat: \ud83d\udd02 :repeat_one: \ud83c\udd95 :new: \ud83d\udd1d :top: \ud83c\udd99 :up: \ud83c\udd92 :cool: \ud83c\udd93 :free: \ud83c\udd96 :ng: \ud83c\udfa6 :cinema: \ud83c\ude01 :koko: \ud83d\udcf6 :signal_strength: \ud83c\ude39 :u5272: \ud83c\ude34 :u5408: \ud83c\ude3a :u55b6: \ud83c\ude2f\ufe0f :u6307: \ud83c\ude37\ufe0f :u6708: \ud83c\ude36 :u6709: \ud83c\ude35 :u6e80: \ud83c\ude1a\ufe0f :u7121: \ud83c\ude38 :u7533: \ud83c\ude33 :u7a7a: \ud83c\ude32 :u7981: \ud83c\ude02\ufe0f :sa: \ud83d\udebb :restroom: \ud83d\udeb9 :mens: \ud83d\udeba :womens: \ud83d\udebc :baby_symbol: \ud83d\udead :no_smoking: \ud83c\udd7f\ufe0f :parking: \u267f\ufe0f :wheelchair: \ud83d\ude87 :metro: \ud83d\udec4 :baggage_claim: \ud83c\ude51 :accept: \ud83d\udebe :wc: \ud83d\udeb0 :potable_water: \ud83d\udeae :put_litter_in_its_place: \u3299\ufe0f :secret: \u3297\ufe0f :congratulations: \u24c2\ufe0f :m: \ud83d\udec2 :passport_control: \ud83d\udec5 :left_luggage: \ud83d\udec3 :customs: \ud83c\ude50 :ideograph_advantage: \ud83c\udd91 :cl: \ud83c\udd98 :sos: \ud83c\udd94 :id: \ud83d\udeab :no_entry_sign: \ud83d\udd1e :underage: \ud83d\udcf5 :no_mobile_phones: \ud83d\udeaf :do_not_litter: \ud83d\udeb1 :non-potable_water: \ud83d\udeb3 :no_bicycles: \ud83d\udeb7 :no_pedestrians: \ud83d\udeb8 :children_crossing: \u26d4\ufe0f :no_entry: \u2733\ufe0f :eight_spoked_asterisk: \u2734\ufe0f :eight_pointed_black_star: \ud83d\udc9f :heart_decoration: \ud83c\udd9a :vs: \ud83d\udcf3 :vibration_mode: \ud83d\udcf4 :mobile_phone_off: \ud83d\udcb9 :chart: \ud83d\udcb1 :currency_exchange: \u2648\ufe0f :aries: \u2649\ufe0f :taurus: \u264a\ufe0f :gemini: \u264b\ufe0f :cancer: \u264c\ufe0f :leo: \u264d\ufe0f :virgo: \u264e\ufe0f :libra: \u264f\ufe0f :scorpius: \u2650\ufe0f :sagittarius: \u2651\ufe0f :capricorn: \u2652\ufe0f :aquarius: \u2653\ufe0f :pisces: \u26ce :ophiuchus: \ud83d\udd2f :six_pointed_star: \u274e :negative_squared_cross_mark: \ud83c\udd70\ufe0f :a: \ud83c\udd71\ufe0f :b: \ud83c\udd8e :ab: \ud83c\udd7e\ufe0f :o2: \ud83d\udca0 :diamond_shape_with_a_dot_inside: \u267b\ufe0f :recycle: \ud83d\udd1a :end: \ud83d\udd1b :on: \ud83d\udd1c :soon: \ud83d\udd50 :clock1: \ud83d\udd5c :clock130: \ud83d\udd59 :clock10: \ud83d\udd65 :clock1030: \ud83d\udd5a :clock11: \ud83d\udd66 :clock1130: \ud83d\udd5b :clock12: \ud83d\udd67 :clock1230: \ud83d\udd51 :clock2: \ud83d\udd5d :clock230: \ud83d\udd52 :clock3: \ud83d\udd5e :clock330: \ud83d\udd53 :clock4: \ud83d\udd5f :clock430: \ud83d\udd54 :clock5: \ud83d\udd60 :clock530: \ud83d\udd55 :clock6: \ud83d\udd61 :clock630: \ud83d\udd56 :clock7: \ud83d\udd62 :clock730: \ud83d\udd57 :clock8: \ud83d\udd63 :clock830: \ud83d\udd58 :clock9: \ud83d\udd64 :clock930: \ud83d\udcb2 :heavy_dollar_sign: \u00a9\ufe0f :copyright: \u00ae\ufe0f :registered: \u2122\ufe0f :tm: \u274c :x: \u2757\ufe0f :heavy_exclamation_mark: \u203c\ufe0f :bangbang: \u2049\ufe0f :interrobang: \u2b55\ufe0f :o: \u2716\ufe0f :heavy_multiplication_x: \u2795 :heavy_plus_sign: \u2796 :heavy_minus_sign: \u2797 :heavy_division_sign: \ud83d\udcae :white_flower: \ud83d\udcaf :100: \u2714\ufe0f :heavy_check_mark: \u2611\ufe0f :ballot_box_with_check: \ud83d\udd18 :radio_button: \ud83d\udd17 :link: \u27b0 :curly_loop: \u3030\ufe0f :wavy_dash: \u303d\ufe0f :part_alternation_mark: \u2705 :white_check_mark: \ud83d\udd32 :black_square_button: \ud83d\udd33 :white_square_button: \u26ab\ufe0f :black_circle: \u26aa\ufe0f :white_circle: \ud83d\udd34 :red_circle: \ud83d\udd35 :large_blue_circle: \ud83d\udd37 :large_blue_diamond: \ud83d\udd36 :large_orange_diamond: \ud83d\udd39 :small_blue_diamond: \ud83d\udd38 :small_orange_diamond: \ud83d\udd3a :small_red_triangle: \ud83d\udd3b :small_red_triangle_down: \ud83d\udd31 `","title":"Symbols"},{"location":"SeismicInversion/","text":"\u8fd9\u662f\u6211\u7684\u4e3b\u8981\u7814\u7a76\u65b9\u5411 \u8bb0\u5f55\u5b66\u4e60\u8bb0\u5f55\u4ee5\u53ca\u8bba\u6587\u89e3\u8bfb\uff0c\u65b9\u4fbf\u590d\u4e60","title":"\u4e13\u680f\u4ecb\u7ecd"},{"location":"SeismicInversion/Basic/","text":"\u5730\u9707\u4fe1\u53f7\u53cd\u6f14 \u00b6 \u53c2\u8003\uff1a https://www.geoexpro.com/articles/2013/08/geophysics-a-simple-guide-to-seismic-inversion \u53cd\u6f14\u7684\u6982\u5ff5 \u00b6 \u6b63\u6f14 \u901a\u8fc7\u5df2\u77e5\u7684\u5730\u8d28\u6a21\u578b\u6765\u5f97\u5230\u53c2\u6570 \u53cd\u6f14 \u901a\u8fc7\u6d4b\u91cf\u5230\u7684\u6570\u503c\u6765\u4f30\u8ba1\u5b9e\u9645\u6a21\u578b\uff0c\u57fa\u4e8e\u58f0\u6ce2\u6d4b\u91cf\u7684\u53cd\u6f14\uff0c\u7ecf\u5e38\u7528\u4f5c\u6821\u51c6\u5ca9\u77f3\u5c5e\u6027\u3002 \u53cd\u6f14(Seismic inversion) \u00b6 \u5373\u901a\u8fc7\u6d4b\u91cf\u7684\u53cd\u5c04\u6570\u636e\u5f97\u5230\u5ca9\u77f3\u7684\u5c5e\u6027\uff08\u79f0\u4e3a\u963b\u6297\uff0c\u58f0\u901f\u548c\u4f53\u79ef\u5bc6\u5ea6\u7684\u4e58\u79ef\uff09 \u5f3a\u632f\u5e45\u4e0e\u5ca9\u77f3\u8fb9\u754c\u6709\u5173\uff0c\u5728\u53cd\u5411\u6570\u636e\u96c6\u4e2d\uff0c\u632f\u5e45\u4ee3\u8868\u5ca9\u77f3\u5185\u90e8\u6027\u8d28\u3002 \u786e\u5b9a\u6027\u53cd\u6f14(Deterministic Inversion) \u00b6 \u5c06\u7f3a\u5931\u7684\u4f4e\u9891\u4fe1\u53f7\u5f15\u5165\u53cd\u6f14\uff0c\u4ece\u800c\u5f97\u5230\u8d8b\u52bf\u3002\u4f46\u662f\u4f4e\u9891\u8fd9\u4e00\u90e8\u5206\u53ea\u662f\u7b80\u5355\u5efa\u6a21\u5e76\u52a0\u5165\u76f8\u5bf9\u963b\u6297\u4e2d\u3002 \u6ce8\u610f \u6709\u53ef\u80fd\u8fd9\u4e2a\u8d8b\u52bf\u4e0d\u662f\u7531\u4e8e\u5730\u9707\u53cd\u5c04\u6ce2\u5f15\u8d77\u7684\uff0c\u800c\u662f\u5e73\u6ed1\u7684\u6a21\u578b\u5e26\u6765\u7684\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u89e3\u91ca\u7684\u662f\u5730\u9707\u6570\u636e\uff0c\u800c\u4e0d\u662f\u6a21\u578b\u3002 deterministic inversion = relative inversion + model \u8054\u5408\u53cd\u6f14(Simultaneous Inversion) \u00b6 \u5730\u9707\u6570\u636e\u5305\u542b\u6709\u5173\u5730\u7403\u5ca9\u77f3\u6027\u8d28\u7684\u9644\u52a0\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u5bf9\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884c\u53cd\u6f14\u3002\u5b83\u5229\u7528pre-stack gather(\u6216\u8be5\u6570\u636e\u7684\u90e8\u5206\u53e0\u52a0\uff0c\u5982 \u89d2\u5ea6\u53e0\u52a0 )\u540c\u65f6\u53cd\u6f14\u591a\u4e2a\u5ca9\u77f3\u5c5e\u6027\u53c2\u6570\u3002\u4e5f\u662f\u4e00\u79cd\u786e\u5b9a\u6027\u53cd\u6f14\uff0c\u6240\u4ee5\u4e5f\u8981 \u6ce8\u610f \u4e0a\u9762\u7684\u95ee\u9898\u3002\u6700\u540e\u901a\u8fc7\u9ad8\u901a\u6ee4\u6ce2\u628a\u6a21\u578b\u6ee4\u6389\u66f4\u5b89\u5168\u3002 EEI(Extended Elastic impedance) Inversion \u00b6 \u53cd\u6f14\u524d\u6267\u884c\u67d0\u79cd\u7c7b\u578b\u7684\u6821\u51c6\uff0c\u4f7f\u7528\u7279\u6b8a\u89d2\u5ea6\u9879 \\chi \\chi \uff0c\u5b83\u7684\u6295\u5f71\u8303\u56f4\u4ece-90\u00b0 \u5230 +90\u00b0\u3002\u53ef\u4e3a\u6570\u636e\u627e\u5230\u4e24\u4e2a\u7279\u5f81\u89d2\uff0c\u6700\u5927\u632f\u5e45\u4ee3\u8868\u5ca9\u4f53\u7acb\u65b9\uff0c\u6700\u5c0f\u632f\u5e45\u4ee3\u8868\u6d41\u4f53\u7acb\u65b9 \u968f\u673a\u53cd\u6f14(Stochastic Inversion) \u00b6 \u5b83\u6d88\u9664\u4e86\u8c03\u8c10\u6548\u5e94\uff0c\u5bf9\u4e0d\u786e\u5b9a\u6027\u5efa\u6a21\uff0c\u53ef\u4ee5\u5728\u7ec6\u5c3a\u5ea6\u4e0a\u8fdb\u884c\u8ba1\u7b97;\u4f46\u662f\u6709\u66f4\u9ad8\u7684\u6210\u672c\u548c\u5927\u91cf\u6570\u636e\u3002 \u5efa\u6a21 \u00b6 \u8c03\u8c10\u95ee\u9898 \u00b6 \u53cd\u6f14\u632f\u5e45\u4e0d\u4ec5\u4e0e\u5ca9\u77f3\u6027\u8d28\u6709\u5173\uff0c\u8fd8\u4e0e\u5730\u5c42\u539a\u5ea6\u6709\u5173\u3002\u5982\u679c\u539a\u5ea6\u63a5\u8fd1\u7279\u5b9a\u5730\u9707\u7684\u201c\u8c03\u8c10\u201d\u9891\u7387\uff0c\u90a3\u4e48\u632f\u5e45\u53ef\u80fd\u4f1a\u6bd4\u5b9e\u9645\u60c5\u51b5\u660e\u663e\uff0c\u53ef\u80fd\u5bfc\u81f4\u5730\u5c42\u539a\u5ea6\u7684\u53d8\u5316\u88ab\u8bef\u89e3\u4e3a\u5ca9\u77f3\u6027\u8d28\u7684\u53d8\u5316\uff0c\u6240\u4ee5\u8981\u8fdb\u884c\u53bb\u9664\u8c03\u8c10\u6548\u5e94\u3002 \u5206\u8fa8\u7387\u4e0d\u4e00\u81f4\u95ee\u9898 \u00b6 \u6a21\u578b\u548c\u5730\u9707\u963b\u6297\u4e4b\u95f4\u5728\u5782\u76f4\u5206\u8fa8\u7387\u4e0a\u7684\u5de8\u5927\u5dee\u5f02\uff0c\u6a21\u578b\u5206\u8fa8\u7387\u9ad8\uff0c\u4f1a\u4ea7\u751f\u8bef\u5bfc\u6027\u7684\u6d41\u4f53\u6d41\u52a8\u7279\u5f81\u3002 \u9519\u8bef\u7684\u8d8b\u52bf\u95ee\u9898 \u00b6 \u4e4b\u524d\u786e\u5b9a\u6027\u53cd\u6f14\u6709\u63d0\u5230\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u9075\u5faa\u6a21\u578b\u7684\u9519\u8bef\u8d8b\u52bf\uff0c\u56e0\u6b64\u8981\u5c06\u6a21\u578b\u53bb\u9664\u3002 \u76f8\u5173\u6982\u5ff5 \u00b6 \u76f8\u5bf9\u963b\u6297(relative impedance) \u00b6 \u662f\u76f4\u63a5\u4ece\u6ca1\u6709\u6a21\u578b\u8f93\u5165\u7684\u5730\u9707\u6570\u636e\u4e2d\u4f30\u8ba1\u51fa\u6765\u7684\uff0c\u662f\u4e00\u79cd\u9c81\u68d2\u7684\u5730\u9707\u7279\u6027\u3002\u6570\u636e\u4e0d\u8bb0\u5f55\u4f4e\u9891\uff0c\u6545 \u65e0\u8d8b\u52bf \u5f69\u8272\u53cd\u6f14(colored inversion) p wave \u00b6 primary or pressure wave \u4e3b\u6ce2 \u53c2\u8003\uff1a https://en.wikipedia.org/wiki/P_wave \u5e73\u884c\u4e8e\u6ce2\u4f20\u64ad\u65b9\u5411\u7684\u8d28\u70b9\u8fd0\u52a8\u4f20\u64ad(\u58f0\u6ce2)\uff0c\u4f20\u64ad\u901f\u5ea6\u6bd4\u5176\u4ed6\u5730\u9707\u6ce2\u5feb\uff0c\u5f53\u5b83\u4eec\u901a\u8fc7\u534a\u56fa\u6001\u5730\u5e54\u548c\u6db2\u6001\u5916\u6838\u4e4b\u95f4\u7684\u8fc7\u6e21\u65f6\uff0c\u4f1a\u53d1\u751f\u8f7b\u5fae\u7684\u6298\u5c04\u3002\u56e0\u6b64\uff0c\u5728\u8ddd\u79bb\u9707\u6e90103\u00b0\u5230142\u00b0\u4e4b\u95f4\u6709\u4e00\u4e2aP\u6ce2\u201c\u9634\u5f71\u533a\u201d\uff0c\u65e0\u6cd5\u8bb0\u5f55\u3002 \u901f\u5ea6\u8ba1\u7b97\uff1a v_p=\\sqrt{\\frac{K+\\frac{4}{3}\\mu}{\\rho}}=\\sqrt{\\frac{\\lambda+2\\mu}{\\rho}}=\\sqrt{\\frac{M}{\\rho}} v_p=\\sqrt{\\frac{K+\\frac{4}{3}\\mu}{\\rho}}=\\sqrt{\\frac{\\lambda+2\\mu}{\\rho}}=\\sqrt{\\frac{M}{\\rho}} \u7531\u4e8e\u5bc6\u5ea6\u53d8\u5316\u5f88\u5c0f\uff0c\u6240\u4ee5\u4e3b\u8981\u7531 K\u548c\\mu K\u548c\\mu \u51b3\u5b9a s wave \u00b6 secondary or shear wave \u6b21\u6ce2 \u53c2\u8003\uff1a https://en.wikipedia.org/wiki/S_wave \u5782\u76f4\u4e8e\u6ce2\u4f20\u64ad\u65b9\u5411\u7684\u8d28\u70b9\u8fd0\u52a8\u4f20\u64ad,p\u6ce2\u5728\u975e\u6b63\u5165\u5c04\u65f6\u649e\u51fb\u754c\u9762\u4f1a\u4ea7\u751fs\u6ce2,\u6ce2\u901f\u4ec5\u6b21\u4e8eP\u6ce2\uff0cS\u6ce2\u65e0\u6cd5\u7a7f\u8d8a\u5916\u5730\u6838\uff0c\u56e0\u4e3a\u6d41\u4f53\u4e0d\u652f\u6301\u526a\u5207\uff0c\u6240\u4ee5S\u6ce2\u7684\u9634\u5f71\u533a\u6b63\u5bf9\u7740\u5730\u9707\u7684\u9707\u6e90\u3002 \u7c92\u5b50\u8fd0\u52a8\u4e0e\u4f20\u64ad\u65b9\u5411\u5728\u5782\u76f4\u9762\u5185\u4e3aSV-wave,\u7c92\u5b50\u8fd0\u52a8\u4e0e\u4f20\u64ad\u65b9\u5411\u5728\u6c34\u5e73\u9762\u8fdb\u884c\u4e3aSH-wave \u4ee5\u4e0a\u4e24\u79cd\u963b\u6297\u53ef\u901a\u8fc7\u7ed3\u5408\u5f97\u5230\u53e6\u5916\u4e24\u79cd\u5c5e\u6027, \\lambda\\rho \\lambda\\rho \u4e0e \\mu\\rho \\mu\\rho p\u6ce2\u963b\u6297(IP)\u548c \\lambda\\rho \\lambda\\rho \u6027\u8d28\u544a\u8bc9\u6211\u4eec\u5b54\u9699\u7a7a\u95f4\u7684\u5f71\u54cd\uff0c\u5982\u5b54\u9699\u5ea6\u548c\u78b3\u6c22\u5316\u5408\u7269(\u5b58\u5728\u6216\u9971\u548c\u5ea6)\u3002s\u6ce2\u963b\u6297(SI)\u548c\u03bc\u03c1\u53ef\u4ee5\u5728\u53bb\u9664\u5b54\u9699\u7a7a\u95f4\u548c\u6d41\u4f53\u7684\u5f71\u54cd\u540e\uff0c\u4e3a\u6211\u4eec\u63d0\u4f9b\u6709\u5173\u5ca9\u6027\u7684\u4fe1\u606f\u3002\u901a\u8fc7\u6bd4\u8f83\u6bcf\u79cd\u4ea7\u51fa\u7c7b\u578b\u4e4b\u95f4\u7684\u5ca9\u77f3\u6027\u8d28\u5f02\u5e38\uff0c\u5c31\u6709\u53ef\u80fd\u66f4\u597d\u5730\u4e86\u89e3\u5f02\u5e38\u662f\u5426\u53ef\u80fd\u662f\u7531\u5b54\u9699\u5ea6/\u9971\u548c\u5ea6\u53d8\u5316\u6216\u5ca9\u6027\u53d8\u5316\u5f15\u8d77\u7684\u3002 \u4e09\u9879\u53cd\u6f14 \uff1a\u5f97\u5230IP\uff0cSP,\u4f53\u5bc6\u5ea6\uff08sonic,shear,bulk density),\u4f53\u5bc6\u5ea6\u5f88\u96be\u5f97\u5230\uff0c\u5bf9\u5730\u9707\u5e45\u5ea6\u5f71\u54cd\u5f88\u5c0f\u4e14\u53ea\u5b58\u5728\u4e8e\u5927\u89d2\u5ea6\u60c5\u51b5\u4e0b(>40\u00b0) \u53cd\u5c04\u7cfb\u6570 \u00b6 \u8868\u793a\u53cd\u5c04\u6ce2\u4e0e\u5165\u5c04\u6ce2\u7684\u632f\u5e45\u6bd4\uff0c\u8be5\u53c2\u6570\u51b3\u5b9a\u5782\u76f4\u5165\u5c04\u7684\u5730\u9707\u6ce2\u53cd\u5c04\u540e\u7684\u632f\u5e45\u53d8\u5316\uff0c\u5176\u5927\u5c0f\u4e0e\u754c\u9762\u4e24\u4fa7\u58f0\u963b\u6297\u4e0d\u540c\u7684\u5730\u5c42\u7684\u5bc6\u5ea6\u548c\u901f\u5ea6\u76f8\u5173\u3002\u8fd9\u6837\u53cd\u5c04\u7cfb\u6570\u4e5f\u8868\u793a\u4e3a\u754c\u9762\u4e24\u4fa7\u5730\u5c42\u58f0\u963b\u6297\u5dee\u4e0e\u58f0\u963b\u6297\u548c\u7684\u6bd4\u503c\u3002 \u5408\u6210\u5730\u9707\u9053 \u00b6 \u5c06\u5730\u9707\u8109\u51b2\u4fe1\u53f7\u5408\u5e76\u5230\u65f6\u95f4\u57df\u6a21\u578b\u4e0a\u5f97\u5230\u5408\u6210\u5730\u9707\u9053\u3002\u8be5\u8fc7\u7a0b\u5728\u6570\u5b66\u4e0a\u79f0\u4e3a \u8936\u79ef \u3002\u5730\u9707\u8109\u51b2\u4fe1\u53f7\u6216 \u5b50\u6ce2 \uff0c\u8868\u793a\u6765\u81ea\u67d0\u4e2a\u9707\u6e90\u7684\u80fd\u91cf\u5305\u3002\u9009\u62e9\u4e00\u4e2a\u6a21\u578b\u5b50\u6ce2\u6765\u5339\u914d\u5904\u7406\u540e\u7684\u5730\u9707\u6570\u636e\u7684\u632f\u5e45\u3001\u76f8\u4f4d\u548c\u9891\u7387\u7279\u5f81\u503c\u3002 \u5c06\u8be5\u5b50\u6ce2\u4e0e\u53cd\u5c04\u7cfb\u6570\u6a21\u578b\u8fdb\u884c\u8936\u79ef\u4ea7\u751f\u5408\u6210\u5730\u9707\u9053\uff0c\u8be5\u5730\u9707\u9053\u8868\u793a\u88ab\u6a21\u62df\u5730\u5c42\u5bf9\u8f93\u5165\u5730\u9707\u8109\u51b2\u4fe1\u53f7\u7684\u54cd\u5e94 \u3002\u5982\u679c\u6a21\u62df\u9053\u4e0a\u6709 \u566a\u97f3\u5e72\u6270\u3001\u4fe1\u53f7\u8870\u51cf\u53ca\u591a\u6b21\u53cd\u5c04 \u73b0\u8c61\uff0c\u8fd8\u9700\u8981\u8fdb\u884c\u5176\u4ed6\u5904\u7406\u3002 \u5b50\u6ce2 \u00b6 \u53c2\u8003: \u8936\u79ef\u4e0e\u53cd\u8936\u79ef\u662f\u4ec0\u4e48? \u53ef\u4ee5\u8ba4\u4e3a\u662f\u5730\u9707\u6ce2\u7684\u521d\u59cb\u80fd\u91cf\uff0c\u5730\u9707\u6ce2\u4f20\u64ad\u7684\u8fc7\u7a0b\u5c31\u662f\u8fd9\u4e2a\u5b50\u6ce2\u901a\u8fc7\u5730\u4e0b\u4ecb\u8d28\u7684\u8fc7\u7a0b\u3002 \u53e0\u52a0 \u00b6 \u662f\u4e00\u79cd\u901a\u8fc7\u5e73\u5747\u5f88\u591a\u5730\u9707\u9053\u8fbe\u5230\u4fe1\u53f7\u52a0\u5f3a\u76ee\u7684\u7684\u6280\u672f\uff0c\u53c2\u4e0e\u5e73\u5747\u5904\u7406\u7684\u5730\u9707\u9053\u4ee3\u8868\u7740\u5171\u53cd\u5c04\u4e2d\u5fc3\u70b9\u7684\u4e0d\u540c\u504f\u79fb\u8ddd\u96c6\u5408\u7684\u5730\u9707\u8bb0\u5f55\u3002\u4ea7\u751f\u7684\u53e0\u52a0\u9053\u88ab\u8ba4\u4e3a\u662f \u5171\u4e2d\u5fc3\u70b9CMP \u4e0a\u5782\u76f4\u5165\u5c04\u7684\u53cd\u5c04\u54cd\u5e94\u3002\u5730\u9707\u9053\u53e0\u52a0\u80fd\u591f\u52a0\u5f3a\u4fe1\u53f7\uff0c\u964d\u4f4e\u566a\u97f3\u3002 \u53e0\u52a0\u9053 \u00b6 \u56e0\u5927\u504f\u79fb\u8ddd\u5730\u9707\u6ce2\u4f20\u64ad\u8ddd\u79bb\u8f83\u8fdc\uff0c\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u9053\u96c6\u8fdb\u884c\u65f6\u95f4\u6821\u6b63\uff0c\u5373 \u6b63\u5e38\u65f6\u5dee\u6821\u6b63\uff08NMO\uff09 \uff0c\u62c9\u5e73\u5927\u504f\u79fb\u8ddd\u5230\u8fbe\u6ce2\uff1b\u5c06\u62c9\u5e73\u540e\u7684\u5730\u9707\u9053\u53d6\u5e73\u5747\u503c\u5f97\u5230\u4e00\u6761\u53e0\u52a0\u9053\uff0c\u8be5\u9053\u4ee3\u8868 \u5782\u76f4\u5165\u5c04\uff08\u96f6\u504f\u79fb\u8ddd\uff09\u5730\u9707\u9053 \u3002 \u53e0\u540e\u53cd\u6f14 \u00b6 \u5047\u8bbe\u53cd\u5c04\u5c42\u4e0a\u8986\u4ecb\u8d28\u901f\u5ea6\u5448\u6e10\u8fdb\u53d8\u5316\uff0c\u5e76\u4e14\u53e0\u52a0\u9053\u5e73\u5747\u632f\u5e45\u4e0e\u5782\u76f4\u5165\u5c04\u9053\u632f\u5e45\u76f8\u7b49\uff0c\u90a3\u4e48\u53e0\u52a0\u5c31\u662f\u76f8\u5f53\u5408\u7406\u7684\u5904\u7406\u6b65\u9aa4\u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4ee5\u4e0a\u5047\u8bbe\u6761\u4ef6\u90fd\u80fd\u6210\u7acb\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u53e0\u52a0\u540e\u7684\u6570\u636e\u4e0a\u8fdb\u884c\u53cd\u6f14\u3002 \u5c06 \u53e0\u52a0\u9053 \u540c \u5408\u6210\u9053 \uff08\u53cd\u5c04\u7cfb\u6570\u6a21\u578b\u548c\u5b50\u6ce2\u8936\u79ef\u540e\u5408\u6210\u7684\u5730\u9707\u9053\uff09\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5e76\u7528\u8fd9\u4e24\u79cd\u9053\u7684\u8bef\u5dee\u4fee\u6b63\u53cd\u5c04\u7cfb\u6570\u6a21\u578b\uff0c\u4f7f\u5408\u6210\u9053\u7684\u4e0b\u4e00\u6b21\u8fed\u4ee3\u66f4\u903c\u8fd1\u53e0\u52a0\u9053\u3002\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\uff0c\u76f4\u5230\u5408\u6210\u9053\u548c\u53e0\u52a0\u9053\u8fbe\u5230\u6700\u4f73\u62df\u5408\u3002 \u53e0\u524d\u53cd\u6f14 \u00b6 \u5f53\u5730\u9707\u9053\u632f\u5e45\u968f\u504f\u79fb\u8ddd\u53d8\u5316\u8f83\u4e3a\u5267\u70c8\u65f6\uff0c\u53e0\u52a0\u4e0d\u518d\u9002\u5408\uff0c\u8fd9\u6837\u5c31\u53ea\u80fd\u5728\u672a\u53e0\u52a0\u9053\u4e0a\u8fdb\u884c\u53cd\u6f14 \u52a0\u6743\u53e0\u52a0\uff1a\u5728\u53e0\u52a0\u524d\u5bf9\u6570\u636e\u6837\u672c\u4f7f\u7528\u65f6\u95f4\u548c\u504f\u79fb\u91cf\u53d8\u5316\u7684\u6743\u91cd\u3002 \u5171\u4e2d\u5fc3\u70b9(CMP) \u00b6 Common Midpoint \u5730\u9707\u8d44\u6599\u91c7\u96c6\u4e2d\uff0c\u82e5\u5730\u4e0b\u754c\u9762\u4e3a\u6c34\u5e73\u754c\u9762\uff0c\u5219\u5171\u53cd\u5c04\u70b9\u5728\u5730\u9762\u7684\u6295\u5f71\u5fc5\u4e3a\u70ae\u96c6\u4e2d\u62e5\u6709\u5171\u53cd\u5c04\u70b9\u63a5\u53d7\u8ddd\u7684\u4e2d\u5fc3\u70b9\uff0c\u56e0\u6b64\u79f0\u4e3a\u5171\u4e2d\u5fc3\u70b9\u3002\u628a\u4e0d\u540c\u70ae\u96c6\u4e2d\u62e5\u6709\u5171\u4e2d\u5fc3\u70b9\u7684\u9053\u62bd\u53d6\u51fa\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\uff0c\u79f0\u4e4b\u4e3a\u5171\u4e2d\u5fc3\u70b9\u9053\u96c6\u2014\u2014CMP\u9053\u96c6\u3002\u5728\u591a\u9053\u5730\u9707\u91c7\u96c6\u4e2d\uff0c\u5730\u8868\u4e0a\u4f4d\u4e8e\u9707\u6e90\u548c\u63a5\u6536\u5668\u4e2d\u95f4\u7684\u70b9\uff0c\u7531\u591a\u4e2a\u9707\u6e90-\u63a5\u6536\u5668\u5bf9\u5171\u7528\u3002\u516c\u4e2d\u5fc3\u70b9\u5782\u76f4\u4e8e \u5171\u6df1\u5ea6\u70b9 \u6216\u5171\u53cd\u5c04\u70b9\u4e4b\u4e0a\u3002 \u5171\u6df1\u5ea6\u70b9(CDP) \u00b6 Common Depth Point \u5728\u591a\u9053\u5730\u9707\u91c7\u96c6\u4e2d\uff0c\u5f53\u5730\u5c42\u4e0d\u4e0b\u6c89\u65f6\uff0c\u53cd\u5c04\u9762\u6df1\u5ea6\u5904\u7684\u5171\u53cd\u5c04\u70b9\uff0c\u6216\u6ce2\u4ece\u9707\u6e90\u4f20\u64ad\u5230\u53cd\u5c04\u9762\u518d\u5230\u63a5\u6536\u5668\u65f6\u7684\u4e2d\u95f4\u70b9\u3002\u5728\u5e73\u9762\u5c42\u7684\u60c5\u51b5\u4e0b\uff0c\u5171\u6df1\u5ea6\u70b9\u5782\u76f4\u4f4e\u4e8e \u5171\u4e2d\u5fc3\u70b9 \u3002\u5728\u503e\u659c\u5c42\u4e2d\uff0c\u591a\u4e2a\u6e90\u548c\u63a5\u6536\u70b9\u6ca1\u6709\u5171\u6df1\u5ea6\u70b9\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u503e\u659c\u504f\u79fb\u8fdb\u884c\u5904\u7406\uff0c\u4ee5\u51cf\u5c11\u6570\u636e\u7684\u9519\u8bef\u6216\u4e0d\u9002\u5f53\u7684\u6df7\u5408\u3002 \u5171\u53cd\u5c04\u70b9(CRP) \u00b6 Common Refledtion Point \u5728\u591a\u9053\u5730\u9707\u91c7\u96c6\u4e2d\uff0c\u53cd\u5c04\u9762\u4e0a\u7684\u5171\u540c\u4e2d\u70b9\uff0c\u6216\u6ce2\u4ece\u9707\u6e90\u5230\u53cd\u5c04\u9762\u518d\u5230\u63a5\u6536\u5668\u65f6\u7684\u4e2d\u70b9\uff0c\u5982\u679c\u53cd\u5c04\u9762\u662f\u6c34\u5e73\u7684\uff0c\u5219\u8be5\u4e2d\u70b9\u7531\u591a\u4e2a\u4f4d\u7f6e\u5171\u4eab\u3002\u4e0e \u516c\u6df1\u5ea6\u70b9 \u4e00\u6837\uff0c\u4f46\u5728\u503e\u659c\u5c42\u4e2d\uff0c\u5171\u53cd\u5c04\u70b9\u4e0d\u5b58\u5728\u3002 L1&L2 Regularization \u00b6 \u4ece\u6570\u5b66\u4e0a\u6765\u8bb2\uff0c\u5c31\u662f\u5728\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u4e2a\u6b63\u5219\u9879\uff08Regularization Term\uff09\uff0c\u6765\u9632\u6b62\u53c2\u6570\u62df\u5408\u5f97\u8fc7\u597d\u3002 \u53c2\u8003\u94fe\u63a5\uff1a https://www.zhihu.com/question/26485586/answer/91420865 L1-Regularization $$\\lambda \\sum_{i=0}^k|w_i| $$ L2-Regularization \\lambda \\sum_{i=0}^kw_i^2 \\lambda \\sum_{i=0}^kw_i^2 <span class=\"arithmatex\"><span class=\"MathJax_Preview\">\\lambda \\sum_{i=0}^kw_i^2</span><script type=\"math/tex\">\\lambda \\sum_{i=0}^kw_i^2 AVO(amplitude variation with offset) \u00b6 Ostrander\u9996\u6b21\u63d0\u51fa \u5730\u9707\u9053\u632f\u5e45\u968f\u504f\u79fb\u8ddd\u53d8\u5316\uff0c\u6b64\u65f6\u53e0\u52a0\u9053\u632f\u5e45\u4e0d\u7b49\u4e8e \u5782\u76f4\u5165\u5c04\u9053 \uff08\u5373\u96f6\u504f\u79fb\u8ddd\u9053\uff09\u7684\u632f\u5e45\uff0c\u504f\u79fb\u8ddd\u5927\u5c0f\u4e0e\u5165\u5c04\u89d2\u6709\u5173 \u53c2\u8003\u6587\u7ae0\uff1a Tutorial: AVO inversion \u51c6\u5907\u6b65\u9aa4\u4e0e\u5730\u9707\u9053\u53e0\u52a0\u76f8\u540c\uff0c\u9996\u5148\u5c06\u5171\u4e2d\u5fc3\u70b9\u9053\u7ec4\u5408\u6210\u9053\u96c6\uff0c\u5e76\u6309\u504f\u79fb\u8ddd\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u7528\u6b63\u5e38\u65f6\u5dee\u901f\u5ea6\u6a21\u578b\u5bf9\u5230\u8fbe\u6ce2\u8fdb\u884c\u62c9\u5e73\u5904\u7406\uff0c\u62c9\u5e73\u8fc7\u7a0b\u4e2d\u6ce8\u610f\u4fdd\u62a4\u632f\u5e45\u3002\u5f97\u5230\u7684\u53e0\u52a0\u9053\u5e76\u4e0d\u4e0e\u96f6\u504f\u79fb\u8ddd\u9053\u76f8\u4f3c\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u53e0\u52a0\u5904\u7406\u5e76\u4e0d\u80fd\u4fdd\u62a4\u632f\u5e45\u3002\u504f\u79fb\u8ddd\u4e0e\u5165\u5c04\u89d2\u7684\u5173\u7cfb\u53d6\u51b3\u4e8e\u5c04\u7ebf\u8def\u5f84\u3002\u591a\u6570 AVO \u53cd\u6f14\u7b97\u6cd5\u57fa\u4e8e\u53cd\u5c04\u632f\u5e45\u4e0e\u5165\u5c04\u89d2\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u56e0\u6b64\uff0c\u53cd\u6f14\u524d\u7684\u9644\u52a0\u5904\u7406\u6b65\u9aa4\u5c31\u5305\u62ec \u5c06\u504f\u79fb\u8ddd\u8f6c\u6362\u6210\u5165\u5c04\u89d2 \uff0c \u90e8\u5206\u53e0\u52a0\u65b9\u6cd5\uff1a\u5c06\u6bcf\u4e00\u4e2aCMP\u96c6\u5185\u7684\u8fd1\u504f\u79fb\u8ddd\u9053\u8fdb\u884c\u53e0\u52a0\uff0c\u518d\u5c06\u6240\u6709\u53e0\u52a0\u9053\u7ec4\u6210\u8fd1\u504f\u79fb\u8ddd\u9053\u96c6\u3002\u91c7\u7528\u540c\u6837\u7684\u65b9\u6cd5\u5efa\u7acb\u4e2d\u504f\u79fb\u8ddd\u9053\u96c6\u548c\u8fdc\u504f\u79fb\u8ddd\u9053\u96c6\uff0c\u7136\u540e\u5bf9\u6bcf\u79cd\u504f\u79fb\u8ddd\u9053\u96c6\u8fdb\u884c\u5206\u522b\u53cd\u6f14\u3002\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4e9bAVO\u4fe1\u606f\u4e22\u5931 Zoepptriz equation \u00b6 \u63cf\u8ff0\u5e73\u9762\u6ce2\u5165\u5c04\u5c04\u7ebf\u548c\u79bb\u6563\u632f\u5e45\u4e4b\u95f4\u5173\u7cfb\uff0c\u4f46\u7531\u4e8e\u5730\u4e0b\u5927\u91cf\u672a\u77e5\u4e0e\u5730\u7403\u7684\u590d\u6742\u6027\uff0c\u5e94\u7528\u5728\u5730\u9707\u6570\u636e\u4e2d\u6709\u5f88\u5927\u56f0\u96be\uff0c\u6240\u4ee5\u63d0\u51fa\u4e86\u5f88\u591a\u8fd1\u4f3c\u65b9\u6cd5 \u76f8\u5173\u6027\u8d28 \u00b6 \u66f4\u51b7\u3001\u5bc6\u5ea6\u66f4\u5927\u3001\u66f4\u786c \u7684\u5ca9\u77f3\uff0c \u6ce2\u901f\u66f4\u5feb,\u963b\u6297\u8d8a\u9ad8 \uff0c\u56e0\u6b64\u5b83\u4eec\u52fe\u52d2\u51fa\u4e86\u5411\u4e0b\u7684\u6784\u9020\u677f\u5757\u3002 \u5b54\u9699\u5ea6(porosity)\u589e\u52a0 \u4f1a\u5f15\u8d77 \u5c42\u901f\u5ea6\u548c\u5bc6\u5ea6\u4e0b\u964d \uff0c\u56e0\u6b64\u5bfc\u81f4\u76f8\u5e94\u7684 \u58f0\u963b\u6297\u4e0b\u964d \u3002 \u53cd\u6f14\u95ee\u9898 \u00b6 {d = Lm} {d = Lm} m : model, d : recorded data, L : forward-modeling operator \u6027\u8d28\uff1a - \u6709\u89e3\uff0c\u7531\u4e8e\u566a\u58f0\u4f1a\u5bfc\u81f4\u65b9\u7a0b\u8fc7\u5ea6\u786e\u5b9a\u6216\u4e0d\u4e0d\u4e00\u81f4\u5bfc\u81f4\u65e0\u89e3\uff1a \u6b8b\u5dee\u52a0\u6743\u548c\uff0c\u60e9\u7f5a\u51fd\u6570 - \u552f\u4e00\u89e3\uff1a \u6b63\u5219\u5316 - \u89e3\u6301\u7eed\u4f9d\u8d56\u4e8e\u6570\u636e\uff1a \u6b63\u5219\u5316 traveltime tomography - 1. \u79bb\u6563\u5316\u6a21\u578bm\uff0c\u6bcf\u4e2a\u7f51\u683c\u5bf9\u5e94slowness Nx1 - 2. \u79bb\u6563\u5316\u6570\u636ed Mx1 - 3. \u79bb\u6563\u5316\u8fd0\u7b97\u7b26L MxN \u6545\uff1a \\displaystyle\\sum_{j}l_{ij}m_j=d_i\\tag {1.1} \\displaystyle\\sum_{j}l_{ij}m_j=d_i\\tag {1.1} \u7ebf\u6027\u5316\uff1a \u7531\u4e8eL\u53d6\u51b3\u4e8em \u4ee4 m^{(0)}=m_o m^{(0)}=m_o ( m_o m_o \u6307\u9884\u6d4b\u503c), \u4f7f\u5176\u63a5\u8fd1\u771f\u5b9e\u6a21\u578b\u5e76\u7ebf\u6027\u5316\u6570\u636e\u4e0e\u6a21\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\u8fdb\u884c\u8fed\u4ee3\u6536\u655b \u5229\u7528\u6cf0\u52d2\u5c55\u5f00\u5f0f ( d_i\u968f\u7740\\pmb m\u53d8\u5316\uff0c \\pmb m \u4e3a\u771f\u5b9e\u6a21\u578b\uff0c\\pmb m_o\u4e3a\u9884\u6d4b\u503c d_i\u968f\u7740\\pmb m\u53d8\u5316\uff0c \\pmb m \u4e3a\u771f\u5b9e\u6a21\u578b\uff0c\\pmb m_o\u4e3a\u9884\u6d4b\u503c ) d_i(\\pmb m)\\approx d_i(\\pmb m_o) + \\displaystyle\\sum_j\\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial m_j}\\right]\\right|_{m_o}\\delta m_j\\tag{1.2} d_i(\\pmb m)\\approx d_i(\\pmb m_o) + \\displaystyle\\sum_j\\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial m_j}\\right]\\right|_{m_o}\\delta m_j\\tag{1.2} \u5316\u7b80\u5f97 \\delta\\pmb d(\\pmb m) = \\pmb L\\delta\\pmb m\\tag{1.3} \\delta\\pmb d(\\pmb m) = \\pmb L\\delta\\pmb m\\tag{1.3} l_{ij}=\\frac{\\partial d_i(\\pmb m_o)}{\\partial m_j} \u4ee3\u8868\u7b2ci\u4e2a\u6570\u636e\u5bf9\u6a21\u578b\u7b2cj\u4e2acell\u7684\u6270\u52a8 l_{ij}=\\frac{\\partial d_i(\\pmb m_o)}{\\partial m_j} \u4ee3\u8868\u7b2ci\u4e2a\u6570\u636e\u5bf9\u6a21\u578b\u7b2cj\u4e2acell\u7684\u6270\u52a8 \u7591\u95ee1 \u00b6 \\displaystyle\\sum_j\\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial m_j}\\right]\\right|_{m_o}\\delta m_j \u4e0e \\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial \\pmb m}\\right]\\right|_{m_o}\\delta\\pmb m \u76f8\u7b49\u5417\uff1f \\displaystyle\\sum_j\\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial m_j}\\right]\\right|_{m_o}\\delta m_j \u4e0e \\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial \\pmb m}\\right]\\right|_{m_o}\\delta\\pmb m \u76f8\u7b49\u5417\uff1f \u6b63\u5219\u5316 \u4e0d\u7a33\u5b9a\u89e3\u95ee\u9898 \u89c4\u5b9a\u4e00\u4e2a\u6700\u5c0f\u5316\u76ee\u6807\u51fd\u6570\uff1a\uff08\u6570\u636e\u6b8b\u5dee\u7684p\u8303\u6570\u4e0e\u60e9\u7f5a\u6761\u4ef6\uff09 \\epsilon = \\frac{1}{p}\\parallel\\pmb L\\delta\\pmb m-\\delta\\pmb d\\parallel^p_p+\\eta^2g(\\pmb m)\\tag{1.4} \\epsilon = \\frac{1}{p}\\parallel\\pmb L\\delta\\pmb m-\\delta\\pmb d\\parallel^p_p+\\eta^2g(\\pmb m)\\tag{1.4} \u5f53p=2\u65f6,\u5373\u4e8c\u8303\u6570 \u5f97 \\delta\\pmb m=\\left[\\pmb {L^TL}+\\eta^2\\pmb I\\right]^{-1}\\pmb{L^T}\\delta\\pmb d\\tag{1.5} \\delta\\pmb m=\\left[\\pmb {L^TL}+\\eta^2\\pmb I\\right]^{-1}\\pmb{L^T}\\delta\\pmb d\\tag{1.5} \u7591\u95ee2\uff08\u600e\u4e48\u63a8\u5bfc\u2b06\uff09 \u00b6 \u8fed\u4ee3\u5316\u6b63\u5219(\u5177\u4f53\u89c1p30) \u4e3a\u4e86\u51cf\u5c0f\u8ba1\u7b97\u91cf \\left[\\pmb{L^TL}\\right]_{ij}\\approx\\left[\\pmb{L^TL}\\right]_{ii}\\delta_{ij} \\left[\\pmb{L^TL}\\right]_{ij}\\approx\\left[\\pmb{L^TL}\\right]_{ii}\\delta_{ij} \u89c4\u5b9a\u6b63\u5219\u5316\u4e0e\u6b65\u957f\u53c2\u6570 \\alpha \\alpha","title":"\u53cd\u6f14\u6982\u5ff5"},{"location":"SeismicInversion/Basic/#_1","text":"\u53c2\u8003\uff1a https://www.geoexpro.com/articles/2013/08/geophysics-a-simple-guide-to-seismic-inversion","title":"\u5730\u9707\u4fe1\u53f7\u53cd\u6f14"},{"location":"SeismicInversion/Basic/#_2","text":"\u6b63\u6f14 \u901a\u8fc7\u5df2\u77e5\u7684\u5730\u8d28\u6a21\u578b\u6765\u5f97\u5230\u53c2\u6570 \u53cd\u6f14 \u901a\u8fc7\u6d4b\u91cf\u5230\u7684\u6570\u503c\u6765\u4f30\u8ba1\u5b9e\u9645\u6a21\u578b\uff0c\u57fa\u4e8e\u58f0\u6ce2\u6d4b\u91cf\u7684\u53cd\u6f14\uff0c\u7ecf\u5e38\u7528\u4f5c\u6821\u51c6\u5ca9\u77f3\u5c5e\u6027\u3002","title":"\u53cd\u6f14\u7684\u6982\u5ff5"},{"location":"SeismicInversion/Basic/#seismic-inversion","text":"\u5373\u901a\u8fc7\u6d4b\u91cf\u7684\u53cd\u5c04\u6570\u636e\u5f97\u5230\u5ca9\u77f3\u7684\u5c5e\u6027\uff08\u79f0\u4e3a\u963b\u6297\uff0c\u58f0\u901f\u548c\u4f53\u79ef\u5bc6\u5ea6\u7684\u4e58\u79ef\uff09 \u5f3a\u632f\u5e45\u4e0e\u5ca9\u77f3\u8fb9\u754c\u6709\u5173\uff0c\u5728\u53cd\u5411\u6570\u636e\u96c6\u4e2d\uff0c\u632f\u5e45\u4ee3\u8868\u5ca9\u77f3\u5185\u90e8\u6027\u8d28\u3002","title":"\u53cd\u6f14(Seismic inversion)"},{"location":"SeismicInversion/Basic/#deterministic-inversion","text":"\u5c06\u7f3a\u5931\u7684\u4f4e\u9891\u4fe1\u53f7\u5f15\u5165\u53cd\u6f14\uff0c\u4ece\u800c\u5f97\u5230\u8d8b\u52bf\u3002\u4f46\u662f\u4f4e\u9891\u8fd9\u4e00\u90e8\u5206\u53ea\u662f\u7b80\u5355\u5efa\u6a21\u5e76\u52a0\u5165\u76f8\u5bf9\u963b\u6297\u4e2d\u3002 \u6ce8\u610f \u6709\u53ef\u80fd\u8fd9\u4e2a\u8d8b\u52bf\u4e0d\u662f\u7531\u4e8e\u5730\u9707\u53cd\u5c04\u6ce2\u5f15\u8d77\u7684\uff0c\u800c\u662f\u5e73\u6ed1\u7684\u6a21\u578b\u5e26\u6765\u7684\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u89e3\u91ca\u7684\u662f\u5730\u9707\u6570\u636e\uff0c\u800c\u4e0d\u662f\u6a21\u578b\u3002 deterministic inversion = relative inversion + model","title":"\u786e\u5b9a\u6027\u53cd\u6f14(Deterministic Inversion)"},{"location":"SeismicInversion/Basic/#simultaneous-inversion","text":"\u5730\u9707\u6570\u636e\u5305\u542b\u6709\u5173\u5730\u7403\u5ca9\u77f3\u6027\u8d28\u7684\u9644\u52a0\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u5bf9\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884c\u53cd\u6f14\u3002\u5b83\u5229\u7528pre-stack gather(\u6216\u8be5\u6570\u636e\u7684\u90e8\u5206\u53e0\u52a0\uff0c\u5982 \u89d2\u5ea6\u53e0\u52a0 )\u540c\u65f6\u53cd\u6f14\u591a\u4e2a\u5ca9\u77f3\u5c5e\u6027\u53c2\u6570\u3002\u4e5f\u662f\u4e00\u79cd\u786e\u5b9a\u6027\u53cd\u6f14\uff0c\u6240\u4ee5\u4e5f\u8981 \u6ce8\u610f \u4e0a\u9762\u7684\u95ee\u9898\u3002\u6700\u540e\u901a\u8fc7\u9ad8\u901a\u6ee4\u6ce2\u628a\u6a21\u578b\u6ee4\u6389\u66f4\u5b89\u5168\u3002","title":"\u8054\u5408\u53cd\u6f14(Simultaneous Inversion)"},{"location":"SeismicInversion/Basic/#eeiextended-elastic-impedance-inversion","text":"\u53cd\u6f14\u524d\u6267\u884c\u67d0\u79cd\u7c7b\u578b\u7684\u6821\u51c6\uff0c\u4f7f\u7528\u7279\u6b8a\u89d2\u5ea6\u9879 \\chi \\chi \uff0c\u5b83\u7684\u6295\u5f71\u8303\u56f4\u4ece-90\u00b0 \u5230 +90\u00b0\u3002\u53ef\u4e3a\u6570\u636e\u627e\u5230\u4e24\u4e2a\u7279\u5f81\u89d2\uff0c\u6700\u5927\u632f\u5e45\u4ee3\u8868\u5ca9\u4f53\u7acb\u65b9\uff0c\u6700\u5c0f\u632f\u5e45\u4ee3\u8868\u6d41\u4f53\u7acb\u65b9","title":"EEI(Extended Elastic impedance) Inversion"},{"location":"SeismicInversion/Basic/#stochastic-inversion","text":"\u5b83\u6d88\u9664\u4e86\u8c03\u8c10\u6548\u5e94\uff0c\u5bf9\u4e0d\u786e\u5b9a\u6027\u5efa\u6a21\uff0c\u53ef\u4ee5\u5728\u7ec6\u5c3a\u5ea6\u4e0a\u8fdb\u884c\u8ba1\u7b97;\u4f46\u662f\u6709\u66f4\u9ad8\u7684\u6210\u672c\u548c\u5927\u91cf\u6570\u636e\u3002","title":"\u968f\u673a\u53cd\u6f14(Stochastic Inversion)"},{"location":"SeismicInversion/Basic/#_3","text":"","title":"\u5efa\u6a21"},{"location":"SeismicInversion/Basic/#_4","text":"\u53cd\u6f14\u632f\u5e45\u4e0d\u4ec5\u4e0e\u5ca9\u77f3\u6027\u8d28\u6709\u5173\uff0c\u8fd8\u4e0e\u5730\u5c42\u539a\u5ea6\u6709\u5173\u3002\u5982\u679c\u539a\u5ea6\u63a5\u8fd1\u7279\u5b9a\u5730\u9707\u7684\u201c\u8c03\u8c10\u201d\u9891\u7387\uff0c\u90a3\u4e48\u632f\u5e45\u53ef\u80fd\u4f1a\u6bd4\u5b9e\u9645\u60c5\u51b5\u660e\u663e\uff0c\u53ef\u80fd\u5bfc\u81f4\u5730\u5c42\u539a\u5ea6\u7684\u53d8\u5316\u88ab\u8bef\u89e3\u4e3a\u5ca9\u77f3\u6027\u8d28\u7684\u53d8\u5316\uff0c\u6240\u4ee5\u8981\u8fdb\u884c\u53bb\u9664\u8c03\u8c10\u6548\u5e94\u3002","title":"\u8c03\u8c10\u95ee\u9898"},{"location":"SeismicInversion/Basic/#_5","text":"\u6a21\u578b\u548c\u5730\u9707\u963b\u6297\u4e4b\u95f4\u5728\u5782\u76f4\u5206\u8fa8\u7387\u4e0a\u7684\u5de8\u5927\u5dee\u5f02\uff0c\u6a21\u578b\u5206\u8fa8\u7387\u9ad8\uff0c\u4f1a\u4ea7\u751f\u8bef\u5bfc\u6027\u7684\u6d41\u4f53\u6d41\u52a8\u7279\u5f81\u3002","title":"\u5206\u8fa8\u7387\u4e0d\u4e00\u81f4\u95ee\u9898"},{"location":"SeismicInversion/Basic/#_6","text":"\u4e4b\u524d\u786e\u5b9a\u6027\u53cd\u6f14\u6709\u63d0\u5230\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u9075\u5faa\u6a21\u578b\u7684\u9519\u8bef\u8d8b\u52bf\uff0c\u56e0\u6b64\u8981\u5c06\u6a21\u578b\u53bb\u9664\u3002","title":"\u9519\u8bef\u7684\u8d8b\u52bf\u95ee\u9898"},{"location":"SeismicInversion/Basic/#_7","text":"","title":"\u76f8\u5173\u6982\u5ff5"},{"location":"SeismicInversion/Basic/#relative-impedance","text":"\u662f\u76f4\u63a5\u4ece\u6ca1\u6709\u6a21\u578b\u8f93\u5165\u7684\u5730\u9707\u6570\u636e\u4e2d\u4f30\u8ba1\u51fa\u6765\u7684\uff0c\u662f\u4e00\u79cd\u9c81\u68d2\u7684\u5730\u9707\u7279\u6027\u3002\u6570\u636e\u4e0d\u8bb0\u5f55\u4f4e\u9891\uff0c\u6545 \u65e0\u8d8b\u52bf \u5f69\u8272\u53cd\u6f14(colored inversion)","title":"\u76f8\u5bf9\u963b\u6297(relative impedance)"},{"location":"SeismicInversion/Basic/#p-wave","text":"primary or pressure wave \u4e3b\u6ce2 \u53c2\u8003\uff1a https://en.wikipedia.org/wiki/P_wave \u5e73\u884c\u4e8e\u6ce2\u4f20\u64ad\u65b9\u5411\u7684\u8d28\u70b9\u8fd0\u52a8\u4f20\u64ad(\u58f0\u6ce2)\uff0c\u4f20\u64ad\u901f\u5ea6\u6bd4\u5176\u4ed6\u5730\u9707\u6ce2\u5feb\uff0c\u5f53\u5b83\u4eec\u901a\u8fc7\u534a\u56fa\u6001\u5730\u5e54\u548c\u6db2\u6001\u5916\u6838\u4e4b\u95f4\u7684\u8fc7\u6e21\u65f6\uff0c\u4f1a\u53d1\u751f\u8f7b\u5fae\u7684\u6298\u5c04\u3002\u56e0\u6b64\uff0c\u5728\u8ddd\u79bb\u9707\u6e90103\u00b0\u5230142\u00b0\u4e4b\u95f4\u6709\u4e00\u4e2aP\u6ce2\u201c\u9634\u5f71\u533a\u201d\uff0c\u65e0\u6cd5\u8bb0\u5f55\u3002 \u901f\u5ea6\u8ba1\u7b97\uff1a v_p=\\sqrt{\\frac{K+\\frac{4}{3}\\mu}{\\rho}}=\\sqrt{\\frac{\\lambda+2\\mu}{\\rho}}=\\sqrt{\\frac{M}{\\rho}} v_p=\\sqrt{\\frac{K+\\frac{4}{3}\\mu}{\\rho}}=\\sqrt{\\frac{\\lambda+2\\mu}{\\rho}}=\\sqrt{\\frac{M}{\\rho}} \u7531\u4e8e\u5bc6\u5ea6\u53d8\u5316\u5f88\u5c0f\uff0c\u6240\u4ee5\u4e3b\u8981\u7531 K\u548c\\mu K\u548c\\mu \u51b3\u5b9a","title":"p wave"},{"location":"SeismicInversion/Basic/#s-wave","text":"secondary or shear wave \u6b21\u6ce2 \u53c2\u8003\uff1a https://en.wikipedia.org/wiki/S_wave \u5782\u76f4\u4e8e\u6ce2\u4f20\u64ad\u65b9\u5411\u7684\u8d28\u70b9\u8fd0\u52a8\u4f20\u64ad,p\u6ce2\u5728\u975e\u6b63\u5165\u5c04\u65f6\u649e\u51fb\u754c\u9762\u4f1a\u4ea7\u751fs\u6ce2,\u6ce2\u901f\u4ec5\u6b21\u4e8eP\u6ce2\uff0cS\u6ce2\u65e0\u6cd5\u7a7f\u8d8a\u5916\u5730\u6838\uff0c\u56e0\u4e3a\u6d41\u4f53\u4e0d\u652f\u6301\u526a\u5207\uff0c\u6240\u4ee5S\u6ce2\u7684\u9634\u5f71\u533a\u6b63\u5bf9\u7740\u5730\u9707\u7684\u9707\u6e90\u3002 \u7c92\u5b50\u8fd0\u52a8\u4e0e\u4f20\u64ad\u65b9\u5411\u5728\u5782\u76f4\u9762\u5185\u4e3aSV-wave,\u7c92\u5b50\u8fd0\u52a8\u4e0e\u4f20\u64ad\u65b9\u5411\u5728\u6c34\u5e73\u9762\u8fdb\u884c\u4e3aSH-wave \u4ee5\u4e0a\u4e24\u79cd\u963b\u6297\u53ef\u901a\u8fc7\u7ed3\u5408\u5f97\u5230\u53e6\u5916\u4e24\u79cd\u5c5e\u6027, \\lambda\\rho \\lambda\\rho \u4e0e \\mu\\rho \\mu\\rho p\u6ce2\u963b\u6297(IP)\u548c \\lambda\\rho \\lambda\\rho \u6027\u8d28\u544a\u8bc9\u6211\u4eec\u5b54\u9699\u7a7a\u95f4\u7684\u5f71\u54cd\uff0c\u5982\u5b54\u9699\u5ea6\u548c\u78b3\u6c22\u5316\u5408\u7269(\u5b58\u5728\u6216\u9971\u548c\u5ea6)\u3002s\u6ce2\u963b\u6297(SI)\u548c\u03bc\u03c1\u53ef\u4ee5\u5728\u53bb\u9664\u5b54\u9699\u7a7a\u95f4\u548c\u6d41\u4f53\u7684\u5f71\u54cd\u540e\uff0c\u4e3a\u6211\u4eec\u63d0\u4f9b\u6709\u5173\u5ca9\u6027\u7684\u4fe1\u606f\u3002\u901a\u8fc7\u6bd4\u8f83\u6bcf\u79cd\u4ea7\u51fa\u7c7b\u578b\u4e4b\u95f4\u7684\u5ca9\u77f3\u6027\u8d28\u5f02\u5e38\uff0c\u5c31\u6709\u53ef\u80fd\u66f4\u597d\u5730\u4e86\u89e3\u5f02\u5e38\u662f\u5426\u53ef\u80fd\u662f\u7531\u5b54\u9699\u5ea6/\u9971\u548c\u5ea6\u53d8\u5316\u6216\u5ca9\u6027\u53d8\u5316\u5f15\u8d77\u7684\u3002 \u4e09\u9879\u53cd\u6f14 \uff1a\u5f97\u5230IP\uff0cSP,\u4f53\u5bc6\u5ea6\uff08sonic,shear,bulk density),\u4f53\u5bc6\u5ea6\u5f88\u96be\u5f97\u5230\uff0c\u5bf9\u5730\u9707\u5e45\u5ea6\u5f71\u54cd\u5f88\u5c0f\u4e14\u53ea\u5b58\u5728\u4e8e\u5927\u89d2\u5ea6\u60c5\u51b5\u4e0b(>40\u00b0)","title":"s wave"},{"location":"SeismicInversion/Basic/#_8","text":"\u8868\u793a\u53cd\u5c04\u6ce2\u4e0e\u5165\u5c04\u6ce2\u7684\u632f\u5e45\u6bd4\uff0c\u8be5\u53c2\u6570\u51b3\u5b9a\u5782\u76f4\u5165\u5c04\u7684\u5730\u9707\u6ce2\u53cd\u5c04\u540e\u7684\u632f\u5e45\u53d8\u5316\uff0c\u5176\u5927\u5c0f\u4e0e\u754c\u9762\u4e24\u4fa7\u58f0\u963b\u6297\u4e0d\u540c\u7684\u5730\u5c42\u7684\u5bc6\u5ea6\u548c\u901f\u5ea6\u76f8\u5173\u3002\u8fd9\u6837\u53cd\u5c04\u7cfb\u6570\u4e5f\u8868\u793a\u4e3a\u754c\u9762\u4e24\u4fa7\u5730\u5c42\u58f0\u963b\u6297\u5dee\u4e0e\u58f0\u963b\u6297\u548c\u7684\u6bd4\u503c\u3002","title":"\u53cd\u5c04\u7cfb\u6570"},{"location":"SeismicInversion/Basic/#_9","text":"\u5c06\u5730\u9707\u8109\u51b2\u4fe1\u53f7\u5408\u5e76\u5230\u65f6\u95f4\u57df\u6a21\u578b\u4e0a\u5f97\u5230\u5408\u6210\u5730\u9707\u9053\u3002\u8be5\u8fc7\u7a0b\u5728\u6570\u5b66\u4e0a\u79f0\u4e3a \u8936\u79ef \u3002\u5730\u9707\u8109\u51b2\u4fe1\u53f7\u6216 \u5b50\u6ce2 \uff0c\u8868\u793a\u6765\u81ea\u67d0\u4e2a\u9707\u6e90\u7684\u80fd\u91cf\u5305\u3002\u9009\u62e9\u4e00\u4e2a\u6a21\u578b\u5b50\u6ce2\u6765\u5339\u914d\u5904\u7406\u540e\u7684\u5730\u9707\u6570\u636e\u7684\u632f\u5e45\u3001\u76f8\u4f4d\u548c\u9891\u7387\u7279\u5f81\u503c\u3002 \u5c06\u8be5\u5b50\u6ce2\u4e0e\u53cd\u5c04\u7cfb\u6570\u6a21\u578b\u8fdb\u884c\u8936\u79ef\u4ea7\u751f\u5408\u6210\u5730\u9707\u9053\uff0c\u8be5\u5730\u9707\u9053\u8868\u793a\u88ab\u6a21\u62df\u5730\u5c42\u5bf9\u8f93\u5165\u5730\u9707\u8109\u51b2\u4fe1\u53f7\u7684\u54cd\u5e94 \u3002\u5982\u679c\u6a21\u62df\u9053\u4e0a\u6709 \u566a\u97f3\u5e72\u6270\u3001\u4fe1\u53f7\u8870\u51cf\u53ca\u591a\u6b21\u53cd\u5c04 \u73b0\u8c61\uff0c\u8fd8\u9700\u8981\u8fdb\u884c\u5176\u4ed6\u5904\u7406\u3002","title":"\u5408\u6210\u5730\u9707\u9053"},{"location":"SeismicInversion/Basic/#_10","text":"\u53c2\u8003: \u8936\u79ef\u4e0e\u53cd\u8936\u79ef\u662f\u4ec0\u4e48? \u53ef\u4ee5\u8ba4\u4e3a\u662f\u5730\u9707\u6ce2\u7684\u521d\u59cb\u80fd\u91cf\uff0c\u5730\u9707\u6ce2\u4f20\u64ad\u7684\u8fc7\u7a0b\u5c31\u662f\u8fd9\u4e2a\u5b50\u6ce2\u901a\u8fc7\u5730\u4e0b\u4ecb\u8d28\u7684\u8fc7\u7a0b\u3002","title":"\u5b50\u6ce2"},{"location":"SeismicInversion/Basic/#_11","text":"\u662f\u4e00\u79cd\u901a\u8fc7\u5e73\u5747\u5f88\u591a\u5730\u9707\u9053\u8fbe\u5230\u4fe1\u53f7\u52a0\u5f3a\u76ee\u7684\u7684\u6280\u672f\uff0c\u53c2\u4e0e\u5e73\u5747\u5904\u7406\u7684\u5730\u9707\u9053\u4ee3\u8868\u7740\u5171\u53cd\u5c04\u4e2d\u5fc3\u70b9\u7684\u4e0d\u540c\u504f\u79fb\u8ddd\u96c6\u5408\u7684\u5730\u9707\u8bb0\u5f55\u3002\u4ea7\u751f\u7684\u53e0\u52a0\u9053\u88ab\u8ba4\u4e3a\u662f \u5171\u4e2d\u5fc3\u70b9CMP \u4e0a\u5782\u76f4\u5165\u5c04\u7684\u53cd\u5c04\u54cd\u5e94\u3002\u5730\u9707\u9053\u53e0\u52a0\u80fd\u591f\u52a0\u5f3a\u4fe1\u53f7\uff0c\u964d\u4f4e\u566a\u97f3\u3002","title":"\u53e0\u52a0"},{"location":"SeismicInversion/Basic/#_12","text":"\u56e0\u5927\u504f\u79fb\u8ddd\u5730\u9707\u6ce2\u4f20\u64ad\u8ddd\u79bb\u8f83\u8fdc\uff0c\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u9053\u96c6\u8fdb\u884c\u65f6\u95f4\u6821\u6b63\uff0c\u5373 \u6b63\u5e38\u65f6\u5dee\u6821\u6b63\uff08NMO\uff09 \uff0c\u62c9\u5e73\u5927\u504f\u79fb\u8ddd\u5230\u8fbe\u6ce2\uff1b\u5c06\u62c9\u5e73\u540e\u7684\u5730\u9707\u9053\u53d6\u5e73\u5747\u503c\u5f97\u5230\u4e00\u6761\u53e0\u52a0\u9053\uff0c\u8be5\u9053\u4ee3\u8868 \u5782\u76f4\u5165\u5c04\uff08\u96f6\u504f\u79fb\u8ddd\uff09\u5730\u9707\u9053 \u3002","title":"\u53e0\u52a0\u9053"},{"location":"SeismicInversion/Basic/#_13","text":"\u5047\u8bbe\u53cd\u5c04\u5c42\u4e0a\u8986\u4ecb\u8d28\u901f\u5ea6\u5448\u6e10\u8fdb\u53d8\u5316\uff0c\u5e76\u4e14\u53e0\u52a0\u9053\u5e73\u5747\u632f\u5e45\u4e0e\u5782\u76f4\u5165\u5c04\u9053\u632f\u5e45\u76f8\u7b49\uff0c\u90a3\u4e48\u53e0\u52a0\u5c31\u662f\u76f8\u5f53\u5408\u7406\u7684\u5904\u7406\u6b65\u9aa4\u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4ee5\u4e0a\u5047\u8bbe\u6761\u4ef6\u90fd\u80fd\u6210\u7acb\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u53e0\u52a0\u540e\u7684\u6570\u636e\u4e0a\u8fdb\u884c\u53cd\u6f14\u3002 \u5c06 \u53e0\u52a0\u9053 \u540c \u5408\u6210\u9053 \uff08\u53cd\u5c04\u7cfb\u6570\u6a21\u578b\u548c\u5b50\u6ce2\u8936\u79ef\u540e\u5408\u6210\u7684\u5730\u9707\u9053\uff09\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5e76\u7528\u8fd9\u4e24\u79cd\u9053\u7684\u8bef\u5dee\u4fee\u6b63\u53cd\u5c04\u7cfb\u6570\u6a21\u578b\uff0c\u4f7f\u5408\u6210\u9053\u7684\u4e0b\u4e00\u6b21\u8fed\u4ee3\u66f4\u903c\u8fd1\u53e0\u52a0\u9053\u3002\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\uff0c\u76f4\u5230\u5408\u6210\u9053\u548c\u53e0\u52a0\u9053\u8fbe\u5230\u6700\u4f73\u62df\u5408\u3002","title":"\u53e0\u540e\u53cd\u6f14"},{"location":"SeismicInversion/Basic/#_14","text":"\u5f53\u5730\u9707\u9053\u632f\u5e45\u968f\u504f\u79fb\u8ddd\u53d8\u5316\u8f83\u4e3a\u5267\u70c8\u65f6\uff0c\u53e0\u52a0\u4e0d\u518d\u9002\u5408\uff0c\u8fd9\u6837\u5c31\u53ea\u80fd\u5728\u672a\u53e0\u52a0\u9053\u4e0a\u8fdb\u884c\u53cd\u6f14 \u52a0\u6743\u53e0\u52a0\uff1a\u5728\u53e0\u52a0\u524d\u5bf9\u6570\u636e\u6837\u672c\u4f7f\u7528\u65f6\u95f4\u548c\u504f\u79fb\u91cf\u53d8\u5316\u7684\u6743\u91cd\u3002","title":"\u53e0\u524d\u53cd\u6f14"},{"location":"SeismicInversion/Basic/#cmp","text":"Common Midpoint \u5730\u9707\u8d44\u6599\u91c7\u96c6\u4e2d\uff0c\u82e5\u5730\u4e0b\u754c\u9762\u4e3a\u6c34\u5e73\u754c\u9762\uff0c\u5219\u5171\u53cd\u5c04\u70b9\u5728\u5730\u9762\u7684\u6295\u5f71\u5fc5\u4e3a\u70ae\u96c6\u4e2d\u62e5\u6709\u5171\u53cd\u5c04\u70b9\u63a5\u53d7\u8ddd\u7684\u4e2d\u5fc3\u70b9\uff0c\u56e0\u6b64\u79f0\u4e3a\u5171\u4e2d\u5fc3\u70b9\u3002\u628a\u4e0d\u540c\u70ae\u96c6\u4e2d\u62e5\u6709\u5171\u4e2d\u5fc3\u70b9\u7684\u9053\u62bd\u53d6\u51fa\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\uff0c\u79f0\u4e4b\u4e3a\u5171\u4e2d\u5fc3\u70b9\u9053\u96c6\u2014\u2014CMP\u9053\u96c6\u3002\u5728\u591a\u9053\u5730\u9707\u91c7\u96c6\u4e2d\uff0c\u5730\u8868\u4e0a\u4f4d\u4e8e\u9707\u6e90\u548c\u63a5\u6536\u5668\u4e2d\u95f4\u7684\u70b9\uff0c\u7531\u591a\u4e2a\u9707\u6e90-\u63a5\u6536\u5668\u5bf9\u5171\u7528\u3002\u516c\u4e2d\u5fc3\u70b9\u5782\u76f4\u4e8e \u5171\u6df1\u5ea6\u70b9 \u6216\u5171\u53cd\u5c04\u70b9\u4e4b\u4e0a\u3002","title":"\u5171\u4e2d\u5fc3\u70b9(CMP)"},{"location":"SeismicInversion/Basic/#cdp","text":"Common Depth Point \u5728\u591a\u9053\u5730\u9707\u91c7\u96c6\u4e2d\uff0c\u5f53\u5730\u5c42\u4e0d\u4e0b\u6c89\u65f6\uff0c\u53cd\u5c04\u9762\u6df1\u5ea6\u5904\u7684\u5171\u53cd\u5c04\u70b9\uff0c\u6216\u6ce2\u4ece\u9707\u6e90\u4f20\u64ad\u5230\u53cd\u5c04\u9762\u518d\u5230\u63a5\u6536\u5668\u65f6\u7684\u4e2d\u95f4\u70b9\u3002\u5728\u5e73\u9762\u5c42\u7684\u60c5\u51b5\u4e0b\uff0c\u5171\u6df1\u5ea6\u70b9\u5782\u76f4\u4f4e\u4e8e \u5171\u4e2d\u5fc3\u70b9 \u3002\u5728\u503e\u659c\u5c42\u4e2d\uff0c\u591a\u4e2a\u6e90\u548c\u63a5\u6536\u70b9\u6ca1\u6709\u5171\u6df1\u5ea6\u70b9\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u503e\u659c\u504f\u79fb\u8fdb\u884c\u5904\u7406\uff0c\u4ee5\u51cf\u5c11\u6570\u636e\u7684\u9519\u8bef\u6216\u4e0d\u9002\u5f53\u7684\u6df7\u5408\u3002","title":"\u5171\u6df1\u5ea6\u70b9(CDP)"},{"location":"SeismicInversion/Basic/#crp","text":"Common Refledtion Point \u5728\u591a\u9053\u5730\u9707\u91c7\u96c6\u4e2d\uff0c\u53cd\u5c04\u9762\u4e0a\u7684\u5171\u540c\u4e2d\u70b9\uff0c\u6216\u6ce2\u4ece\u9707\u6e90\u5230\u53cd\u5c04\u9762\u518d\u5230\u63a5\u6536\u5668\u65f6\u7684\u4e2d\u70b9\uff0c\u5982\u679c\u53cd\u5c04\u9762\u662f\u6c34\u5e73\u7684\uff0c\u5219\u8be5\u4e2d\u70b9\u7531\u591a\u4e2a\u4f4d\u7f6e\u5171\u4eab\u3002\u4e0e \u516c\u6df1\u5ea6\u70b9 \u4e00\u6837\uff0c\u4f46\u5728\u503e\u659c\u5c42\u4e2d\uff0c\u5171\u53cd\u5c04\u70b9\u4e0d\u5b58\u5728\u3002","title":"\u5171\u53cd\u5c04\u70b9(CRP)"},{"location":"SeismicInversion/Basic/#l1l2-regularization","text":"\u4ece\u6570\u5b66\u4e0a\u6765\u8bb2\uff0c\u5c31\u662f\u5728\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u4e2a\u6b63\u5219\u9879\uff08Regularization Term\uff09\uff0c\u6765\u9632\u6b62\u53c2\u6570\u62df\u5408\u5f97\u8fc7\u597d\u3002 \u53c2\u8003\u94fe\u63a5\uff1a https://www.zhihu.com/question/26485586/answer/91420865 L1-Regularization $$\\lambda \\sum_{i=0}^k|w_i| $$ L2-Regularization \\lambda \\sum_{i=0}^kw_i^2 \\lambda \\sum_{i=0}^kw_i^2 <span class=\"arithmatex\"><span class=\"MathJax_Preview\">\\lambda \\sum_{i=0}^kw_i^2</span><script type=\"math/tex\">\\lambda \\sum_{i=0}^kw_i^2","title":"L1&amp;L2 Regularization"},{"location":"SeismicInversion/Basic/#avoamplitude-variation-with-offset","text":"Ostrander\u9996\u6b21\u63d0\u51fa \u5730\u9707\u9053\u632f\u5e45\u968f\u504f\u79fb\u8ddd\u53d8\u5316\uff0c\u6b64\u65f6\u53e0\u52a0\u9053\u632f\u5e45\u4e0d\u7b49\u4e8e \u5782\u76f4\u5165\u5c04\u9053 \uff08\u5373\u96f6\u504f\u79fb\u8ddd\u9053\uff09\u7684\u632f\u5e45\uff0c\u504f\u79fb\u8ddd\u5927\u5c0f\u4e0e\u5165\u5c04\u89d2\u6709\u5173 \u53c2\u8003\u6587\u7ae0\uff1a Tutorial: AVO inversion \u51c6\u5907\u6b65\u9aa4\u4e0e\u5730\u9707\u9053\u53e0\u52a0\u76f8\u540c\uff0c\u9996\u5148\u5c06\u5171\u4e2d\u5fc3\u70b9\u9053\u7ec4\u5408\u6210\u9053\u96c6\uff0c\u5e76\u6309\u504f\u79fb\u8ddd\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u7528\u6b63\u5e38\u65f6\u5dee\u901f\u5ea6\u6a21\u578b\u5bf9\u5230\u8fbe\u6ce2\u8fdb\u884c\u62c9\u5e73\u5904\u7406\uff0c\u62c9\u5e73\u8fc7\u7a0b\u4e2d\u6ce8\u610f\u4fdd\u62a4\u632f\u5e45\u3002\u5f97\u5230\u7684\u53e0\u52a0\u9053\u5e76\u4e0d\u4e0e\u96f6\u504f\u79fb\u8ddd\u9053\u76f8\u4f3c\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u53e0\u52a0\u5904\u7406\u5e76\u4e0d\u80fd\u4fdd\u62a4\u632f\u5e45\u3002\u504f\u79fb\u8ddd\u4e0e\u5165\u5c04\u89d2\u7684\u5173\u7cfb\u53d6\u51b3\u4e8e\u5c04\u7ebf\u8def\u5f84\u3002\u591a\u6570 AVO \u53cd\u6f14\u7b97\u6cd5\u57fa\u4e8e\u53cd\u5c04\u632f\u5e45\u4e0e\u5165\u5c04\u89d2\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u56e0\u6b64\uff0c\u53cd\u6f14\u524d\u7684\u9644\u52a0\u5904\u7406\u6b65\u9aa4\u5c31\u5305\u62ec \u5c06\u504f\u79fb\u8ddd\u8f6c\u6362\u6210\u5165\u5c04\u89d2 \uff0c \u90e8\u5206\u53e0\u52a0\u65b9\u6cd5\uff1a\u5c06\u6bcf\u4e00\u4e2aCMP\u96c6\u5185\u7684\u8fd1\u504f\u79fb\u8ddd\u9053\u8fdb\u884c\u53e0\u52a0\uff0c\u518d\u5c06\u6240\u6709\u53e0\u52a0\u9053\u7ec4\u6210\u8fd1\u504f\u79fb\u8ddd\u9053\u96c6\u3002\u91c7\u7528\u540c\u6837\u7684\u65b9\u6cd5\u5efa\u7acb\u4e2d\u504f\u79fb\u8ddd\u9053\u96c6\u548c\u8fdc\u504f\u79fb\u8ddd\u9053\u96c6\uff0c\u7136\u540e\u5bf9\u6bcf\u79cd\u504f\u79fb\u8ddd\u9053\u96c6\u8fdb\u884c\u5206\u522b\u53cd\u6f14\u3002\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4e9bAVO\u4fe1\u606f\u4e22\u5931","title":"AVO(amplitude variation with offset)"},{"location":"SeismicInversion/Basic/#zoepptriz-equation","text":"\u63cf\u8ff0\u5e73\u9762\u6ce2\u5165\u5c04\u5c04\u7ebf\u548c\u79bb\u6563\u632f\u5e45\u4e4b\u95f4\u5173\u7cfb\uff0c\u4f46\u7531\u4e8e\u5730\u4e0b\u5927\u91cf\u672a\u77e5\u4e0e\u5730\u7403\u7684\u590d\u6742\u6027\uff0c\u5e94\u7528\u5728\u5730\u9707\u6570\u636e\u4e2d\u6709\u5f88\u5927\u56f0\u96be\uff0c\u6240\u4ee5\u63d0\u51fa\u4e86\u5f88\u591a\u8fd1\u4f3c\u65b9\u6cd5","title":"Zoepptriz equation"},{"location":"SeismicInversion/Basic/#_15","text":"\u66f4\u51b7\u3001\u5bc6\u5ea6\u66f4\u5927\u3001\u66f4\u786c \u7684\u5ca9\u77f3\uff0c \u6ce2\u901f\u66f4\u5feb,\u963b\u6297\u8d8a\u9ad8 \uff0c\u56e0\u6b64\u5b83\u4eec\u52fe\u52d2\u51fa\u4e86\u5411\u4e0b\u7684\u6784\u9020\u677f\u5757\u3002 \u5b54\u9699\u5ea6(porosity)\u589e\u52a0 \u4f1a\u5f15\u8d77 \u5c42\u901f\u5ea6\u548c\u5bc6\u5ea6\u4e0b\u964d \uff0c\u56e0\u6b64\u5bfc\u81f4\u76f8\u5e94\u7684 \u58f0\u963b\u6297\u4e0b\u964d \u3002","title":"\u76f8\u5173\u6027\u8d28"},{"location":"SeismicInversion/Basic/#_16","text":"{d = Lm} {d = Lm} m : model, d : recorded data, L : forward-modeling operator \u6027\u8d28\uff1a - \u6709\u89e3\uff0c\u7531\u4e8e\u566a\u58f0\u4f1a\u5bfc\u81f4\u65b9\u7a0b\u8fc7\u5ea6\u786e\u5b9a\u6216\u4e0d\u4e0d\u4e00\u81f4\u5bfc\u81f4\u65e0\u89e3\uff1a \u6b8b\u5dee\u52a0\u6743\u548c\uff0c\u60e9\u7f5a\u51fd\u6570 - \u552f\u4e00\u89e3\uff1a \u6b63\u5219\u5316 - \u89e3\u6301\u7eed\u4f9d\u8d56\u4e8e\u6570\u636e\uff1a \u6b63\u5219\u5316 traveltime tomography - 1. \u79bb\u6563\u5316\u6a21\u578bm\uff0c\u6bcf\u4e2a\u7f51\u683c\u5bf9\u5e94slowness Nx1 - 2. \u79bb\u6563\u5316\u6570\u636ed Mx1 - 3. \u79bb\u6563\u5316\u8fd0\u7b97\u7b26L MxN \u6545\uff1a \\displaystyle\\sum_{j}l_{ij}m_j=d_i\\tag {1.1} \\displaystyle\\sum_{j}l_{ij}m_j=d_i\\tag {1.1} \u7ebf\u6027\u5316\uff1a \u7531\u4e8eL\u53d6\u51b3\u4e8em \u4ee4 m^{(0)}=m_o m^{(0)}=m_o ( m_o m_o \u6307\u9884\u6d4b\u503c), \u4f7f\u5176\u63a5\u8fd1\u771f\u5b9e\u6a21\u578b\u5e76\u7ebf\u6027\u5316\u6570\u636e\u4e0e\u6a21\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\u8fdb\u884c\u8fed\u4ee3\u6536\u655b \u5229\u7528\u6cf0\u52d2\u5c55\u5f00\u5f0f ( d_i\u968f\u7740\\pmb m\u53d8\u5316\uff0c \\pmb m \u4e3a\u771f\u5b9e\u6a21\u578b\uff0c\\pmb m_o\u4e3a\u9884\u6d4b\u503c d_i\u968f\u7740\\pmb m\u53d8\u5316\uff0c \\pmb m \u4e3a\u771f\u5b9e\u6a21\u578b\uff0c\\pmb m_o\u4e3a\u9884\u6d4b\u503c ) d_i(\\pmb m)\\approx d_i(\\pmb m_o) + \\displaystyle\\sum_j\\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial m_j}\\right]\\right|_{m_o}\\delta m_j\\tag{1.2} d_i(\\pmb m)\\approx d_i(\\pmb m_o) + \\displaystyle\\sum_j\\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial m_j}\\right]\\right|_{m_o}\\delta m_j\\tag{1.2} \u5316\u7b80\u5f97 \\delta\\pmb d(\\pmb m) = \\pmb L\\delta\\pmb m\\tag{1.3} \\delta\\pmb d(\\pmb m) = \\pmb L\\delta\\pmb m\\tag{1.3} l_{ij}=\\frac{\\partial d_i(\\pmb m_o)}{\\partial m_j} \u4ee3\u8868\u7b2ci\u4e2a\u6570\u636e\u5bf9\u6a21\u578b\u7b2cj\u4e2acell\u7684\u6270\u52a8 l_{ij}=\\frac{\\partial d_i(\\pmb m_o)}{\\partial m_j} \u4ee3\u8868\u7b2ci\u4e2a\u6570\u636e\u5bf9\u6a21\u578b\u7b2cj\u4e2acell\u7684\u6270\u52a8","title":"\u53cd\u6f14\u95ee\u9898"},{"location":"SeismicInversion/Basic/#1","text":"\\displaystyle\\sum_j\\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial m_j}\\right]\\right|_{m_o}\\delta m_j \u4e0e \\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial \\pmb m}\\right]\\right|_{m_o}\\delta\\pmb m \u76f8\u7b49\u5417\uff1f \\displaystyle\\sum_j\\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial m_j}\\right]\\right|_{m_o}\\delta m_j \u4e0e \\left.\\left[\\frac{\\partial {d_i(\\pmb m)}}{\\partial \\pmb m}\\right]\\right|_{m_o}\\delta\\pmb m \u76f8\u7b49\u5417\uff1f \u6b63\u5219\u5316 \u4e0d\u7a33\u5b9a\u89e3\u95ee\u9898 \u89c4\u5b9a\u4e00\u4e2a\u6700\u5c0f\u5316\u76ee\u6807\u51fd\u6570\uff1a\uff08\u6570\u636e\u6b8b\u5dee\u7684p\u8303\u6570\u4e0e\u60e9\u7f5a\u6761\u4ef6\uff09 \\epsilon = \\frac{1}{p}\\parallel\\pmb L\\delta\\pmb m-\\delta\\pmb d\\parallel^p_p+\\eta^2g(\\pmb m)\\tag{1.4} \\epsilon = \\frac{1}{p}\\parallel\\pmb L\\delta\\pmb m-\\delta\\pmb d\\parallel^p_p+\\eta^2g(\\pmb m)\\tag{1.4} \u5f53p=2\u65f6,\u5373\u4e8c\u8303\u6570 \u5f97 \\delta\\pmb m=\\left[\\pmb {L^TL}+\\eta^2\\pmb I\\right]^{-1}\\pmb{L^T}\\delta\\pmb d\\tag{1.5} \\delta\\pmb m=\\left[\\pmb {L^TL}+\\eta^2\\pmb I\\right]^{-1}\\pmb{L^T}\\delta\\pmb d\\tag{1.5}","title":"\u7591\u95ee1"},{"location":"SeismicInversion/Basic/#2","text":"\u8fed\u4ee3\u5316\u6b63\u5219(\u5177\u4f53\u89c1p30) \u4e3a\u4e86\u51cf\u5c0f\u8ba1\u7b97\u91cf \\left[\\pmb{L^TL}\\right]_{ij}\\approx\\left[\\pmb{L^TL}\\right]_{ii}\\delta_{ij} \\left[\\pmb{L^TL}\\right]_{ij}\\approx\\left[\\pmb{L^TL}\\right]_{ii}\\delta_{ij} \u89c4\u5b9a\u6b63\u5219\u5316\u4e0e\u6b65\u957f\u53c2\u6570 \\alpha \\alpha","title":"\u7591\u95ee2\uff08\u600e\u4e48\u63a8\u5bfc\u2b06\uff09"},{"location":"SeismicInversion/BasicMath/","text":"\u6cf0\u52d2\u5c55\u5f00 \u00b6 \u4e00\u5143 f(x)=f(x_0)+f^{'}(x_0)(x-x_0)+\\frac{f^{''}(x_0)}{2!}(x-x_0)^2+\\cdots+\\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n+R_n(x)\\tag1 f(x)=f(x_0)+f^{'}(x_0)(x-x_0)+\\frac{f^{''}(x_0)}{2!}(x-x_0)^2+\\cdots+\\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n+R_n(x)\\tag1 \u591a\u5143 f(x,y)=f(x_k,y_k)+\\left[ \\begin{matrix}f'_x(x_k,y_k)&f'_y(x_k,y_k)\\end{matrix} \\right]\\left[\\begin{matrix}x-x_k\\\\y-y_k\\end{matrix} \\right]+\\\\\\frac1{2!}\\left[ \\begin{matrix}x-x_k&y-y_k\\end{matrix} \\right]\\left[ \\begin{matrix}f''_{xx}(x_k,y_k)&f''_{xy}(x_k,y_k)\\\\ f''_{yx}(x_k,y_k)&f''_{yy}(x_k,y_k)\\end{matrix} \\right]\\left[\\begin{matrix}x-x_k\\\\y-y_k\\end{matrix} \\right]+\\cdot\\cdot\\cdot+o^n\\tag2 f(x,y)=f(x_k,y_k)+\\left[ \\begin{matrix}f'_x(x_k,y_k)&f'_y(x_k,y_k)\\end{matrix} \\right]\\left[\\begin{matrix}x-x_k\\\\y-y_k\\end{matrix} \\right]+\\\\\\frac1{2!}\\left[ \\begin{matrix}x-x_k&y-y_k\\end{matrix} \\right]\\left[ \\begin{matrix}f''_{xx}(x_k,y_k)&f''_{xy}(x_k,y_k)\\\\ f''_{yx}(x_k,y_k)&f''_{yy}(x_k,y_k)\\end{matrix} \\right]\\left[\\begin{matrix}x-x_k\\\\y-y_k\\end{matrix} \\right]+\\cdot\\cdot\\cdot+o^n\\tag2 \u548c\u5dee\u5316\u79ef \u00b6 \u6b63\u52a0\u6b63\uff0c\u6b63\u5728\u524d\uff1b\u4f59\u52a0\u4f59\uff0c\u4f59\u5e76\u80a9\uff1b\u6b63\u51cf\u6b63\uff0c\u4f59\u5728\u524d\uff1b\u4f59\u51cf\u4f59\uff0c\u8d1f\u6b63\u5f26\uff1b \\left\\{\\begin{matrix} \\sin\\alpha+\\sin\\beta=2\\sin\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\sin\\alpha-\\sin\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha+\\cos\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha-\\cos\\beta=-2\\sin\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\end{matrix}\\right. \\left\\{\\begin{matrix} \\sin\\alpha+\\sin\\beta=2\\sin\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\sin\\alpha-\\sin\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha+\\cos\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha-\\cos\\beta=-2\\sin\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\end{matrix}\\right. \u65af\u6d85\u5c14\u5b9a\u5f8b \u00b6 p = \\frac{\\sin \\theta_1}{\\alpha_1} = \\frac{\\sin \\theta_2}{\\alpha_2}=\\frac{\\sin\\varphi_1}{\\beta_1} p = \\frac{\\sin \\theta_1}{\\alpha_1} = \\frac{\\sin \\theta_2}{\\alpha_2}=\\frac{\\sin\\varphi_1}{\\beta_1} \u5176\u4e2d \\theta \\theta \u4e3a\u5165\u5c04/\u4f20\u64ad\u89d2\uff0c \\alpha \\alpha \u4e3ap\u6ce2\u5728\u4ecb\u8d28\u4e2d\u7684\u76f8\u901f\u5ea6\uff0c \\varphi \\varphi \u4e3aS\u6ce2\u53cd\u5c04/\u4f20\u64ad\u89d2\uff0c \\beta \\beta \u4e3aS\u6ce2\u901f\u5ea6 \u77e9\u9635\u8303\u6570 \u00b6 \u8bf1\u5bfcp-\u8303\u6570 \u00b6 ||A||_p=\\max_{x\\neq 0}\\frac{||Ax||_p}{||x||_p}=\\max_{x\\neq 0}\\frac{\\left(\\sum_{i=1}^m|\\sum_{j=1}^n a_{ij}x_{j}|^p\\right)^{1/p}}{\\left(\\sum_{j=1}^n|x_j|^p\\right)^{1/p}} ||A||_p=\\max_{x\\neq 0}\\frac{||Ax||_p}{||x||_p}=\\max_{x\\neq 0}\\frac{\\left(\\sum_{i=1}^m|\\sum_{j=1}^n a_{ij}x_{j}|^p\\right)^{1/p}}{\\left(\\sum_{j=1}^n|x_j|^p\\right)^{1/p}} ||A||_1=\\max_{1\\leq j\\leq n\\sum}\\sum^m_{j=1}|a_{ij}| ||A||_1=\\max_{1\\leq j\\leq n\\sum}\\sum^m_{j=1}|a_{ij}| ||A||_\\infty=\\max_{1\\leq i\\leq m\\sum}\\sum^n_{i=1}|a_{ij}| ||A||_\\infty=\\max_{1\\leq i\\leq m\\sum}\\sum^n_{i=1}|a_{ij}| ||A||_2=\\sqrt{\\lambda_{\\max}{A^*A}} ||A||_2=\\sqrt{\\lambda_{\\max}{A^*A}} \u5f53p = 2\uff08\u6b27\u51e0\u91cc\u5fb7\u8303\u6570\uff09\u65f6\uff0c\u8bf1\u5bfc\u7684\u77e9\u9635\u8303\u6570\u5c31\u662f\u8c31\u8303\u6570\u3002\u77e9\u9635A\u7684\u8c31\u8303\u6570\u662fA\u6700\u5927\u7684\u5947\u5f02\u503c\u6216\u534a\u6b63\u5b9a\u77e9\u9635 A^*A A^*A \u7684\u6700\u5927\u7279\u5f81\u503c\u7684\u5e73\u65b9\u6839 \u5143\u8303\u6570 \u00b6 ||A||_p=\\left(\\sum^m_{i=i}\\sum^n_{j=1}|a_{ij}|^p\\right)^{1/p} ||A||_p=\\left(\\sum^m_{i=i}\\sum^n_{j=1}|a_{ij}|^p\\right)^{1/p} Schatten\u8303\u6570 \u00b6 \u7528\u77e9\u9635\u7684\u5947\u5f02\u503c\u5b9a\u4e49\u7684\u8303\u6570 ||A||_p=\\left(\\sum^{\\min\\{m,n\\}}_{i=1}\\sigma^p_i\\right)^{1/p} ||A||_p=\\left(\\sum^{\\min\\{m,n\\}}_{i=1}\\sigma^p_i\\right)^{1/p} \u53d8\u5206\u6cd5\u4e0e\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u65b9\u7a0b \u00b6 \u53c2\u8003\uff1a \u6d45\u8c08\u53d8\u5206\u539f\u7406 \u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u5b9a\u70b9 (a,p) (a,p) \u548c (b,q) (b,q) \uff0c\u8fde\u63a5\u8fd9\u4e24\u70b9\u7684\u4efb\u610f\u66f2\u7ebf\u7684\u65b9\u7a0b y = y(x) y = y(x) \u90fd\u5c06\u6ee1\u8db3\u5982\u4e0b\u7684\u8fb9\u754c\u6761\u4ef6\uff1a y(a)=p, \\quad y(b)=q y(a)=p, \\quad y(b)=q \u73b0\u5728\u8003\u8651\u5982\u4e0b\u5f62\u5f0f\u7684\u5b9a\u79ef\u5206\uff1a I = \\int_a^b f(y,y')\\mathrm{d}x I = \\int_a^b f(y,y')\\mathrm{d}x \u6211\u4eec\u671f\u671b\u627e\u5230\u4e00\u4e2a\u5177\u4f53\u7684 y(x) y(x) ,\u4f7f\u5f97 I I \u6709\u6781\u503c\uff08\u6781\u5927\u6216\u6781\u5c0f\uff09 Euler-Lagrange Equation \u5982\u679c I I \u6709\u6781\u503c\uff0c\u5bf9\u4efb\u610f\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684 \\delta y(x) \\delta y(x) \u90fd\u5fc5\u987b\u6709 \\delta I = 0 \\delta I = 0 \uff0c\u8fd9\u5c31\u8981\u6c42\uff1a \\frac{\\partial f}{\\partial y} - \\frac{\\mathrm{d}}{\\mathrm{d}x} \\left( \\frac{\\partial f}{\\partial y'} \\right) = 0 \\frac{\\partial f}{\\partial y} - \\frac{\\mathrm{d}}{\\mathrm{d}x} \\left( \\frac{\\partial f}{\\partial y'} \\right) = 0 \u68af\u5ea6\u5411\u91cf \u00b6 \\nabla f = \\begin{pmatrix} \\frac{\\partial f}{\\partial x_1} \\\\ \\frac{\\partial f}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial f}{\\partial x_n} \\end{pmatrix} \\\\ \\nabla f = \\begin{pmatrix} \\frac{\\partial f}{\\partial x_1} \\\\ \\frac{\\partial f}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial f}{\\partial x_n} \\end{pmatrix} \\\\ \u96c5\u53ef\u6bd4\u77e9\u9635 \u00b6 {\\displaystyle \\mathbf {J} ={\\begin{bmatrix}{\\dfrac {\\partial \\mathbf {f} }{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial \\mathbf {f} }{\\partial x_{n}}}\\end{bmatrix}}={\\begin{bmatrix}{\\dfrac {\\partial f_{1}}{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial f_{1}}{\\partial x_{n}}}\\\\\\vdots &\\ddots &\\vdots \\\\{\\dfrac {\\partial f_{m}}{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial f_{m}}{\\partial x_{n}}}\\end{bmatrix}}} \\\\ {\\displaystyle \\mathbf {J} ={\\begin{bmatrix}{\\dfrac {\\partial \\mathbf {f} }{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial \\mathbf {f} }{\\partial x_{n}}}\\end{bmatrix}}={\\begin{bmatrix}{\\dfrac {\\partial f_{1}}{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial f_{1}}{\\partial x_{n}}}\\\\\\vdots &\\ddots &\\vdots \\\\{\\dfrac {\\partial f_{m}}{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial f_{m}}{\\partial x_{n}}}\\end{bmatrix}}} \\\\ \u53c2\u8003\u7f51\u5740 \u00b6 \u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u77e9\u9635\u6c42\u5bfc\u5165\u95e8","title":"\u6570\u5b66\u57fa\u7840"},{"location":"SeismicInversion/BasicMath/#_1","text":"\u4e00\u5143 f(x)=f(x_0)+f^{'}(x_0)(x-x_0)+\\frac{f^{''}(x_0)}{2!}(x-x_0)^2+\\cdots+\\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n+R_n(x)\\tag1 f(x)=f(x_0)+f^{'}(x_0)(x-x_0)+\\frac{f^{''}(x_0)}{2!}(x-x_0)^2+\\cdots+\\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n+R_n(x)\\tag1 \u591a\u5143 f(x,y)=f(x_k,y_k)+\\left[ \\begin{matrix}f'_x(x_k,y_k)&f'_y(x_k,y_k)\\end{matrix} \\right]\\left[\\begin{matrix}x-x_k\\\\y-y_k\\end{matrix} \\right]+\\\\\\frac1{2!}\\left[ \\begin{matrix}x-x_k&y-y_k\\end{matrix} \\right]\\left[ \\begin{matrix}f''_{xx}(x_k,y_k)&f''_{xy}(x_k,y_k)\\\\ f''_{yx}(x_k,y_k)&f''_{yy}(x_k,y_k)\\end{matrix} \\right]\\left[\\begin{matrix}x-x_k\\\\y-y_k\\end{matrix} \\right]+\\cdot\\cdot\\cdot+o^n\\tag2 f(x,y)=f(x_k,y_k)+\\left[ \\begin{matrix}f'_x(x_k,y_k)&f'_y(x_k,y_k)\\end{matrix} \\right]\\left[\\begin{matrix}x-x_k\\\\y-y_k\\end{matrix} \\right]+\\\\\\frac1{2!}\\left[ \\begin{matrix}x-x_k&y-y_k\\end{matrix} \\right]\\left[ \\begin{matrix}f''_{xx}(x_k,y_k)&f''_{xy}(x_k,y_k)\\\\ f''_{yx}(x_k,y_k)&f''_{yy}(x_k,y_k)\\end{matrix} \\right]\\left[\\begin{matrix}x-x_k\\\\y-y_k\\end{matrix} \\right]+\\cdot\\cdot\\cdot+o^n\\tag2","title":"\u6cf0\u52d2\u5c55\u5f00"},{"location":"SeismicInversion/BasicMath/#_2","text":"\u6b63\u52a0\u6b63\uff0c\u6b63\u5728\u524d\uff1b\u4f59\u52a0\u4f59\uff0c\u4f59\u5e76\u80a9\uff1b\u6b63\u51cf\u6b63\uff0c\u4f59\u5728\u524d\uff1b\u4f59\u51cf\u4f59\uff0c\u8d1f\u6b63\u5f26\uff1b \\left\\{\\begin{matrix} \\sin\\alpha+\\sin\\beta=2\\sin\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\sin\\alpha-\\sin\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha+\\cos\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha-\\cos\\beta=-2\\sin\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\end{matrix}\\right. \\left\\{\\begin{matrix} \\sin\\alpha+\\sin\\beta=2\\sin\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\sin\\alpha-\\sin\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha+\\cos\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha-\\cos\\beta=-2\\sin\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\end{matrix}\\right.","title":"\u548c\u5dee\u5316\u79ef"},{"location":"SeismicInversion/BasicMath/#_3","text":"p = \\frac{\\sin \\theta_1}{\\alpha_1} = \\frac{\\sin \\theta_2}{\\alpha_2}=\\frac{\\sin\\varphi_1}{\\beta_1} p = \\frac{\\sin \\theta_1}{\\alpha_1} = \\frac{\\sin \\theta_2}{\\alpha_2}=\\frac{\\sin\\varphi_1}{\\beta_1} \u5176\u4e2d \\theta \\theta \u4e3a\u5165\u5c04/\u4f20\u64ad\u89d2\uff0c \\alpha \\alpha \u4e3ap\u6ce2\u5728\u4ecb\u8d28\u4e2d\u7684\u76f8\u901f\u5ea6\uff0c \\varphi \\varphi \u4e3aS\u6ce2\u53cd\u5c04/\u4f20\u64ad\u89d2\uff0c \\beta \\beta \u4e3aS\u6ce2\u901f\u5ea6","title":"\u65af\u6d85\u5c14\u5b9a\u5f8b"},{"location":"SeismicInversion/BasicMath/#_4","text":"","title":"\u77e9\u9635\u8303\u6570"},{"location":"SeismicInversion/BasicMath/#p-","text":"||A||_p=\\max_{x\\neq 0}\\frac{||Ax||_p}{||x||_p}=\\max_{x\\neq 0}\\frac{\\left(\\sum_{i=1}^m|\\sum_{j=1}^n a_{ij}x_{j}|^p\\right)^{1/p}}{\\left(\\sum_{j=1}^n|x_j|^p\\right)^{1/p}} ||A||_p=\\max_{x\\neq 0}\\frac{||Ax||_p}{||x||_p}=\\max_{x\\neq 0}\\frac{\\left(\\sum_{i=1}^m|\\sum_{j=1}^n a_{ij}x_{j}|^p\\right)^{1/p}}{\\left(\\sum_{j=1}^n|x_j|^p\\right)^{1/p}} ||A||_1=\\max_{1\\leq j\\leq n\\sum}\\sum^m_{j=1}|a_{ij}| ||A||_1=\\max_{1\\leq j\\leq n\\sum}\\sum^m_{j=1}|a_{ij}| ||A||_\\infty=\\max_{1\\leq i\\leq m\\sum}\\sum^n_{i=1}|a_{ij}| ||A||_\\infty=\\max_{1\\leq i\\leq m\\sum}\\sum^n_{i=1}|a_{ij}| ||A||_2=\\sqrt{\\lambda_{\\max}{A^*A}} ||A||_2=\\sqrt{\\lambda_{\\max}{A^*A}} \u5f53p = 2\uff08\u6b27\u51e0\u91cc\u5fb7\u8303\u6570\uff09\u65f6\uff0c\u8bf1\u5bfc\u7684\u77e9\u9635\u8303\u6570\u5c31\u662f\u8c31\u8303\u6570\u3002\u77e9\u9635A\u7684\u8c31\u8303\u6570\u662fA\u6700\u5927\u7684\u5947\u5f02\u503c\u6216\u534a\u6b63\u5b9a\u77e9\u9635 A^*A A^*A \u7684\u6700\u5927\u7279\u5f81\u503c\u7684\u5e73\u65b9\u6839","title":"\u8bf1\u5bfcp-\u8303\u6570"},{"location":"SeismicInversion/BasicMath/#_5","text":"||A||_p=\\left(\\sum^m_{i=i}\\sum^n_{j=1}|a_{ij}|^p\\right)^{1/p} ||A||_p=\\left(\\sum^m_{i=i}\\sum^n_{j=1}|a_{ij}|^p\\right)^{1/p}","title":"\u5143\u8303\u6570"},{"location":"SeismicInversion/BasicMath/#schatten","text":"\u7528\u77e9\u9635\u7684\u5947\u5f02\u503c\u5b9a\u4e49\u7684\u8303\u6570 ||A||_p=\\left(\\sum^{\\min\\{m,n\\}}_{i=1}\\sigma^p_i\\right)^{1/p} ||A||_p=\\left(\\sum^{\\min\\{m,n\\}}_{i=1}\\sigma^p_i\\right)^{1/p}","title":"Schatten\u8303\u6570"},{"location":"SeismicInversion/BasicMath/#-","text":"\u53c2\u8003\uff1a \u6d45\u8c08\u53d8\u5206\u539f\u7406 \u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u5b9a\u70b9 (a,p) (a,p) \u548c (b,q) (b,q) \uff0c\u8fde\u63a5\u8fd9\u4e24\u70b9\u7684\u4efb\u610f\u66f2\u7ebf\u7684\u65b9\u7a0b y = y(x) y = y(x) \u90fd\u5c06\u6ee1\u8db3\u5982\u4e0b\u7684\u8fb9\u754c\u6761\u4ef6\uff1a y(a)=p, \\quad y(b)=q y(a)=p, \\quad y(b)=q \u73b0\u5728\u8003\u8651\u5982\u4e0b\u5f62\u5f0f\u7684\u5b9a\u79ef\u5206\uff1a I = \\int_a^b f(y,y')\\mathrm{d}x I = \\int_a^b f(y,y')\\mathrm{d}x \u6211\u4eec\u671f\u671b\u627e\u5230\u4e00\u4e2a\u5177\u4f53\u7684 y(x) y(x) ,\u4f7f\u5f97 I I \u6709\u6781\u503c\uff08\u6781\u5927\u6216\u6781\u5c0f\uff09 Euler-Lagrange Equation \u5982\u679c I I \u6709\u6781\u503c\uff0c\u5bf9\u4efb\u610f\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684 \\delta y(x) \\delta y(x) \u90fd\u5fc5\u987b\u6709 \\delta I = 0 \\delta I = 0 \uff0c\u8fd9\u5c31\u8981\u6c42\uff1a \\frac{\\partial f}{\\partial y} - \\frac{\\mathrm{d}}{\\mathrm{d}x} \\left( \\frac{\\partial f}{\\partial y'} \\right) = 0 \\frac{\\partial f}{\\partial y} - \\frac{\\mathrm{d}}{\\mathrm{d}x} \\left( \\frac{\\partial f}{\\partial y'} \\right) = 0","title":"\u53d8\u5206\u6cd5\u4e0e\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u65b9\u7a0b"},{"location":"SeismicInversion/BasicMath/#_6","text":"\\nabla f = \\begin{pmatrix} \\frac{\\partial f}{\\partial x_1} \\\\ \\frac{\\partial f}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial f}{\\partial x_n} \\end{pmatrix} \\\\ \\nabla f = \\begin{pmatrix} \\frac{\\partial f}{\\partial x_1} \\\\ \\frac{\\partial f}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial f}{\\partial x_n} \\end{pmatrix} \\\\","title":"\u68af\u5ea6\u5411\u91cf"},{"location":"SeismicInversion/BasicMath/#_7","text":"{\\displaystyle \\mathbf {J} ={\\begin{bmatrix}{\\dfrac {\\partial \\mathbf {f} }{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial \\mathbf {f} }{\\partial x_{n}}}\\end{bmatrix}}={\\begin{bmatrix}{\\dfrac {\\partial f_{1}}{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial f_{1}}{\\partial x_{n}}}\\\\\\vdots &\\ddots &\\vdots \\\\{\\dfrac {\\partial f_{m}}{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial f_{m}}{\\partial x_{n}}}\\end{bmatrix}}} \\\\ {\\displaystyle \\mathbf {J} ={\\begin{bmatrix}{\\dfrac {\\partial \\mathbf {f} }{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial \\mathbf {f} }{\\partial x_{n}}}\\end{bmatrix}}={\\begin{bmatrix}{\\dfrac {\\partial f_{1}}{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial f_{1}}{\\partial x_{n}}}\\\\\\vdots &\\ddots &\\vdots \\\\{\\dfrac {\\partial f_{m}}{\\partial x_{1}}}&\\cdots &{\\dfrac {\\partial f_{m}}{\\partial x_{n}}}\\end{bmatrix}}} \\\\","title":"\u96c5\u53ef\u6bd4\u77e9\u9635"},{"location":"SeismicInversion/BasicMath/#_8","text":"\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u77e9\u9635\u6c42\u5bfc\u5165\u95e8","title":"\u53c2\u8003\u7f51\u5740"},{"location":"SeismicInversion/Optimization/","text":"\u51f8\u4f18\u5316\u6982\u62ec \u00b6 \u53d8\u91cf\u9009\u62e9\u4e4bLASSO\u2014\uff08\u4e00\uff09\u51f8\u6b63\u5219\u5316\u65b9\u6cd51 least-square \u00b6 \u53c2\u8003: https://textbooks.math.gatech.edu/ila/least-squares.html https://zhuanlan.zhihu.com/p/31341436 https://en.wikipedia.org/wiki/Ordinary_least_squares \u5bf9\u4e8e\u65b9\u7a0b Ax=b Ax=b \u6700\u5c0f\u4e8c\u4e58\u6cd5\u7684\u89e3\u4e3a \\hat x=(A^TA)^{-1}A^Tb \\hat x=(A^TA)^{-1}A^Tb \u4e0d\u9002\u7528\u4e8e\u4e0d\u6ee1\u79e9\u7684\u60c5\u51b5\u3002 Tikhonov regularization/Ridge Regression(RR) \u00b6 \u53c2\u8003\uff1a https://en.wikipedia.org/wiki/Ridge_regression \u4e5f\u79f0 \u5cad\u56de\u5f52 \uff0c\u5cad\u56de\u5f52\u662f\u5728\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e2d\u5b58\u5728\u591a\u5171\u7ebf\u6027(\u9ad8\u5ea6\u76f8\u5173)\u81ea\u53d8\u91cf\u65f6\uff0c\u4f5c\u4e3a\u89e3\u51b3\u6700\u5c0f\u4e8c\u4e58\u4f30\u8ba1\u91cf\u4e0d\u7cbe\u786e\u95ee\u9898\u7684\u4e00\u79cd\u53ef\u80fd\u65b9\u6cd5. \u901a\u8fc7\u5728\u5bf9\u89d2\u7ebf\u4e0a\u6dfb\u52a0\u6b63\u5143\u7d20\u6765\u7f13\u89e3\uff0c\u4ece\u800c\u51cf\u5c11\u5176\u6761\u4ef6\u6570\u3002\u7c7b\u4f3c\u4e8e\u666e\u901a\u7684\u6700\u5c0f\u4e8c\u4e58\u4f30\u8ba1\u5668\uff0c \\lambda \\lambda \u4e3a\u6b63\u5219\u5316\u963b\u5c3cRegularization dampings {\\displaystyle {\\hat {\\beta }}_{R}=(\\mathbf {X} ^{\\mathsf {T}}\\mathbf {X} +\\lambda \\mathbf {I} )^{-1}\\mathbf {X} ^{\\mathsf {T}}\\mathbf {y} } {\\displaystyle {\\hat {\\beta }}_{R}=(\\mathbf {X} ^{\\mathsf {T}}\\mathbf {X} +\\lambda \\mathbf {I} )^{-1}\\mathbf {X} ^{\\mathsf {T}}\\mathbf {y} } \u5728\u6700\u5c0f\u4e8c\u4e58\u6700\u5c0f\u5316\u8fc7\u7a0b\u4e2d\u52a0\u5165\u6b63\u5219\u5316\u9879\uff0c\u9632\u6b62\u8fc7\u62df\u5408\uff0c\u83b7\u5f97\u66f4\u52a0\u7406\u60f3\u7684\u89e3\uff0c\u7c7b\u4f3c\u4e8eL2\u6b63\u5219\u5316\u3002 {\\displaystyle \\|A\\mathbf {x} -\\mathbf {b} \\|_{2}^{2}+\\|\\Gamma \\mathbf {x} \\|_{2}^{2}} {\\displaystyle \\|A\\mathbf {x} -\\mathbf {b} \\|_{2}^{2}+\\|\\Gamma \\mathbf {x} \\|_{2}^{2}} \u89e3\u4e3a {\\displaystyle {\\hat {x}}=(A^{\\top }A+\\Gamma ^{\\top }\\Gamma )^{-1}A^{\\top }\\mathbf {b} .} {\\displaystyle {\\hat {x}}=(A^{\\top }A+\\Gamma ^{\\top }\\Gamma )^{-1}A^{\\top }\\mathbf {b} .} Tikhonov matrix \\Gamma = \\alpha I \\Gamma = \\alpha I Generalized Tikhonov regularization \u00b6 {\\displaystyle x^{*}=(A^{\\top }PA+Q)^{-1}(A^{\\top }Pb+Qx_{0})} {\\displaystyle x^{*}=(A^{\\top }PA+Q)^{-1}(A^{\\top }Pb+Qx_{0})} \u5176\u4e2dP\u4e3ab\u7684\u534f\u65b9\u5dee\u77e9\u9635\uff0c x_0 x_0 \u4e3a x x \u7684\u671f\u671b\u503c Lavrentyev regularization \u00b6 \u5982\u679cA\u662f\u5bf9\u79f0\u6b63\u5b9a\u7684\uff0c\u5373\u6709 A=A^{\\top }>0 A=A^{\\top }>0 \uff0c \u6240\u4ee5 {\\displaystyle \\|x\\|_{P}^{2}=x^{\\top }A^{-1}x} {\\displaystyle \\|x\\|_{P}^{2}=x^{\\top }A^{-1}x} ???? \u6545\u6700\u4f18\u89e3\u4e3a {\\displaystyle x^{*}=(A+Q)^{-1}(b+Qx_{0})} {\\displaystyle x^{*}=(A+Q)^{-1}(b+Qx_{0})} \u53ef\u4ee5\u770b\u4f5cTikhonov regularization\u4e2d {\\displaystyle A=A^{\\top }=P^{-1}} {\\displaystyle A=A^{\\top }=P^{-1}} \u7684\u60c5\u51b5 Bregman method \u00b6 \u53c2\u8003\uff1a \u5982\u4f55\u7406\u89e3Bregman divergence? Bregman \u6563\u5ea6\uff08Bregman divergence\uff09\u548cBregman\u4fe1\u606f\uff08Bregman information\uff09 \u673a\u5668\u5b66\u4e60\u4e2d\u7684\u6570\u5b66\u2014\u2014\u8ddd\u79bb\u5b9a\u4e49\uff08\u4e8c\u5341\u4e94\uff09\uff1a\u5e03\u96f7\u683c\u66fc\u6563\u5ea6\uff08Bregman Divergence\uff09 Split-Bregman\u8fed\u4ee3\u65b9\u5f0f \u5b9a\u4e49Bregman\u6563\u5ea6\u4e3a D_{F}(p,q)=F(p)-F(q)-\\langle \\nabla F(q),p-q\\rangle D_{F}(p,q)=F(p)-F(q)-\\langle \\nabla F(q),p-q\\rangle \u51e0\u4f55\u610f\u4e49\u5982\u4e0b\u56fe \u9009\u62e9\u4e0d\u540c\u7684F\u4f1a\u6709\u4e0d\u540c\u7684\u635f\u5931\u51fd\u6570 \u4f8b\u5982\u6700\u5c0f\u5747\u65b9\u8bef\u5dee d^2(x,y)=\\|x-y\\|^2= \\left< x-y,x-y \\right> = \\|x\\| ^2 - \\|y\\|^2-\\left<2y,x-y \\right> d^2(x,y)=\\|x-y\\|^2= \\left< x-y,x-y \\right> = \\|x\\| ^2 - \\|y\\|^2-\\left<2y,x-y \\right> Bregman Iteration \u00b6 u_{k+1}=\\argmin_uD^{p_k}_J(u,u_k)+\\lambda\\pmb H(u), p_k\\in\\partial J(u_k) u_{k+1}=\\argmin_uD^{p_k}_J(u,u_k)+\\lambda\\pmb H(u), p_k\\in\\partial J(u_k) \u7b49\u4ef7\u4e8e u_{k+1}=\\arg \\min _{u} J(u)-\\left\\langle p, u-u_{k}\\right\\rangle+\\lambda H(u), \\quad p_{k} \\in \\partial J\\left(u_{k}\\right) u_{k+1}=\\arg \\min _{u} J(u)-\\left\\langle p, u-u_{k}\\right\\rangle+\\lambda H(u), \\quad p_{k} \\in \\partial J\\left(u_{k}\\right) Result\uff0c\u8bc1\u660e\u89c1\u6587\u6863 \u300aNotes on Bregman Iteration\u300b \\pmb H(u_{k+1})\\leq \\pmb H(u_{k+1})+\\frac{1}{\\lambda}D^{p_k}_J(u_{k+1},u_k)\\leq\\pmb H(u_k) \\pmb H(u_{k+1})\\leq \\pmb H(u_{k+1})+\\frac{1}{\\lambda}D^{p_k}_J(u_{k+1},u_k)\\leq\\pmb H(u_k) \\left\\{\\begin{array}{l} u_{k+1}=\\argmin_uD_{J}^{p_{k}}\\left(u, u_{k}\\right)+\\lambda H(u) \\\\ p_{k+1}=p_{k}-\\lambda \\nabla H\\left(u_{k+1}\\right) \\end{array}\\right. \\left\\{\\begin{array}{l} u_{k+1}=\\argmin_uD_{J}^{p_{k}}\\left(u, u_{k}\\right)+\\lambda H(u) \\\\ p_{k+1}=p_{k}-\\lambda \\nabla H\\left(u_{k+1}\\right) \\end{array}\\right. \u5047\u8bbe H(u,f)=\\frac12||Au-f||^2_2 H(u,f)=\\frac12||Au-f||^2_2 \uff0c\u5219 p_0=0 p_0=0 \u65f6\u7684\u8fed\u4ee3\u8fc7\u7a0b\u7b49\u4ef7\u4e8e $$ \\left{ \\begin{array}{l} u_{k+1}=\\arg \\min {u} J(u)+\\lambda H\\left(u, f {k}\\right) \\ f_{k+1}=f_{k}+\\left(f-A u_{k+1}\\right), \\quad f_{0}=f \\end{array}\\right. $$ Linearized Bregman \u00b6 \u5047\u8bbe J(u)=||u||_1 J(u)=||u||_1 \uff0c\u5c06H(u)\u8fdb\u884c\u77e9\u9635\u6cf0\u52d2\u5c55\u5f00\u5f97 H(u)\\approx H(u_k)+\\nabla H(u_k)\\cdot(u_k-u) H(u)\\approx H(u_k)+\\nabla H(u_k)\\cdot(u_k-u) \u4f46\u662f\u8fd9\u79cd\u8fd1\u4f3c\u5c55\u5f00\u53ea\u6709\u5728 u u \u548c u_k u_k \u5341\u5206\u63a5\u8fd1\u7684\u65f6\u5019\u4e0a\u5f0f\u624d\u51c6\u786e\uff0c\u6240\u4ee5\u52a0\u5165\u60e9\u7f5a\u9879 \\frac{1}{2 \\delta}\\left\\|u-u_{k}\\right\\|_{2}^{2} \\frac{1}{2 \\delta}\\left\\|u-u_{k}\\right\\|_{2}^{2} \uff0c\u6700\u7ec8\u5982\u4e0b u_{k+1}=\\arg \\min _{u} D^{p_k}_J(u,u_k)+\\lambda H(u_k)+\\left\\langle\\lambda \\nabla H\\left(u_{k}\\right), u-u_k\\right\\rangle+\\frac{1}{2 \\delta}\\left\\|u-u_{k}\\right\\|_{2}^{2} u_{k+1}=\\arg \\min _{u} D^{p_k}_J(u,u_k)+\\lambda H(u_k)+\\left\\langle\\lambda \\nabla H\\left(u_{k}\\right), u-u_k\\right\\rangle+\\frac{1}{2 \\delta}\\left\\|u-u_{k}\\right\\|_{2}^{2} \u5316\u7b80\u5f97 $$ u_{k+1}=\\arg \\min {u} J(u)+\\left\\langle\\lambda \\nabla H\\left(u {k}\\right)-p_{k}, u\\right\\rangle+\\frac{1}{2 \\delta}\\left|u-u_{k}\\right|_{2}^{2} $$ Split Bregman \u00b6 \u5047\u8bbe \\Phi \u548c E(u) \\Phi \u548c E(u) \u5747\u4e3a\u51f8\u51fd\u6570 \\min _{u}\\|\\Phi(u)\\|_{1}+E(u) \\min _{u}\\|\\Phi(u)\\|_{1}+E(u) \u901a\u8fc7\u8fd0\u7b97\u7b26\u5206\u88c2 \\min _{u, d}\\|d\\|_{1}+E(u) \\text { subject to } \\Phi(u)=d \\min _{u, d}\\|d\\|_{1}+E(u) \\text { subject to } \\Phi(u)=d \u4ee4 J(u,d)=||d||_1+E(u),H(u,d)=\\frac12||d-\\Phi(u)||^2_2 J(u,d)=||d||_1+E(u),H(u,d)=\\frac12||d-\\Phi(u)||^2_2 \uff0c\u5e26\u5165Bregman\u65b9\u6cd5 \\left\\{\\begin{aligned} \\left(u^{k+1}, d^{k+1}\\right) &=\\min _{u, d} J(u, d)-\\left\\langle p_{u}^{k}, u-u^{k}\\right\\rangle-\\left\\langle p_{d}^{k}, d-d^{k}\\right\\rangle+\\lambda H(u, d) \\\\ p_{u}^{k+1} &=p_{u}^{k}-\\lambda \\nabla_{u} H\\left(u^{k+1}, d^{k+1}\\right) \\\\ p_{d}^{k+1} &=p_{d}^{k}-\\lambda \\nabla_{d} H\\left(u^{k+1}, d^{k+1}\\right) \\end{aligned}\\right. \\left\\{\\begin{aligned} \\left(u^{k+1}, d^{k+1}\\right) &=\\min _{u, d} J(u, d)-\\left\\langle p_{u}^{k}, u-u^{k}\\right\\rangle-\\left\\langle p_{d}^{k}, d-d^{k}\\right\\rangle+\\lambda H(u, d) \\\\ p_{u}^{k+1} &=p_{u}^{k}-\\lambda \\nabla_{u} H\\left(u^{k+1}, d^{k+1}\\right) \\\\ p_{d}^{k+1} &=p_{d}^{k}-\\lambda \\nabla_{d} H\\left(u^{k+1}, d^{k+1}\\right) \\end{aligned}\\right. lsqr\u65b9\u6cd5 \u6700\u5c0f\u4e8c\u4e58\u6cd5\u539f\u7406\u8be6\u89e3 \u6700\u5c0f\u5e73\u65b9QR\u5206\u89e3\u6cd5 \\min\\left\\|\\left[\\begin{array}{c} A \\\\ \\lambda I \\end{array}\\right] x-\\left[\\begin{array}{l} b \\\\ 0 \\end{array}\\right]\\right\\|_2 \\min\\left\\|\\left[\\begin{array}{c} A \\\\ \\lambda I \\end{array}\\right] x-\\left[\\begin{array}{l} b \\\\ 0 \\end{array}\\right]\\right\\|_2 \u57fa\u7840\u65b9\u6cd5\u5373\u4ee3\u7801\u5b9e\u73b0 \u00b6 \u5bf9\u4e8e\u95ee\u9898 \\min\\left\\|\\left[\\begin{array}{c} A \\\\ \\lambda I \\end{array}\\right] x-\\left[\\begin{array}{l} b \\\\ 0 \\end{array}\\right]\\right\\|_2 \\min\\left\\|\\left[\\begin{array}{c} A \\\\ \\lambda I \\end{array}\\right] x-\\left[\\begin{array}{l} b \\\\ 0 \\end{array}\\right]\\right\\|_2 \u5728\u4e4b\u540e\u7684\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u4ee4 G = \\left[\\begin{array}{c}A \\\\ \\lambda I \\end{array}\\right], obs = \\left[\\begin{array}{c} b \\\\ 0 \\end{array}\\right] G = \\left[\\begin{array}{c}A \\\\ \\lambda I \\end{array}\\right], obs = \\left[\\begin{array}{c} b \\\\ 0 \\end{array}\\right] \u5176\u4e2d \\lambda I \\lambda I \u4e3a\u6b63\u5219\u5316\u9879\uff0c\u7528\u4e8e\u4e3a\u53cd\u95ee\u9898\u589e\u52a0\u7ea6\u675f\uff0c\u51cf\u5c0f\u591a\u89e3\u6027 \u68af\u5ea6\u4e0b\u964d \u00b6 \u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u6700\u5c0f\u5316\u76ee\u6807\u6cdb\u51fd f(m) f(m) \u7684\u8fed\u4ee3\u6d41\u7a0b\u4e3a m^{k+1} = m^k - \\alpha_k \\nabla f(m^k) m^{k+1} = m^k - \\alpha_k \\nabla f(m^k) \u5bf9\u4e8e Ax=b Ax=b \u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u6c42\u51fa \\min f(m) = ||Gm-d||^2_2 \\min f(m) = ||Gm-d||^2_2 f(m) = (Gm-d)^T(Gm-d)=m^TG^TGm-2(G^Td)^Tm+d^Td f(m) = (Gm-d)^T(Gm-d)=m^TG^TGm-2(G^Td)^Tm+d^Td \\nabla f(m)=2G^TGm-2G^Td \\nabla f(m)=2G^TGm-2G^Td m^{k+1} = m^k - \\alpha_k (2G^TGm^k-2G^Td) m^{k+1} = m^k - \\alpha_k (2G^TGm^k-2G^Td) \u6b65\u957f\u7684\u9009\u53d6 \\alpha_k \\leq \\frac{2}{\\lambda_{max} (G^TG)} \\alpha_k \\leq \\frac{2}{\\lambda_{max} (G^TG)} \u4ee3\u7801\u5b9e\u73b0 def GD_run ( self , init_guess , G , obs , Iter , show = False ): pre = init_guess loss = [] for k in range ( Iter ): step = 1 grad = G . T @ G @ pre - G . T @ obs residual = self . calculate_residual ( pre , G , obs ) rmse = np . linalg . norm ( residual ) # \u539f\u5b9a\u635f\u5931\u5c0f\u4e8e\u6cbf\u5b66\u4e60\u7387\u8fed\u4ee3\u540e\u7684\u635f\u5931\uff0c\u8bf4\u660e\u6b65\u957f\u8f83\u5927\uff0c\u51cf\u5c0f\u6b65\u957f while rmse < np . linalg . norm ( self . calculate_residual ( pre - step * grad , G , obs )): step = step * 0.5 pre = pre - step * grad loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'GD Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss \u968f\u673a\u68af\u5ea6\u4e0b\u964d \u00b6 \u7c7b\u4f3c\u68af\u5ea6\u4e0b\u964d\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u662f\u6c42\u5168\u90e8\u5217\u7684\u68af\u5ea6\uff0c\u800c\u662f\u6c42\u5176\u968f\u673a\u4e00\u5217\u7684\u68af\u5ea6\u8fdb\u884c\u4e0b\u964d \\min f(m) = ||Gm-d||^2_2 = \\sum^m_{i=1} f_i(m) = \\sum^m_{i=1}(Gm-d)^2_i \\\\ \\nabla f(m)_i = 2G^T_iG_im-2d_iG^T_i \\min f(m) = ||Gm-d||^2_2 = \\sum^m_{i=1} f_i(m) = \\sum^m_{i=1}(Gm-d)^2_i \\\\ \\nabla f(m)_i = 2G^T_iG_im-2d_iG^T_i \u4ee3\u7801\u5b9e\u73b0(\u56fa\u5b9a\u68af\u5ea6) TODO \u53d8\u68af\u5ea6 def SGD_run ( self , init_guess , G , obs , iter , show = False ): self . init_guess = init_guess pre = self . init_guess rmse_prev = np . inf loss = [] for k in range ( iter ): step = 1 # \u6b65\u957f lossres = self . calculate_residual ( pre , self . A , self . b ) # \u635f\u5931\uff0c\u5982\u679c\u672a\u52a0\u6b63\u5219\u5316,self.A,self.b\u5373\u4e3aG,obs index = round ( np . random . random () * ( G . shape [ 0 ] - 1 )) # \u968f\u673a\u53d6\u884c\u53f7 grad = G [ index : index + 1 , :] . T @ G [ index : index + 1 , :] @ pre - obs [ index ] * G [ index , :] . T # \u968f\u673a\u4e00\u884c\u7684\u68af\u5ea6 pre = pre - step * grad # \u68af\u5ea6\u4e0b\u964d rmse = np . linalg . norm ( lossres ) loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'SGD Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss \u9ad8\u65af\u725b\u987f\u6cd5 \u00b6 \u53c2\u8003\u94fe\u63a5: Algorithms from scratch: Gauss-Newton \u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u7684\u56db\u79cd\u89e3\u6cd5\u2014\u2014\u725b\u987f\u6cd5\uff0c\u68af\u5ea6\u4e0b\u964d\u6cd5\uff0c\u9ad8\u65af\u725b\u987f\u6cd5\u548c\u5217\u6587\u4f2f\u683c-\u9a6c\u5938\u7279\u6cd5\u7684\u533a\u522b\u548c\u8054\u7cfb \u5bf9\u4e8e\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898 \\min_x\\frac{1}{2}||f(x)||_2^2 \\min_x\\frac{1}{2}||f(x)||_2^2 \u5bf9 f(x + \\Delta x) f(x + \\Delta x) \u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\u5f97\u5230 f(x+\\Delta x) \\approx f(x) + J(x)^T \\Delta x + o(\\Delta x) f(x+\\Delta x) \\approx f(x) + J(x)^T \\Delta x + o(\\Delta x) \u6240\u4ee5\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u5316\u4e3a \\Delta x^* = \\arg \\min \\frac{1}{2} ||f(x + \\Delta x)||_2^2 \\approx \\arg \\min \\frac{1}{2} ||f(x) + J(x)^T \\Delta x||_2^2 \\Delta x^* = \\arg \\min \\frac{1}{2} ||f(x + \\Delta x)||_2^2 \\approx \\arg \\min \\frac{1}{2} ||f(x) + J(x)^T \\Delta x||_2^2 \u5316\u7b80 m(x) = \\frac{1}{2} ||f(x) + J(x)^T \\Delta x||^2 = \\frac{1}{2}(f(x) + J(x)^T \\Delta x)^T(f(x) + J(x)^T \\Delta x) m(x) = \\frac{1}{2} ||f(x) + J(x)^T \\Delta x||^2 = \\frac{1}{2}(f(x) + J(x)^T \\Delta x)^T(f(x) + J(x)^T \\Delta x) \u6c42\u5bfc\u4ee4\u5bfc\u6570\u7b49\u4e8e\u96f6\u53ef\u5f97 m^`(x) = 0 \\quad \\rightarrow \\quad J(x)J(x)^T\\Delta x = - J(x)f(x) \\rightarrow \\Delta x = \\frac{- J(x)f(x)}{J(x)J(x)^T} m^`(x) = 0 \\quad \\rightarrow \\quad J(x)J(x)^T\\Delta x = - J(x)f(x) \\rightarrow \\Delta x = \\frac{- J(x)f(x)}{J(x)J(x)^T} \u4ee3\u7801\u5b9e\u73b0 def GN_run ( self , init_guess , G , obs , iter , show = False ): pre = init_guess loss = [] for k in range ( iter ): residual = self . calculate_residual ( pre , G , obs ) lossres = self . calculate_residual ( pre , self . A , self . b ) jacobian = self . calculate_jacobian ( pre , G , obs , step = 10 ** ( - 6 )) pre = pre - np . linalg . pinv ( jacobian . T @ jacobian ) @ ( jacobian . T @ residual ) rmse = np . linalg . norm ( lossres ) loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'Gauss-Newton Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss \u5217\u6587\u4f2f\u683c-\u9a6c\u5938\u7279\u65b9\u6cd5(Levenberg\u2013Marquardt) \u00b6 \u57fa\u672c\u539f\u7406\u4e0e\u9ad8\u65af\u725b\u987f\u6cd5\u7c7b\u4f3c\uff0c\u5728\u9ad8\u65af\u725b\u987f\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u635f\u5931\u66f2\u7ebf\u5728\u540e\u671f\u4f1a\u8fdb\u5165\u952f\u9f7f\u72b6\uff0c\u8fed\u4ee3\u7684\u6b21\u6570\u8f83\u957f\u3002\u6240\u4ee5\uff0c\u4e3a\u4e86\u907f\u514d\u5176\u6b65\u957f\u8fc7\u5927\u5bfc\u81f4\u7684\u95ee\u9898\uff0c\u8be5\u65b9\u6cd5\u63d0\u51fa\u4e86\u4fe1\u8d56\u533a\u57df\uff0c\u52a8\u6001\u8c03\u6574\u6b65\u957f\u51cf\u5c0f\u8fed\u4ee3\u6b21\u6570 \u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u8bbe\u5b9a\u4e00\u4e2a\u8bc4\u5224\u6807\u51c6\u7528\u4e8e\u8bc4\u5224\u4f30\u8ba1\u7684\u597d\u574f\uff0c\u4ece\u800c\u52a8\u6001\u8c03\u6574\u6b65\u957f \\rho = \\frac{f(x+\\Delta x) - f(x)}{J(x)^T\\Delta x} \\rho = \\frac{f(x+\\Delta x) - f(x)}{J(x)^T\\Delta x} \u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5 \\rho \\rho \u63a5\u8fd11\uff0c\u8fd1\u4f3c\u662f\u597d\u7684\uff0c\u4e0d\u9700\u8981\u66f4\u6539 \\rho \\rho \u592a\u5c0f\uff0c\u5219\u5b9e\u9645\u51cf\u5c11\u7684\u503c\u5c0f\u4e8e\u8fd1\u4f3c\u51cf\u5c11\u7684\u503c\uff0c\u8fd1\u4f3c\u8f83\u5927\uff0c\u9700\u8981\u7f29\u5c0f\u8fd1\u4f3c\u7684\u8303\u56f4 \\rho \\rho \u592a\u5927\uff0c\u5219\u5b9e\u9645\u51cf\u5c11\u7684\u503c\u5927\u4e8e\u8fd1\u4f3c\u51cf\u5c11\u7684\u503c\uff0c\u8fd1\u4f3c\u8f83\u5c0f\uff0c\u9700\u8981\u6269\u5927\u8fd1\u4f3c\u7684\u8303\u56f4\u3002 \u53cd\u95ee\u9898\u4e3a \\min \\frac {1}{2}||f(x) + J(x)^T \\Delta x|| \\quad s.t \\quad ||D \\Delta x < \\mu||_2 \\min \\frac {1}{2}||f(x) + J(x)^T \\Delta x|| \\quad s.t \\quad ||D \\Delta x < \\mu||_2 \u5176\u4e2d D D \u4e3a\u7cfb\u6570\u77e9\u9635\uff0c \\mu \\mu \u4e3a\u4fe1\u8d56\u534a\u5f84 \u53ef\u4ee5\u6784\u5efa\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff0c \\lambda \\lambda \u4e3a\u7cfb\u6570\u56e0\u5b50 L(\\Delta x,\\lambda) = \\frac {1}{2}||f(x) + J(x)^T\\Delta x||^2 + \\frac {\\lambda}{2}(||D \\Delta x||^2 - \\mu) L(\\Delta x,\\lambda) = \\frac {1}{2}||f(x) + J(x)^T\\Delta x||^2 + \\frac {\\lambda}{2}(||D \\Delta x||^2 - \\mu) \u6c42\u5bfc\u5e76\u5316\u7b80\u5f97 J(x)f(x) + J(x)J^T(x)\\Delta x + \\lambda D^TD \\Delta x = 0 \\rightarrow (JJ^T + \\lambda D^TD) \\Delta x = -Jf J(x)f(x) + J(x)J^T(x)\\Delta x + \\lambda D^TD \\Delta x = 0 \\rightarrow (JJ^T + \\lambda D^TD) \\Delta x = -Jf \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u901a\u5e38\u5c06 I I \u4ee3\u66ff D^TD D^TD \u4ee3\u7801\u5b9e\u73b0 def LM_run ( self , init_guess , G , obs , iter , show = False ): pre = init_guess lam = 0.01 # todo \u5982\u4f55\u8bbe\u5b9alambda loss = [] for k in range ( iter ): residual = self . calculate_residual ( pre , G , obs ) lossres = self . calculate_residual ( pre , self . A , self . b ) jacobian = self . calculate_jacobian ( pre , G , obs , step = 10 ** ( - 6 )) pre = pre - np . linalg . pinv ( jacobian . T @ jacobian + lam * np . identity ( jacobian . shape [ 1 ])) @ ( jacobian . T @ residual ) rmse = np . linalg . norm ( lossres ) loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'Levenberg-Marquardt Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss LM\u65b9\u6cd5\u662f\u7531\u725b\u987f\u6cd5\u7684\u57fa\u7840\u4e0a\u5f97\u5230\u7684\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u8054\u7cfb\u4e3b\u8981\u53d6\u51b3\u4e8e \\lambda \\lambda \u7684\u53d6\u503c \u5bf9\u4e8e\u8fed\u4ee3\u8fc7\u7a0b (JJ^T + \\lambda I) \\Delta x_k = -Jf (JJ^T + \\lambda I) \\Delta x_k = -Jf \u5f53 \\lambda \\lambda \u8f83\u5927\u65f6\uff0c\u66f4\u65b0\u65b9\u7a0b\u4e2d \\lambda I \\lambda I \u5360\u4e3b\u8981\uff0c\u8fed\u4ee3\u8fd1\u4f3c\u4e3a \\lambda I \\Delta x_k = -Jf \\lambda I \\Delta x_k = -Jf \uff0c\u6b64\u65f6\u4e3a\u68af\u5ea6\u4e0b\u964d\u6cd5 \u5f53 \\lambda \\lambda \u8f83\u5927\u65f6\uff0c\u66f4\u65b0\u65b9\u7a0b\u4e2d JJ^T JJ^T \u5360\u4e3b\u8981\uff0c\u8fed\u4ee3\u8fd1\u4f3c\u4e3a JJ^T \\Delta x_k = -Jf JJ^T \\Delta x_k = -Jf \uff0c\u6b64\u65f6\u4e3a\u9ad8\u65af\u725b\u987f\u6cd5 IRLS \u00b6 \u6b63\u5219\u5316\u53cd\u6f14 \u00b6 \u53c2\u8003\u94fe\u63a5 \u53d8\u91cf\u9009\u62e9\u4e4bLASSO\u2014\uff08\u4e00\uff09\u51f8\u6b63\u5219\u5316\u65b9\u6cd51 \u5bf9\u4e8e\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898 \\min ||Ax-b||_2 \\min ||Ax-b||_2 \u8fdb\u884c\u53cd\u6f14\u65f6\uff0c\u56e0\u4e3a\u7ea6\u675f\u6761\u4ef6\u4e0d\u591f\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a\u4e0d\u540c\u7684 x x \u6ee1\u8db3 \\min ||Ax-b||_2 \\min ||Ax-b||_2 \uff0c\u5f53\u5e76\u4e0d\u662f\u6211\u4eec\u9884\u671f\u7684 x x ,\u4e5f\u5c31\u662f\u95ee\u9898\u7684\u591a\u89e3\u6027\uff0c\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u5728\u6c42\u89e3\u53cd\u95ee\u9898\u7684\u65b9\u7a0b\u4e2d\u6dfb\u52a0\u5176\u4ed6\u7ea6\u675f\u9879\uff0c\u4ece\u6570\u5b66\u4e0a\u6765\u8bb2\uff0c\u5c31\u662f\u5728\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u4e2a\u6b63\u5219\u9879\uff0c\u6765\u9632\u6b62\u8fc7\u62df\u5408\u3002\u76ee\u524d\u4e3b\u8981\u6709L1\u6b63\u5219\u5316\u548cL2\u6b63\u5219\u5316\uff0c\u5373LASSO\u56de\u5f52\u548c\u5cad\u56de\u5f52 \u53c2\u8003\u94fe\u63a5\uff1a l1\u6b63\u5219\u4e0el2\u6b63\u5219\u7684\u7279\u70b9\u662f\u4ec0\u4e48\uff0c\u5404\u6709\u4ec0\u4e48\u4f18\u52bf\uff1f L1-Regularization(\u4e00\u8303\u6570) $$\\lambda \\sum_{i=0}^k|w_i| $$ L2-Regularization(\u4e8c\u8303\u6570) \\lambda \\sum_{i=0}^k w_i^2 \\lambda \\sum_{i=0}^k w_i^2 <span class=\"arithmatex\"><span class=\"MathJax_Preview\">\\lambda \\sum_{i=0}^k w_i^2</span><script type=\"math/tex\">\\lambda \\sum_{i=0}^k w_i^2 \u5bf9\u4e8e\u5730\u9707\u53cd\u6f14\uff0c\u5e38\u7528\u7684\u5c31\u662fTV\u6b63\u5219\u5316\uff0c\u5373\u5bf9\u6a21\u578b\u7684\u5dee\u5206\u7684\u4e00\u8303\u6570\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u4e0d\u8fde\u7eed\u6027\uff0c\u53ef\u4ee5\u5f62\u6210\u7a00\u758f\u89e3 \\min ||Gm-d||_2^2+\\alpha||Lm||_1 \\min ||Gm-d||_2^2+\\alpha||Lm||_1 \u5176\u4e2d L L \u4e3a\u5dee\u5206\u77e9\u9635 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u6c42\u89e3\u4e00\u9636TV\u6b63\u5219\u5316\u53cd\u95ee\u9898\u7684\u6c42\u89e3\u65b9\u6cd5 IRLS \u5bf9\u4e8e\u4e0a\u5f0f\u6c42\u68af\u5ea6\u5f97\u5230 \\nabla f(m) = 2G^TGm-2G^Td+\\alpha \\sum_{i=0}^m\\nabla|y_i| \\nabla f(m) = 2G^TGm-2G^Td+\\alpha \\sum_{i=0}^m\\nabla|y_i| \u4ee4 $$ W_{i, i}= \\begin{cases}1 /\\left|y_i^{(k)}\\right| & \\left|y_i^{(k)}\\right| \\geq \\epsilon \\ 1 / \\epsilon & \\left|y_i^{(k)}\\right|<\\epsilon .\\end{cases} $$ \u8fed\u4ee3\u8fc7\u7a0b\u4e3a \\mathbf{m}^{(k+1)}=\\arg \\min \\left\\|\\left[\\begin{array}{c} \\mathbf{G} \\\\ \\sqrt{\\frac{\\alpha}{2}} \\sqrt{\\mathbf{W}} \\mathbf{L} \\end{array}\\right] \\mathbf{m}-\\left[\\begin{array}{l} \\mathbf{d} \\\\ \\mathbf{0} \\end{array}\\right]\\right\\|_2 \\mathbf{m}^{(k+1)}=\\arg \\min \\left\\|\\left[\\begin{array}{c} \\mathbf{G} \\\\ \\sqrt{\\frac{\\alpha}{2}} \\sqrt{\\mathbf{W}} \\mathbf{L} \\end{array}\\right] \\mathbf{m}-\\left[\\begin{array}{l} \\mathbf{d} \\\\ \\mathbf{0} \\end{array}\\right]\\right\\|_2 \u4ee3\u7801\u5b9e\u73b0\uff0c\u793a\u4f8b\u4e3a\u9ad8\u65af\u725b\u987f\u6cd5\u4f18\u5316\u7b56\u7565 def GN_run ( self , init_guess , G , obs , iter , show = False , IRLS = None ): # IRLS\u4e3a\u4e00\u8303\u6570\u53c2\u6570[alpha, eps, L] pre = init_guess loss = [] with tqdm ( total = iter ) as t : for i in range ( iter ): t . set_description ( 'solver GN' ) if IRLS is not None : L = IRLS [ - 1 ] alpha = IRLS [ 0 ] eps = IRLS [ 1 ] Reg = self . _IRLSupdate ( L , pre , alpha , eps ) G = np . vstack (( self . A , Reg )) obs = np . hstack (( self . b , np . zeros (( Reg . shape [ 0 ])))) # TODO \u4e00\u7ef4\u6570\u636e\u9002\u7528\uff0c\u4e8c\u7ef4\u6570\u636e\u8981\u6539\uff01\uff01\uff01 residual = self . calculate_residual ( pre , G , obs ) lossres = self . calculate_residual ( pre , self . A , self . b ) jacobian = self . calculate_jacobian ( pre , G , obs , step = 10 ** ( - 6 )) pre = pre - np . linalg . pinv ( jacobian . T @ jacobian ) @ ( jacobian . T @ residual ) rmse = np . linalg . norm ( lossres ) loss . append ( rmse ) t . set_postfix ( loss = rmse ) t . update ( 1 ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'Gauss-Newton Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss ISTA\u65b9\u6cd5 \u00b6 \u53c2\u8003\u94fe\u63a5 \u8f6f\u9608\u503c\u8fed\u4ee3\u7b97\u6cd5\uff08ISTA\u7b97\u6cd5\uff09 \u5bf9\u4e8e\u53cd\u95ee\u9898 \\min ||Ax-b||_2^2+\\lambda||x||_1 \\min ||Ax-b||_2^2+\\lambda||x||_1 \u901a\u8fc7\u63a8\u5bfc\u5f97\u5230\uff08\u5177\u4f53\u53c2\u7167\u4e0a\u9762\u7684\u53c2\u8003\u94fe\u63a5\uff09 \\mathbf{x}_{k+1}=\\mathcal{T}_{\\lambda t}\\left(\\mathbf{x}_k-2 t \\mathbf{A}^T\\left(\\mathbf{A} \\mathbf{x}_k-\\mathbf{b}\\right)\\right) \\mathbf{x}_{k+1}=\\mathcal{T}_{\\lambda t}\\left(\\mathbf{x}_k-2 t \\mathbf{A}^T\\left(\\mathbf{A} \\mathbf{x}_k-\\mathbf{b}\\right)\\right) \u5176\u4e2d\uff0c\u8f6f\u9608\u503c\u51fd\u6570\u4e3a: \u53c2\u8003\u94fe\u63a5\uff1a \u786c\u9608\u503c & \u8f6f\u9608\u503c \\mathcal{T}_\\omega(\\mathbf{x})_i=\\left(\\left|x_i\\right|-\\omega\\right)_{+} \\operatorname{sgn}\\left(x_i\\right) \\mathcal{T}_\\omega(\\mathbf{x})_i=\\left(\\left|x_i\\right|-\\omega\\right)_{+} \\operatorname{sgn}\\left(x_i\\right) \u5373 [\\mathcal{T}_{\\omega}(x)]_i=\\begin{cases} \\begin{array}{c} x_i-\\omega ,\\quad x_i>\\omega\\\\\\end{array}\\\\ \\begin{array}{c} 0,\\qquad \\quad |x_i|\\le \\omega\\\\\\end{array}\\\\ \\begin{array}{c} x_i+\\omega ,\\quad x_i<-\\omega\\\\\\end{array}\\\\\\end{cases} \\\\ [\\mathcal{T}_{\\omega}(x)]_i=\\begin{cases} \\begin{array}{c} x_i-\\omega ,\\quad x_i>\\omega\\\\\\end{array}\\\\ \\begin{array}{c} 0,\\qquad \\quad |x_i|\\le \\omega\\\\\\end{array}\\\\ \\begin{array}{c} x_i+\\omega ,\\quad x_i<-\\omega\\\\\\end{array}\\\\\\end{cases} \\\\ \u5f53A\u4e3a\u5355\u4f4d\u77e9\u9635\u65f6\uff0c\u5373 \\min ||x-b||_2^2+\\lambda||x||_1 \\min ||x-b||_2^2+\\lambda||x||_1 \u89e3\u4e3a x^*=\\mathcal{T}_{\\frac{\\lambda}{2}}(b) x^*=\\mathcal{T}_{\\frac{\\lambda}{2}}(b) \u4ee3\u7801\u5b9e\u73b0 def Ista_run ( self , init_guess , G , obs , iter , show = False ): pre = init_guess lamb = 0.01 tk = 1 / np . linalg . norm ( G . T @ G ) # tk\u6700\u5927\u503c loss = [] for k in range ( iter ): residual = self . calculate_residual ( pre , G , obs ) rmse = np . linalg . norm ( residual ) loss . append ( rmse ) grad = G . T @ G @ pre - G . T @ obs grad = np . squeeze ( grad ) zk = pre - tk * grad pre = self . _softThresh ( lamb * tk , zk ) tk = tk / 1.1 if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'ISTA Loss curve' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss FISATA\u65b9\u6cd5 \u00b6 Amir Beck\u7b49\u4eba\u5c06Nesterov\u52a0\u901f\u7b97\u6cd5\u5f15\u5165ISTA\u7b97\u6cd5\u4e2d\uff0c\u5e76\u79f0\u4e4b\u4e3aFISTA\u7b97\u6cd5\uff0c\u5176\u5c06\u590d\u6742\u5ea6\u4ece O(1/k) O(1/k) \u964d\u4f4e\u5230\u4e86 O(1/k^2) O(1/k^2) \uff0c\u51cf\u5c0f\u4e86ISTA\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u63d0\u9ad8\u4e86\u8ba1\u7b97\u901f\u5ea6\uff0c\u4f7f\u635f\u5931\u53ef\u4ee5\u5f97\u5230\u66f4\u5feb\u6536\u655b ISTA\u65b9\u6cd5\u662f\u76f4\u63a5\u8fed\u4ee3 x_k x_k \uff0cFISTA\u662f\u8fed\u4ee3 y_k y_k \uff0c y_k y_k \u7531 x_k x_k \u8ba1\u7b97\u5f97\u5230 \\mathbf y_{k+1}=\\mathbf x_k+(\\frac{t_k-1}{t_{k+1}})(\\mathbf x_k-\\mathbf x_{k-1}) \\mathbf y_{k+1}=\\mathbf x_k+(\\frac{t_k-1}{t_{k+1}})(\\mathbf x_k-\\mathbf x_{k-1}) \u5176\u4e2d t_{k+1}=\\frac{1+\\sqrt{1+4t^2_k}}{2} t_{k+1}=\\frac{1+\\sqrt{1+4t^2_k}}{2} def Fista_run ( self , init_guess , G , obs , iter , show = False ): pre = init_guess tk = 1 t = 1 / np . linalg . norm ( G . T @ G ) lamb = 0.01 loss = [] xk = init_guess xk_1 = xk for k in range ( iter ): tk1 = 0.5 * ( 1 + np . sqrt ( 1 + 4 * tk ** 2 )) yk1 = xk + ( tk - 1 ) / tk1 * ( xk - xk_1 ) grad = G . T @ G @ yk1 - G . T @ obs grad = np . squeeze ( grad ) zk = yk1 - t * grad # update iterative xk_1 = xk xk = self . _softThresh ( lamb * t , zk ) tk = tk1 # err = np.linalg.norm(self.pre - yk1) # if k!=0 and err<0.0001: # print('\u7b2c%d\u8f6e\u5df2\u7ecf\u6536\u655b\uff0c\u589e\u91cf\u4e3a%f' %(k,err)) # break pre = yk1 t = t / 1.1 # loss residual = self . calculate_residual ( pre , G , obs ) rmse = np . linalg . norm ( residual ) loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'FISTA Loss curve' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss Split-Bregman\u65b9\u6cd5 \u00b6 \u53c2\u8003\u89c1\u300a\u53cd\u95ee\u9898\u7684\u8fed\u4ee3\u6c42\u89e3\u7b97\u6cd5\u300b\u8bfe\u4ef6 \u5bf9\u4e8e\u4e00\u9636TV\u53cd\u95ee\u9898 \\min _{m}||data-Gm||_2^2+\\alpha||L m ||_1 \\min _{m}||data-Gm||_2^2+\\alpha||L m ||_1 \u4ee4 d^k=Lm d^k=Lm \uff0c\u589e\u52a0\u7ea6\u675f\u9879\uff0c\u5f97\u5230 \\left(m^{k+1}, d^{k+1}\\right)=\\min _{m, d}||data-Gm||_2^2+\\alpha||d^k||_1+\\frac{\\lambda}{2}\\left\\|d^k-Lm-b^{k}\\right\\|_{2}^{2} \\\\ b^{k+1} = b^k + (data-Gm-d^{k+1}) \\left(m^{k+1}, d^{k+1}\\right)=\\min _{m, d}||data-Gm||_2^2+\\alpha||d^k||_1+\\frac{\\lambda}{2}\\left\\|d^k-Lm-b^{k}\\right\\|_{2}^{2} \\\\ b^{k+1} = b^k + (data-Gm-d^{k+1}) \u6545\uff0c\u4e0a\u5f0f\u53ef\u62c6\u89e3\u6210\u4e24\u4e2a\u5b50\u95ee\u9898\uff0c\u5cad\u56de\u5f52\u95ee\u9898\u4e0eLASSO\u56de\u5f52\u95ee\u9898 \u5b50\u95ee\u9898\u4e00(\u5cad\u56de\u5f52) m^{k+1} = \\min_m||data-Gm||_2^2+\\frac{\\lambda }{2} ||d^k-b^k-Lm||_2^2 m^{k+1} = \\min_m||data-Gm||_2^2+\\frac{\\lambda }{2} ||d^k-b^k-Lm||_2^2 \u53ef\u770b\u4f5c \\min\\left|\\left|\\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} L \\end{bmatrix}m - \\begin{bmatrix}data \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d-b) \\end{bmatrix}\\right|\\right|_2 \\min\\left|\\left|\\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} L \\end{bmatrix}m - \\begin{bmatrix}data \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d-b) \\end{bmatrix}\\right|\\right|_2 \u5b50\u95ee\u9898\u4e8c(LASSO\u56de\u5f52) d^{k+1}=\\min_d\\frac{\\lambda}{2}||d^k-b^k-Lm||_2^2+\\alpha||d^k||_1 d^{k+1}=\\min_d\\frac{\\lambda}{2}||d^k-b^k-Lm||_2^2+\\alpha||d^k||_1 \u7528\u8f6f\u9608\u503c\u51fd\u6570\u53ef\u6c42\u89e3 \u4ee3\u7801\u5b9e\u73b0 def run ( self , show = True ): iiter = 0 flag = 1 loss = [] lamb = 0.01 x = self . x0 for _ in tqdm ( range ( self . Iter )): # regularized problem dataregs = self . d - self . b_ # subquestion1 Sub1 = RegularizedInv ( self . Op , self . obs , self . x0 , lamb , self . Reg , dataregs ) # \u521d\u59cb\u5316\u5cad\u56de\u5f52\u53cd\u6f14 x , sub1loss = Sub1 . run ( self . x0 if flag else x , 10 , 'GN' , True ) # \u9009\u62e9\u4f18\u5316\u65b9\u6cd5\u8fed\u4ee3\u6c42\u89e3 flag = 0 # subquestion2 dataregs2 = self . Reg @ x + self . b_ # self.d, sub2loss = self.Ista_run(self.d,np.eye(self.Reg.shape[0]),dataregs2,50,None) # ISTA\u65b9\u6cd5 self . d = self . _softThresh ( lamb / 4 , dataregs2 ) # TODO lambda \u5e94\u8be5\u600e\u4e48\u786e\u5b9a residual = np . linalg . norm ( self . calculate_residual ( x , self . A , self . b )) loss . append ( residual ) self . b_ = self . b_ + self . tau * ( self . Reg @ x - self . d ) iiter = iiter + 1 if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'Split Bregman Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return x , loss \u5bf9\u4e8e\u4e8c\u9636TV\u53cd\u95ee\u9898 \\min_m\\sum_i\\sqrt{(\\nabla_x m)^2_i+(\\nabla_y m)^2_i}+\\frac{\\mu}{2}||Gm-d||^2_2 \\min_m\\sum_i\\sqrt{(\\nabla_x m)^2_i+(\\nabla_y m)^2_i}+\\frac{\\mu}{2}||Gm-d||^2_2 \u4ee4 d_x=\\nabla_x m, d_y=\\nabla_y m d_x=\\nabla_x m, d_y=\\nabla_y m \u8fdb\u884c\u5206\u88c2L1,L2\u9879\u540e\uff0c\u53cd\u95ee\u9898\u5316\u4e3a \\min_{u,d_k,d_y}\\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2+\\frac{\\mu}{2}||Gm-d||^2_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 \\min_{u,d_k,d_y}\\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2+\\frac{\\mu}{2}||Gm-d||^2_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 \u5176\u4e2d \\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2=\\sum_{i,j}\\sqrt{|d_{x,i,j}|^2+|d_{y,i,j}|^2} \\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2=\\sum_{i,j}\\sqrt{|d_{x,i,j}|^2+|d_{y,i,j}|^2} \u4e24\u4e2a\u5b50\u95ee\u9898\u5206\u522b\u4e3a \u5b50\u95ee\u9898\u4e00 m^{k+1}=\\min_m\\frac{\\mu}{2}||Gm-d||^2_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 m^{k+1}=\\min_m\\frac{\\mu}{2}||Gm-d||^2_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 \u5316\u4e3a\u5cad\u56de\u5f52\u95ee\u9898 \\min\\left|\\left|\\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}m - \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix}\\right|\\right|_2 \\min\\left|\\left|\\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}m - \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix}\\right|\\right|_2 \u6216 \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}= \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}= \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \u5316\u4e3a \\min\\left|\\left| \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m- \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}^{-1} \\right|\\right|_2 \\min\\left|\\left| \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m- \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}^{-1} \\right|\\right|_2 \u5316\u7b80\u4e3a \\min\\left|\\left| \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m- \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}^{-1} \\right|\\right|_2 \\min\\left|\\left| \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m- \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}^{-1} \\right|\\right|_2 \u5b50\u95ee\u9898\u4e8c (d_x^{k+1},d_y^{k+1})=\\min_{d_x,d_y}\\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 (d_x^{k+1},d_y^{k+1})=\\min_{d_x,d_y}\\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 \u53ef\u4ee5\u901a\u8fc7 \u5e7f\u4e49\u9608\u503c\u51fd\u6570 \u6c42\u89e3\uff0c\u53c2\u8003\u8bba\u6587 A Fast Algorithm for Image Deblurring with Total Variation Regularization \u8fed\u4ee3\u8fc7\u7a0b\u4e3a d^{k+1}_x=\\max\\left(s^k-\\frac{1}{\\lambda},0\\right)\\frac{\\nabla_xm^k+b^k_x}{s^k} \\\\ d^{k+1}_y=\\max\\left(s^k-\\frac{1}{\\lambda},0\\right)\\frac{\\nabla_ym^k+b^k_y}{s^k} \\\\ s^k=\\sqrt{|\\nabla_xm^k+b^k_x|^2+|\\nabla_ym^k+b^k_y|^2} d^{k+1}_x=\\max\\left(s^k-\\frac{1}{\\lambda},0\\right)\\frac{\\nabla_xm^k+b^k_x}{s^k} \\\\ d^{k+1}_y=\\max\\left(s^k-\\frac{1}{\\lambda},0\\right)\\frac{\\nabla_ym^k+b^k_y}{s^k} \\\\ s^k=\\sqrt{|\\nabla_xm^k+b^k_x|^2+|\\nabla_ym^k+b^k_y|^2} \u591a\u9053\u53cd\u6f14 \u00b6 \u4ee5\u4e0a\u7684\u4f18\u5316\u65b9\u6cd5\u90fd\u53ea\u9488\u5bf9\u4e8e\u5355\u9053\uff0c\u4f46\u5730\u9707\u6570\u636e\u5f80\u5f80\u9700\u8981\u591a\u9053\u8fdb\u884c\u5904\u7406 \u76ee\u524d\u672c\u4eba\u5b9e\u73b0\u7684\u65b9\u6cd5\u53ea\u662f\u5faa\u73af\u8fdb\u884c\u4e0d\u540c\u9053\u7684\u5355\u9053\u53cd\u6f14\uff0c\u672a\u5b8c\u5f85\u7eed\u3002\u3002\u3002","title":"\u4f18\u5316\u65b9\u6cd5\u7b14\u8bb0"},{"location":"SeismicInversion/Optimization/#_1","text":"\u53d8\u91cf\u9009\u62e9\u4e4bLASSO\u2014\uff08\u4e00\uff09\u51f8\u6b63\u5219\u5316\u65b9\u6cd51","title":"\u51f8\u4f18\u5316\u6982\u62ec"},{"location":"SeismicInversion/Optimization/#least-square","text":"\u53c2\u8003: https://textbooks.math.gatech.edu/ila/least-squares.html https://zhuanlan.zhihu.com/p/31341436 https://en.wikipedia.org/wiki/Ordinary_least_squares \u5bf9\u4e8e\u65b9\u7a0b Ax=b Ax=b \u6700\u5c0f\u4e8c\u4e58\u6cd5\u7684\u89e3\u4e3a \\hat x=(A^TA)^{-1}A^Tb \\hat x=(A^TA)^{-1}A^Tb \u4e0d\u9002\u7528\u4e8e\u4e0d\u6ee1\u79e9\u7684\u60c5\u51b5\u3002","title":"least-square"},{"location":"SeismicInversion/Optimization/#tikhonov-regularizationridge-regressionrr","text":"\u53c2\u8003\uff1a https://en.wikipedia.org/wiki/Ridge_regression \u4e5f\u79f0 \u5cad\u56de\u5f52 \uff0c\u5cad\u56de\u5f52\u662f\u5728\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e2d\u5b58\u5728\u591a\u5171\u7ebf\u6027(\u9ad8\u5ea6\u76f8\u5173)\u81ea\u53d8\u91cf\u65f6\uff0c\u4f5c\u4e3a\u89e3\u51b3\u6700\u5c0f\u4e8c\u4e58\u4f30\u8ba1\u91cf\u4e0d\u7cbe\u786e\u95ee\u9898\u7684\u4e00\u79cd\u53ef\u80fd\u65b9\u6cd5. \u901a\u8fc7\u5728\u5bf9\u89d2\u7ebf\u4e0a\u6dfb\u52a0\u6b63\u5143\u7d20\u6765\u7f13\u89e3\uff0c\u4ece\u800c\u51cf\u5c11\u5176\u6761\u4ef6\u6570\u3002\u7c7b\u4f3c\u4e8e\u666e\u901a\u7684\u6700\u5c0f\u4e8c\u4e58\u4f30\u8ba1\u5668\uff0c \\lambda \\lambda \u4e3a\u6b63\u5219\u5316\u963b\u5c3cRegularization dampings {\\displaystyle {\\hat {\\beta }}_{R}=(\\mathbf {X} ^{\\mathsf {T}}\\mathbf {X} +\\lambda \\mathbf {I} )^{-1}\\mathbf {X} ^{\\mathsf {T}}\\mathbf {y} } {\\displaystyle {\\hat {\\beta }}_{R}=(\\mathbf {X} ^{\\mathsf {T}}\\mathbf {X} +\\lambda \\mathbf {I} )^{-1}\\mathbf {X} ^{\\mathsf {T}}\\mathbf {y} } \u5728\u6700\u5c0f\u4e8c\u4e58\u6700\u5c0f\u5316\u8fc7\u7a0b\u4e2d\u52a0\u5165\u6b63\u5219\u5316\u9879\uff0c\u9632\u6b62\u8fc7\u62df\u5408\uff0c\u83b7\u5f97\u66f4\u52a0\u7406\u60f3\u7684\u89e3\uff0c\u7c7b\u4f3c\u4e8eL2\u6b63\u5219\u5316\u3002 {\\displaystyle \\|A\\mathbf {x} -\\mathbf {b} \\|_{2}^{2}+\\|\\Gamma \\mathbf {x} \\|_{2}^{2}} {\\displaystyle \\|A\\mathbf {x} -\\mathbf {b} \\|_{2}^{2}+\\|\\Gamma \\mathbf {x} \\|_{2}^{2}} \u89e3\u4e3a {\\displaystyle {\\hat {x}}=(A^{\\top }A+\\Gamma ^{\\top }\\Gamma )^{-1}A^{\\top }\\mathbf {b} .} {\\displaystyle {\\hat {x}}=(A^{\\top }A+\\Gamma ^{\\top }\\Gamma )^{-1}A^{\\top }\\mathbf {b} .} Tikhonov matrix \\Gamma = \\alpha I \\Gamma = \\alpha I","title":"Tikhonov regularization/Ridge Regression(RR)"},{"location":"SeismicInversion/Optimization/#generalized-tikhonov-regularization","text":"{\\displaystyle x^{*}=(A^{\\top }PA+Q)^{-1}(A^{\\top }Pb+Qx_{0})} {\\displaystyle x^{*}=(A^{\\top }PA+Q)^{-1}(A^{\\top }Pb+Qx_{0})} \u5176\u4e2dP\u4e3ab\u7684\u534f\u65b9\u5dee\u77e9\u9635\uff0c x_0 x_0 \u4e3a x x \u7684\u671f\u671b\u503c","title":"Generalized Tikhonov regularization"},{"location":"SeismicInversion/Optimization/#lavrentyev-regularization","text":"\u5982\u679cA\u662f\u5bf9\u79f0\u6b63\u5b9a\u7684\uff0c\u5373\u6709 A=A^{\\top }>0 A=A^{\\top }>0 \uff0c \u6240\u4ee5 {\\displaystyle \\|x\\|_{P}^{2}=x^{\\top }A^{-1}x} {\\displaystyle \\|x\\|_{P}^{2}=x^{\\top }A^{-1}x} ???? \u6545\u6700\u4f18\u89e3\u4e3a {\\displaystyle x^{*}=(A+Q)^{-1}(b+Qx_{0})} {\\displaystyle x^{*}=(A+Q)^{-1}(b+Qx_{0})} \u53ef\u4ee5\u770b\u4f5cTikhonov regularization\u4e2d {\\displaystyle A=A^{\\top }=P^{-1}} {\\displaystyle A=A^{\\top }=P^{-1}} \u7684\u60c5\u51b5","title":"Lavrentyev regularization"},{"location":"SeismicInversion/Optimization/#bregman-method","text":"\u53c2\u8003\uff1a \u5982\u4f55\u7406\u89e3Bregman divergence? Bregman \u6563\u5ea6\uff08Bregman divergence\uff09\u548cBregman\u4fe1\u606f\uff08Bregman information\uff09 \u673a\u5668\u5b66\u4e60\u4e2d\u7684\u6570\u5b66\u2014\u2014\u8ddd\u79bb\u5b9a\u4e49\uff08\u4e8c\u5341\u4e94\uff09\uff1a\u5e03\u96f7\u683c\u66fc\u6563\u5ea6\uff08Bregman Divergence\uff09 Split-Bregman\u8fed\u4ee3\u65b9\u5f0f \u5b9a\u4e49Bregman\u6563\u5ea6\u4e3a D_{F}(p,q)=F(p)-F(q)-\\langle \\nabla F(q),p-q\\rangle D_{F}(p,q)=F(p)-F(q)-\\langle \\nabla F(q),p-q\\rangle \u51e0\u4f55\u610f\u4e49\u5982\u4e0b\u56fe \u9009\u62e9\u4e0d\u540c\u7684F\u4f1a\u6709\u4e0d\u540c\u7684\u635f\u5931\u51fd\u6570 \u4f8b\u5982\u6700\u5c0f\u5747\u65b9\u8bef\u5dee d^2(x,y)=\\|x-y\\|^2= \\left< x-y,x-y \\right> = \\|x\\| ^2 - \\|y\\|^2-\\left<2y,x-y \\right> d^2(x,y)=\\|x-y\\|^2= \\left< x-y,x-y \\right> = \\|x\\| ^2 - \\|y\\|^2-\\left<2y,x-y \\right>","title":"Bregman method"},{"location":"SeismicInversion/Optimization/#bregman-iteration","text":"u_{k+1}=\\argmin_uD^{p_k}_J(u,u_k)+\\lambda\\pmb H(u), p_k\\in\\partial J(u_k) u_{k+1}=\\argmin_uD^{p_k}_J(u,u_k)+\\lambda\\pmb H(u), p_k\\in\\partial J(u_k) \u7b49\u4ef7\u4e8e u_{k+1}=\\arg \\min _{u} J(u)-\\left\\langle p, u-u_{k}\\right\\rangle+\\lambda H(u), \\quad p_{k} \\in \\partial J\\left(u_{k}\\right) u_{k+1}=\\arg \\min _{u} J(u)-\\left\\langle p, u-u_{k}\\right\\rangle+\\lambda H(u), \\quad p_{k} \\in \\partial J\\left(u_{k}\\right) Result\uff0c\u8bc1\u660e\u89c1\u6587\u6863 \u300aNotes on Bregman Iteration\u300b \\pmb H(u_{k+1})\\leq \\pmb H(u_{k+1})+\\frac{1}{\\lambda}D^{p_k}_J(u_{k+1},u_k)\\leq\\pmb H(u_k) \\pmb H(u_{k+1})\\leq \\pmb H(u_{k+1})+\\frac{1}{\\lambda}D^{p_k}_J(u_{k+1},u_k)\\leq\\pmb H(u_k) \\left\\{\\begin{array}{l} u_{k+1}=\\argmin_uD_{J}^{p_{k}}\\left(u, u_{k}\\right)+\\lambda H(u) \\\\ p_{k+1}=p_{k}-\\lambda \\nabla H\\left(u_{k+1}\\right) \\end{array}\\right. \\left\\{\\begin{array}{l} u_{k+1}=\\argmin_uD_{J}^{p_{k}}\\left(u, u_{k}\\right)+\\lambda H(u) \\\\ p_{k+1}=p_{k}-\\lambda \\nabla H\\left(u_{k+1}\\right) \\end{array}\\right. \u5047\u8bbe H(u,f)=\\frac12||Au-f||^2_2 H(u,f)=\\frac12||Au-f||^2_2 \uff0c\u5219 p_0=0 p_0=0 \u65f6\u7684\u8fed\u4ee3\u8fc7\u7a0b\u7b49\u4ef7\u4e8e $$ \\left{ \\begin{array}{l} u_{k+1}=\\arg \\min {u} J(u)+\\lambda H\\left(u, f {k}\\right) \\ f_{k+1}=f_{k}+\\left(f-A u_{k+1}\\right), \\quad f_{0}=f \\end{array}\\right. $$","title":"Bregman Iteration"},{"location":"SeismicInversion/Optimization/#linearized-bregman","text":"\u5047\u8bbe J(u)=||u||_1 J(u)=||u||_1 \uff0c\u5c06H(u)\u8fdb\u884c\u77e9\u9635\u6cf0\u52d2\u5c55\u5f00\u5f97 H(u)\\approx H(u_k)+\\nabla H(u_k)\\cdot(u_k-u) H(u)\\approx H(u_k)+\\nabla H(u_k)\\cdot(u_k-u) \u4f46\u662f\u8fd9\u79cd\u8fd1\u4f3c\u5c55\u5f00\u53ea\u6709\u5728 u u \u548c u_k u_k \u5341\u5206\u63a5\u8fd1\u7684\u65f6\u5019\u4e0a\u5f0f\u624d\u51c6\u786e\uff0c\u6240\u4ee5\u52a0\u5165\u60e9\u7f5a\u9879 \\frac{1}{2 \\delta}\\left\\|u-u_{k}\\right\\|_{2}^{2} \\frac{1}{2 \\delta}\\left\\|u-u_{k}\\right\\|_{2}^{2} \uff0c\u6700\u7ec8\u5982\u4e0b u_{k+1}=\\arg \\min _{u} D^{p_k}_J(u,u_k)+\\lambda H(u_k)+\\left\\langle\\lambda \\nabla H\\left(u_{k}\\right), u-u_k\\right\\rangle+\\frac{1}{2 \\delta}\\left\\|u-u_{k}\\right\\|_{2}^{2} u_{k+1}=\\arg \\min _{u} D^{p_k}_J(u,u_k)+\\lambda H(u_k)+\\left\\langle\\lambda \\nabla H\\left(u_{k}\\right), u-u_k\\right\\rangle+\\frac{1}{2 \\delta}\\left\\|u-u_{k}\\right\\|_{2}^{2} \u5316\u7b80\u5f97 $$ u_{k+1}=\\arg \\min {u} J(u)+\\left\\langle\\lambda \\nabla H\\left(u {k}\\right)-p_{k}, u\\right\\rangle+\\frac{1}{2 \\delta}\\left|u-u_{k}\\right|_{2}^{2} $$","title":"Linearized Bregman"},{"location":"SeismicInversion/Optimization/#split-bregman","text":"\u5047\u8bbe \\Phi \u548c E(u) \\Phi \u548c E(u) \u5747\u4e3a\u51f8\u51fd\u6570 \\min _{u}\\|\\Phi(u)\\|_{1}+E(u) \\min _{u}\\|\\Phi(u)\\|_{1}+E(u) \u901a\u8fc7\u8fd0\u7b97\u7b26\u5206\u88c2 \\min _{u, d}\\|d\\|_{1}+E(u) \\text { subject to } \\Phi(u)=d \\min _{u, d}\\|d\\|_{1}+E(u) \\text { subject to } \\Phi(u)=d \u4ee4 J(u,d)=||d||_1+E(u),H(u,d)=\\frac12||d-\\Phi(u)||^2_2 J(u,d)=||d||_1+E(u),H(u,d)=\\frac12||d-\\Phi(u)||^2_2 \uff0c\u5e26\u5165Bregman\u65b9\u6cd5 \\left\\{\\begin{aligned} \\left(u^{k+1}, d^{k+1}\\right) &=\\min _{u, d} J(u, d)-\\left\\langle p_{u}^{k}, u-u^{k}\\right\\rangle-\\left\\langle p_{d}^{k}, d-d^{k}\\right\\rangle+\\lambda H(u, d) \\\\ p_{u}^{k+1} &=p_{u}^{k}-\\lambda \\nabla_{u} H\\left(u^{k+1}, d^{k+1}\\right) \\\\ p_{d}^{k+1} &=p_{d}^{k}-\\lambda \\nabla_{d} H\\left(u^{k+1}, d^{k+1}\\right) \\end{aligned}\\right. \\left\\{\\begin{aligned} \\left(u^{k+1}, d^{k+1}\\right) &=\\min _{u, d} J(u, d)-\\left\\langle p_{u}^{k}, u-u^{k}\\right\\rangle-\\left\\langle p_{d}^{k}, d-d^{k}\\right\\rangle+\\lambda H(u, d) \\\\ p_{u}^{k+1} &=p_{u}^{k}-\\lambda \\nabla_{u} H\\left(u^{k+1}, d^{k+1}\\right) \\\\ p_{d}^{k+1} &=p_{d}^{k}-\\lambda \\nabla_{d} H\\left(u^{k+1}, d^{k+1}\\right) \\end{aligned}\\right. lsqr\u65b9\u6cd5 \u6700\u5c0f\u4e8c\u4e58\u6cd5\u539f\u7406\u8be6\u89e3 \u6700\u5c0f\u5e73\u65b9QR\u5206\u89e3\u6cd5 \\min\\left\\|\\left[\\begin{array}{c} A \\\\ \\lambda I \\end{array}\\right] x-\\left[\\begin{array}{l} b \\\\ 0 \\end{array}\\right]\\right\\|_2 \\min\\left\\|\\left[\\begin{array}{c} A \\\\ \\lambda I \\end{array}\\right] x-\\left[\\begin{array}{l} b \\\\ 0 \\end{array}\\right]\\right\\|_2","title":"Split Bregman"},{"location":"SeismicInversion/Optimization/#_2","text":"\u5bf9\u4e8e\u95ee\u9898 \\min\\left\\|\\left[\\begin{array}{c} A \\\\ \\lambda I \\end{array}\\right] x-\\left[\\begin{array}{l} b \\\\ 0 \\end{array}\\right]\\right\\|_2 \\min\\left\\|\\left[\\begin{array}{c} A \\\\ \\lambda I \\end{array}\\right] x-\\left[\\begin{array}{l} b \\\\ 0 \\end{array}\\right]\\right\\|_2 \u5728\u4e4b\u540e\u7684\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u4ee4 G = \\left[\\begin{array}{c}A \\\\ \\lambda I \\end{array}\\right], obs = \\left[\\begin{array}{c} b \\\\ 0 \\end{array}\\right] G = \\left[\\begin{array}{c}A \\\\ \\lambda I \\end{array}\\right], obs = \\left[\\begin{array}{c} b \\\\ 0 \\end{array}\\right] \u5176\u4e2d \\lambda I \\lambda I \u4e3a\u6b63\u5219\u5316\u9879\uff0c\u7528\u4e8e\u4e3a\u53cd\u95ee\u9898\u589e\u52a0\u7ea6\u675f\uff0c\u51cf\u5c0f\u591a\u89e3\u6027","title":"\u57fa\u7840\u65b9\u6cd5\u5373\u4ee3\u7801\u5b9e\u73b0"},{"location":"SeismicInversion/Optimization/#_3","text":"\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u6700\u5c0f\u5316\u76ee\u6807\u6cdb\u51fd f(m) f(m) \u7684\u8fed\u4ee3\u6d41\u7a0b\u4e3a m^{k+1} = m^k - \\alpha_k \\nabla f(m^k) m^{k+1} = m^k - \\alpha_k \\nabla f(m^k) \u5bf9\u4e8e Ax=b Ax=b \u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u6c42\u51fa \\min f(m) = ||Gm-d||^2_2 \\min f(m) = ||Gm-d||^2_2 f(m) = (Gm-d)^T(Gm-d)=m^TG^TGm-2(G^Td)^Tm+d^Td f(m) = (Gm-d)^T(Gm-d)=m^TG^TGm-2(G^Td)^Tm+d^Td \\nabla f(m)=2G^TGm-2G^Td \\nabla f(m)=2G^TGm-2G^Td m^{k+1} = m^k - \\alpha_k (2G^TGm^k-2G^Td) m^{k+1} = m^k - \\alpha_k (2G^TGm^k-2G^Td) \u6b65\u957f\u7684\u9009\u53d6 \\alpha_k \\leq \\frac{2}{\\lambda_{max} (G^TG)} \\alpha_k \\leq \\frac{2}{\\lambda_{max} (G^TG)} \u4ee3\u7801\u5b9e\u73b0 def GD_run ( self , init_guess , G , obs , Iter , show = False ): pre = init_guess loss = [] for k in range ( Iter ): step = 1 grad = G . T @ G @ pre - G . T @ obs residual = self . calculate_residual ( pre , G , obs ) rmse = np . linalg . norm ( residual ) # \u539f\u5b9a\u635f\u5931\u5c0f\u4e8e\u6cbf\u5b66\u4e60\u7387\u8fed\u4ee3\u540e\u7684\u635f\u5931\uff0c\u8bf4\u660e\u6b65\u957f\u8f83\u5927\uff0c\u51cf\u5c0f\u6b65\u957f while rmse < np . linalg . norm ( self . calculate_residual ( pre - step * grad , G , obs )): step = step * 0.5 pre = pre - step * grad loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'GD Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss","title":"\u68af\u5ea6\u4e0b\u964d"},{"location":"SeismicInversion/Optimization/#_4","text":"\u7c7b\u4f3c\u68af\u5ea6\u4e0b\u964d\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u662f\u6c42\u5168\u90e8\u5217\u7684\u68af\u5ea6\uff0c\u800c\u662f\u6c42\u5176\u968f\u673a\u4e00\u5217\u7684\u68af\u5ea6\u8fdb\u884c\u4e0b\u964d \\min f(m) = ||Gm-d||^2_2 = \\sum^m_{i=1} f_i(m) = \\sum^m_{i=1}(Gm-d)^2_i \\\\ \\nabla f(m)_i = 2G^T_iG_im-2d_iG^T_i \\min f(m) = ||Gm-d||^2_2 = \\sum^m_{i=1} f_i(m) = \\sum^m_{i=1}(Gm-d)^2_i \\\\ \\nabla f(m)_i = 2G^T_iG_im-2d_iG^T_i \u4ee3\u7801\u5b9e\u73b0(\u56fa\u5b9a\u68af\u5ea6) TODO \u53d8\u68af\u5ea6 def SGD_run ( self , init_guess , G , obs , iter , show = False ): self . init_guess = init_guess pre = self . init_guess rmse_prev = np . inf loss = [] for k in range ( iter ): step = 1 # \u6b65\u957f lossres = self . calculate_residual ( pre , self . A , self . b ) # \u635f\u5931\uff0c\u5982\u679c\u672a\u52a0\u6b63\u5219\u5316,self.A,self.b\u5373\u4e3aG,obs index = round ( np . random . random () * ( G . shape [ 0 ] - 1 )) # \u968f\u673a\u53d6\u884c\u53f7 grad = G [ index : index + 1 , :] . T @ G [ index : index + 1 , :] @ pre - obs [ index ] * G [ index , :] . T # \u968f\u673a\u4e00\u884c\u7684\u68af\u5ea6 pre = pre - step * grad # \u68af\u5ea6\u4e0b\u964d rmse = np . linalg . norm ( lossres ) loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'SGD Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss","title":"\u968f\u673a\u68af\u5ea6\u4e0b\u964d"},{"location":"SeismicInversion/Optimization/#_5","text":"\u53c2\u8003\u94fe\u63a5: Algorithms from scratch: Gauss-Newton \u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u7684\u56db\u79cd\u89e3\u6cd5\u2014\u2014\u725b\u987f\u6cd5\uff0c\u68af\u5ea6\u4e0b\u964d\u6cd5\uff0c\u9ad8\u65af\u725b\u987f\u6cd5\u548c\u5217\u6587\u4f2f\u683c-\u9a6c\u5938\u7279\u6cd5\u7684\u533a\u522b\u548c\u8054\u7cfb \u5bf9\u4e8e\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898 \\min_x\\frac{1}{2}||f(x)||_2^2 \\min_x\\frac{1}{2}||f(x)||_2^2 \u5bf9 f(x + \\Delta x) f(x + \\Delta x) \u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\u5f97\u5230 f(x+\\Delta x) \\approx f(x) + J(x)^T \\Delta x + o(\\Delta x) f(x+\\Delta x) \\approx f(x) + J(x)^T \\Delta x + o(\\Delta x) \u6240\u4ee5\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u5316\u4e3a \\Delta x^* = \\arg \\min \\frac{1}{2} ||f(x + \\Delta x)||_2^2 \\approx \\arg \\min \\frac{1}{2} ||f(x) + J(x)^T \\Delta x||_2^2 \\Delta x^* = \\arg \\min \\frac{1}{2} ||f(x + \\Delta x)||_2^2 \\approx \\arg \\min \\frac{1}{2} ||f(x) + J(x)^T \\Delta x||_2^2 \u5316\u7b80 m(x) = \\frac{1}{2} ||f(x) + J(x)^T \\Delta x||^2 = \\frac{1}{2}(f(x) + J(x)^T \\Delta x)^T(f(x) + J(x)^T \\Delta x) m(x) = \\frac{1}{2} ||f(x) + J(x)^T \\Delta x||^2 = \\frac{1}{2}(f(x) + J(x)^T \\Delta x)^T(f(x) + J(x)^T \\Delta x) \u6c42\u5bfc\u4ee4\u5bfc\u6570\u7b49\u4e8e\u96f6\u53ef\u5f97 m^`(x) = 0 \\quad \\rightarrow \\quad J(x)J(x)^T\\Delta x = - J(x)f(x) \\rightarrow \\Delta x = \\frac{- J(x)f(x)}{J(x)J(x)^T} m^`(x) = 0 \\quad \\rightarrow \\quad J(x)J(x)^T\\Delta x = - J(x)f(x) \\rightarrow \\Delta x = \\frac{- J(x)f(x)}{J(x)J(x)^T} \u4ee3\u7801\u5b9e\u73b0 def GN_run ( self , init_guess , G , obs , iter , show = False ): pre = init_guess loss = [] for k in range ( iter ): residual = self . calculate_residual ( pre , G , obs ) lossres = self . calculate_residual ( pre , self . A , self . b ) jacobian = self . calculate_jacobian ( pre , G , obs , step = 10 ** ( - 6 )) pre = pre - np . linalg . pinv ( jacobian . T @ jacobian ) @ ( jacobian . T @ residual ) rmse = np . linalg . norm ( lossres ) loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'Gauss-Newton Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss","title":"\u9ad8\u65af\u725b\u987f\u6cd5"},{"location":"SeismicInversion/Optimization/#-levenbergmarquardt","text":"\u57fa\u672c\u539f\u7406\u4e0e\u9ad8\u65af\u725b\u987f\u6cd5\u7c7b\u4f3c\uff0c\u5728\u9ad8\u65af\u725b\u987f\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u635f\u5931\u66f2\u7ebf\u5728\u540e\u671f\u4f1a\u8fdb\u5165\u952f\u9f7f\u72b6\uff0c\u8fed\u4ee3\u7684\u6b21\u6570\u8f83\u957f\u3002\u6240\u4ee5\uff0c\u4e3a\u4e86\u907f\u514d\u5176\u6b65\u957f\u8fc7\u5927\u5bfc\u81f4\u7684\u95ee\u9898\uff0c\u8be5\u65b9\u6cd5\u63d0\u51fa\u4e86\u4fe1\u8d56\u533a\u57df\uff0c\u52a8\u6001\u8c03\u6574\u6b65\u957f\u51cf\u5c0f\u8fed\u4ee3\u6b21\u6570 \u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u8bbe\u5b9a\u4e00\u4e2a\u8bc4\u5224\u6807\u51c6\u7528\u4e8e\u8bc4\u5224\u4f30\u8ba1\u7684\u597d\u574f\uff0c\u4ece\u800c\u52a8\u6001\u8c03\u6574\u6b65\u957f \\rho = \\frac{f(x+\\Delta x) - f(x)}{J(x)^T\\Delta x} \\rho = \\frac{f(x+\\Delta x) - f(x)}{J(x)^T\\Delta x} \u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5 \\rho \\rho \u63a5\u8fd11\uff0c\u8fd1\u4f3c\u662f\u597d\u7684\uff0c\u4e0d\u9700\u8981\u66f4\u6539 \\rho \\rho \u592a\u5c0f\uff0c\u5219\u5b9e\u9645\u51cf\u5c11\u7684\u503c\u5c0f\u4e8e\u8fd1\u4f3c\u51cf\u5c11\u7684\u503c\uff0c\u8fd1\u4f3c\u8f83\u5927\uff0c\u9700\u8981\u7f29\u5c0f\u8fd1\u4f3c\u7684\u8303\u56f4 \\rho \\rho \u592a\u5927\uff0c\u5219\u5b9e\u9645\u51cf\u5c11\u7684\u503c\u5927\u4e8e\u8fd1\u4f3c\u51cf\u5c11\u7684\u503c\uff0c\u8fd1\u4f3c\u8f83\u5c0f\uff0c\u9700\u8981\u6269\u5927\u8fd1\u4f3c\u7684\u8303\u56f4\u3002 \u53cd\u95ee\u9898\u4e3a \\min \\frac {1}{2}||f(x) + J(x)^T \\Delta x|| \\quad s.t \\quad ||D \\Delta x < \\mu||_2 \\min \\frac {1}{2}||f(x) + J(x)^T \\Delta x|| \\quad s.t \\quad ||D \\Delta x < \\mu||_2 \u5176\u4e2d D D \u4e3a\u7cfb\u6570\u77e9\u9635\uff0c \\mu \\mu \u4e3a\u4fe1\u8d56\u534a\u5f84 \u53ef\u4ee5\u6784\u5efa\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff0c \\lambda \\lambda \u4e3a\u7cfb\u6570\u56e0\u5b50 L(\\Delta x,\\lambda) = \\frac {1}{2}||f(x) + J(x)^T\\Delta x||^2 + \\frac {\\lambda}{2}(||D \\Delta x||^2 - \\mu) L(\\Delta x,\\lambda) = \\frac {1}{2}||f(x) + J(x)^T\\Delta x||^2 + \\frac {\\lambda}{2}(||D \\Delta x||^2 - \\mu) \u6c42\u5bfc\u5e76\u5316\u7b80\u5f97 J(x)f(x) + J(x)J^T(x)\\Delta x + \\lambda D^TD \\Delta x = 0 \\rightarrow (JJ^T + \\lambda D^TD) \\Delta x = -Jf J(x)f(x) + J(x)J^T(x)\\Delta x + \\lambda D^TD \\Delta x = 0 \\rightarrow (JJ^T + \\lambda D^TD) \\Delta x = -Jf \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u901a\u5e38\u5c06 I I \u4ee3\u66ff D^TD D^TD \u4ee3\u7801\u5b9e\u73b0 def LM_run ( self , init_guess , G , obs , iter , show = False ): pre = init_guess lam = 0.01 # todo \u5982\u4f55\u8bbe\u5b9alambda loss = [] for k in range ( iter ): residual = self . calculate_residual ( pre , G , obs ) lossres = self . calculate_residual ( pre , self . A , self . b ) jacobian = self . calculate_jacobian ( pre , G , obs , step = 10 ** ( - 6 )) pre = pre - np . linalg . pinv ( jacobian . T @ jacobian + lam * np . identity ( jacobian . shape [ 1 ])) @ ( jacobian . T @ residual ) rmse = np . linalg . norm ( lossres ) loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'Levenberg-Marquardt Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss LM\u65b9\u6cd5\u662f\u7531\u725b\u987f\u6cd5\u7684\u57fa\u7840\u4e0a\u5f97\u5230\u7684\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u8054\u7cfb\u4e3b\u8981\u53d6\u51b3\u4e8e \\lambda \\lambda \u7684\u53d6\u503c \u5bf9\u4e8e\u8fed\u4ee3\u8fc7\u7a0b (JJ^T + \\lambda I) \\Delta x_k = -Jf (JJ^T + \\lambda I) \\Delta x_k = -Jf \u5f53 \\lambda \\lambda \u8f83\u5927\u65f6\uff0c\u66f4\u65b0\u65b9\u7a0b\u4e2d \\lambda I \\lambda I \u5360\u4e3b\u8981\uff0c\u8fed\u4ee3\u8fd1\u4f3c\u4e3a \\lambda I \\Delta x_k = -Jf \\lambda I \\Delta x_k = -Jf \uff0c\u6b64\u65f6\u4e3a\u68af\u5ea6\u4e0b\u964d\u6cd5 \u5f53 \\lambda \\lambda \u8f83\u5927\u65f6\uff0c\u66f4\u65b0\u65b9\u7a0b\u4e2d JJ^T JJ^T \u5360\u4e3b\u8981\uff0c\u8fed\u4ee3\u8fd1\u4f3c\u4e3a JJ^T \\Delta x_k = -Jf JJ^T \\Delta x_k = -Jf \uff0c\u6b64\u65f6\u4e3a\u9ad8\u65af\u725b\u987f\u6cd5","title":"\u5217\u6587\u4f2f\u683c-\u9a6c\u5938\u7279\u65b9\u6cd5(Levenberg\u2013Marquardt)"},{"location":"SeismicInversion/Optimization/#irls","text":"","title":"IRLS"},{"location":"SeismicInversion/Optimization/#_6","text":"\u53c2\u8003\u94fe\u63a5 \u53d8\u91cf\u9009\u62e9\u4e4bLASSO\u2014\uff08\u4e00\uff09\u51f8\u6b63\u5219\u5316\u65b9\u6cd51 \u5bf9\u4e8e\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898 \\min ||Ax-b||_2 \\min ||Ax-b||_2 \u8fdb\u884c\u53cd\u6f14\u65f6\uff0c\u56e0\u4e3a\u7ea6\u675f\u6761\u4ef6\u4e0d\u591f\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a\u4e0d\u540c\u7684 x x \u6ee1\u8db3 \\min ||Ax-b||_2 \\min ||Ax-b||_2 \uff0c\u5f53\u5e76\u4e0d\u662f\u6211\u4eec\u9884\u671f\u7684 x x ,\u4e5f\u5c31\u662f\u95ee\u9898\u7684\u591a\u89e3\u6027\uff0c\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u5728\u6c42\u89e3\u53cd\u95ee\u9898\u7684\u65b9\u7a0b\u4e2d\u6dfb\u52a0\u5176\u4ed6\u7ea6\u675f\u9879\uff0c\u4ece\u6570\u5b66\u4e0a\u6765\u8bb2\uff0c\u5c31\u662f\u5728\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u4e2a\u6b63\u5219\u9879\uff0c\u6765\u9632\u6b62\u8fc7\u62df\u5408\u3002\u76ee\u524d\u4e3b\u8981\u6709L1\u6b63\u5219\u5316\u548cL2\u6b63\u5219\u5316\uff0c\u5373LASSO\u56de\u5f52\u548c\u5cad\u56de\u5f52 \u53c2\u8003\u94fe\u63a5\uff1a l1\u6b63\u5219\u4e0el2\u6b63\u5219\u7684\u7279\u70b9\u662f\u4ec0\u4e48\uff0c\u5404\u6709\u4ec0\u4e48\u4f18\u52bf\uff1f L1-Regularization(\u4e00\u8303\u6570) $$\\lambda \\sum_{i=0}^k|w_i| $$ L2-Regularization(\u4e8c\u8303\u6570) \\lambda \\sum_{i=0}^k w_i^2 \\lambda \\sum_{i=0}^k w_i^2 <span class=\"arithmatex\"><span class=\"MathJax_Preview\">\\lambda \\sum_{i=0}^k w_i^2</span><script type=\"math/tex\">\\lambda \\sum_{i=0}^k w_i^2 \u5bf9\u4e8e\u5730\u9707\u53cd\u6f14\uff0c\u5e38\u7528\u7684\u5c31\u662fTV\u6b63\u5219\u5316\uff0c\u5373\u5bf9\u6a21\u578b\u7684\u5dee\u5206\u7684\u4e00\u8303\u6570\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u4e0d\u8fde\u7eed\u6027\uff0c\u53ef\u4ee5\u5f62\u6210\u7a00\u758f\u89e3 \\min ||Gm-d||_2^2+\\alpha||Lm||_1 \\min ||Gm-d||_2^2+\\alpha||Lm||_1 \u5176\u4e2d L L \u4e3a\u5dee\u5206\u77e9\u9635 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u6c42\u89e3\u4e00\u9636TV\u6b63\u5219\u5316\u53cd\u95ee\u9898\u7684\u6c42\u89e3\u65b9\u6cd5 IRLS \u5bf9\u4e8e\u4e0a\u5f0f\u6c42\u68af\u5ea6\u5f97\u5230 \\nabla f(m) = 2G^TGm-2G^Td+\\alpha \\sum_{i=0}^m\\nabla|y_i| \\nabla f(m) = 2G^TGm-2G^Td+\\alpha \\sum_{i=0}^m\\nabla|y_i| \u4ee4 $$ W_{i, i}= \\begin{cases}1 /\\left|y_i^{(k)}\\right| & \\left|y_i^{(k)}\\right| \\geq \\epsilon \\ 1 / \\epsilon & \\left|y_i^{(k)}\\right|<\\epsilon .\\end{cases} $$ \u8fed\u4ee3\u8fc7\u7a0b\u4e3a \\mathbf{m}^{(k+1)}=\\arg \\min \\left\\|\\left[\\begin{array}{c} \\mathbf{G} \\\\ \\sqrt{\\frac{\\alpha}{2}} \\sqrt{\\mathbf{W}} \\mathbf{L} \\end{array}\\right] \\mathbf{m}-\\left[\\begin{array}{l} \\mathbf{d} \\\\ \\mathbf{0} \\end{array}\\right]\\right\\|_2 \\mathbf{m}^{(k+1)}=\\arg \\min \\left\\|\\left[\\begin{array}{c} \\mathbf{G} \\\\ \\sqrt{\\frac{\\alpha}{2}} \\sqrt{\\mathbf{W}} \\mathbf{L} \\end{array}\\right] \\mathbf{m}-\\left[\\begin{array}{l} \\mathbf{d} \\\\ \\mathbf{0} \\end{array}\\right]\\right\\|_2 \u4ee3\u7801\u5b9e\u73b0\uff0c\u793a\u4f8b\u4e3a\u9ad8\u65af\u725b\u987f\u6cd5\u4f18\u5316\u7b56\u7565 def GN_run ( self , init_guess , G , obs , iter , show = False , IRLS = None ): # IRLS\u4e3a\u4e00\u8303\u6570\u53c2\u6570[alpha, eps, L] pre = init_guess loss = [] with tqdm ( total = iter ) as t : for i in range ( iter ): t . set_description ( 'solver GN' ) if IRLS is not None : L = IRLS [ - 1 ] alpha = IRLS [ 0 ] eps = IRLS [ 1 ] Reg = self . _IRLSupdate ( L , pre , alpha , eps ) G = np . vstack (( self . A , Reg )) obs = np . hstack (( self . b , np . zeros (( Reg . shape [ 0 ])))) # TODO \u4e00\u7ef4\u6570\u636e\u9002\u7528\uff0c\u4e8c\u7ef4\u6570\u636e\u8981\u6539\uff01\uff01\uff01 residual = self . calculate_residual ( pre , G , obs ) lossres = self . calculate_residual ( pre , self . A , self . b ) jacobian = self . calculate_jacobian ( pre , G , obs , step = 10 ** ( - 6 )) pre = pre - np . linalg . pinv ( jacobian . T @ jacobian ) @ ( jacobian . T @ residual ) rmse = np . linalg . norm ( lossres ) loss . append ( rmse ) t . set_postfix ( loss = rmse ) t . update ( 1 ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'Gauss-Newton Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss","title":"\u6b63\u5219\u5316\u53cd\u6f14"},{"location":"SeismicInversion/Optimization/#ista","text":"\u53c2\u8003\u94fe\u63a5 \u8f6f\u9608\u503c\u8fed\u4ee3\u7b97\u6cd5\uff08ISTA\u7b97\u6cd5\uff09 \u5bf9\u4e8e\u53cd\u95ee\u9898 \\min ||Ax-b||_2^2+\\lambda||x||_1 \\min ||Ax-b||_2^2+\\lambda||x||_1 \u901a\u8fc7\u63a8\u5bfc\u5f97\u5230\uff08\u5177\u4f53\u53c2\u7167\u4e0a\u9762\u7684\u53c2\u8003\u94fe\u63a5\uff09 \\mathbf{x}_{k+1}=\\mathcal{T}_{\\lambda t}\\left(\\mathbf{x}_k-2 t \\mathbf{A}^T\\left(\\mathbf{A} \\mathbf{x}_k-\\mathbf{b}\\right)\\right) \\mathbf{x}_{k+1}=\\mathcal{T}_{\\lambda t}\\left(\\mathbf{x}_k-2 t \\mathbf{A}^T\\left(\\mathbf{A} \\mathbf{x}_k-\\mathbf{b}\\right)\\right) \u5176\u4e2d\uff0c\u8f6f\u9608\u503c\u51fd\u6570\u4e3a: \u53c2\u8003\u94fe\u63a5\uff1a \u786c\u9608\u503c & \u8f6f\u9608\u503c \\mathcal{T}_\\omega(\\mathbf{x})_i=\\left(\\left|x_i\\right|-\\omega\\right)_{+} \\operatorname{sgn}\\left(x_i\\right) \\mathcal{T}_\\omega(\\mathbf{x})_i=\\left(\\left|x_i\\right|-\\omega\\right)_{+} \\operatorname{sgn}\\left(x_i\\right) \u5373 [\\mathcal{T}_{\\omega}(x)]_i=\\begin{cases} \\begin{array}{c} x_i-\\omega ,\\quad x_i>\\omega\\\\\\end{array}\\\\ \\begin{array}{c} 0,\\qquad \\quad |x_i|\\le \\omega\\\\\\end{array}\\\\ \\begin{array}{c} x_i+\\omega ,\\quad x_i<-\\omega\\\\\\end{array}\\\\\\end{cases} \\\\ [\\mathcal{T}_{\\omega}(x)]_i=\\begin{cases} \\begin{array}{c} x_i-\\omega ,\\quad x_i>\\omega\\\\\\end{array}\\\\ \\begin{array}{c} 0,\\qquad \\quad |x_i|\\le \\omega\\\\\\end{array}\\\\ \\begin{array}{c} x_i+\\omega ,\\quad x_i<-\\omega\\\\\\end{array}\\\\\\end{cases} \\\\ \u5f53A\u4e3a\u5355\u4f4d\u77e9\u9635\u65f6\uff0c\u5373 \\min ||x-b||_2^2+\\lambda||x||_1 \\min ||x-b||_2^2+\\lambda||x||_1 \u89e3\u4e3a x^*=\\mathcal{T}_{\\frac{\\lambda}{2}}(b) x^*=\\mathcal{T}_{\\frac{\\lambda}{2}}(b) \u4ee3\u7801\u5b9e\u73b0 def Ista_run ( self , init_guess , G , obs , iter , show = False ): pre = init_guess lamb = 0.01 tk = 1 / np . linalg . norm ( G . T @ G ) # tk\u6700\u5927\u503c loss = [] for k in range ( iter ): residual = self . calculate_residual ( pre , G , obs ) rmse = np . linalg . norm ( residual ) loss . append ( rmse ) grad = G . T @ G @ pre - G . T @ obs grad = np . squeeze ( grad ) zk = pre - tk * grad pre = self . _softThresh ( lamb * tk , zk ) tk = tk / 1.1 if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'ISTA Loss curve' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss","title":"ISTA\u65b9\u6cd5"},{"location":"SeismicInversion/Optimization/#fisata","text":"Amir Beck\u7b49\u4eba\u5c06Nesterov\u52a0\u901f\u7b97\u6cd5\u5f15\u5165ISTA\u7b97\u6cd5\u4e2d\uff0c\u5e76\u79f0\u4e4b\u4e3aFISTA\u7b97\u6cd5\uff0c\u5176\u5c06\u590d\u6742\u5ea6\u4ece O(1/k) O(1/k) \u964d\u4f4e\u5230\u4e86 O(1/k^2) O(1/k^2) \uff0c\u51cf\u5c0f\u4e86ISTA\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u63d0\u9ad8\u4e86\u8ba1\u7b97\u901f\u5ea6\uff0c\u4f7f\u635f\u5931\u53ef\u4ee5\u5f97\u5230\u66f4\u5feb\u6536\u655b ISTA\u65b9\u6cd5\u662f\u76f4\u63a5\u8fed\u4ee3 x_k x_k \uff0cFISTA\u662f\u8fed\u4ee3 y_k y_k \uff0c y_k y_k \u7531 x_k x_k \u8ba1\u7b97\u5f97\u5230 \\mathbf y_{k+1}=\\mathbf x_k+(\\frac{t_k-1}{t_{k+1}})(\\mathbf x_k-\\mathbf x_{k-1}) \\mathbf y_{k+1}=\\mathbf x_k+(\\frac{t_k-1}{t_{k+1}})(\\mathbf x_k-\\mathbf x_{k-1}) \u5176\u4e2d t_{k+1}=\\frac{1+\\sqrt{1+4t^2_k}}{2} t_{k+1}=\\frac{1+\\sqrt{1+4t^2_k}}{2} def Fista_run ( self , init_guess , G , obs , iter , show = False ): pre = init_guess tk = 1 t = 1 / np . linalg . norm ( G . T @ G ) lamb = 0.01 loss = [] xk = init_guess xk_1 = xk for k in range ( iter ): tk1 = 0.5 * ( 1 + np . sqrt ( 1 + 4 * tk ** 2 )) yk1 = xk + ( tk - 1 ) / tk1 * ( xk - xk_1 ) grad = G . T @ G @ yk1 - G . T @ obs grad = np . squeeze ( grad ) zk = yk1 - t * grad # update iterative xk_1 = xk xk = self . _softThresh ( lamb * t , zk ) tk = tk1 # err = np.linalg.norm(self.pre - yk1) # if k!=0 and err<0.0001: # print('\u7b2c%d\u8f6e\u5df2\u7ecf\u6536\u655b\uff0c\u589e\u91cf\u4e3a%f' %(k,err)) # break pre = yk1 t = t / 1.1 # loss residual = self . calculate_residual ( pre , G , obs ) rmse = np . linalg . norm ( residual ) loss . append ( rmse ) if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'FISTA Loss curve' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return pre , loss","title":"FISATA\u65b9\u6cd5"},{"location":"SeismicInversion/Optimization/#split-bregman_1","text":"\u53c2\u8003\u89c1\u300a\u53cd\u95ee\u9898\u7684\u8fed\u4ee3\u6c42\u89e3\u7b97\u6cd5\u300b\u8bfe\u4ef6 \u5bf9\u4e8e\u4e00\u9636TV\u53cd\u95ee\u9898 \\min _{m}||data-Gm||_2^2+\\alpha||L m ||_1 \\min _{m}||data-Gm||_2^2+\\alpha||L m ||_1 \u4ee4 d^k=Lm d^k=Lm \uff0c\u589e\u52a0\u7ea6\u675f\u9879\uff0c\u5f97\u5230 \\left(m^{k+1}, d^{k+1}\\right)=\\min _{m, d}||data-Gm||_2^2+\\alpha||d^k||_1+\\frac{\\lambda}{2}\\left\\|d^k-Lm-b^{k}\\right\\|_{2}^{2} \\\\ b^{k+1} = b^k + (data-Gm-d^{k+1}) \\left(m^{k+1}, d^{k+1}\\right)=\\min _{m, d}||data-Gm||_2^2+\\alpha||d^k||_1+\\frac{\\lambda}{2}\\left\\|d^k-Lm-b^{k}\\right\\|_{2}^{2} \\\\ b^{k+1} = b^k + (data-Gm-d^{k+1}) \u6545\uff0c\u4e0a\u5f0f\u53ef\u62c6\u89e3\u6210\u4e24\u4e2a\u5b50\u95ee\u9898\uff0c\u5cad\u56de\u5f52\u95ee\u9898\u4e0eLASSO\u56de\u5f52\u95ee\u9898 \u5b50\u95ee\u9898\u4e00(\u5cad\u56de\u5f52) m^{k+1} = \\min_m||data-Gm||_2^2+\\frac{\\lambda }{2} ||d^k-b^k-Lm||_2^2 m^{k+1} = \\min_m||data-Gm||_2^2+\\frac{\\lambda }{2} ||d^k-b^k-Lm||_2^2 \u53ef\u770b\u4f5c \\min\\left|\\left|\\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} L \\end{bmatrix}m - \\begin{bmatrix}data \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d-b) \\end{bmatrix}\\right|\\right|_2 \\min\\left|\\left|\\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} L \\end{bmatrix}m - \\begin{bmatrix}data \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d-b) \\end{bmatrix}\\right|\\right|_2 \u5b50\u95ee\u9898\u4e8c(LASSO\u56de\u5f52) d^{k+1}=\\min_d\\frac{\\lambda}{2}||d^k-b^k-Lm||_2^2+\\alpha||d^k||_1 d^{k+1}=\\min_d\\frac{\\lambda}{2}||d^k-b^k-Lm||_2^2+\\alpha||d^k||_1 \u7528\u8f6f\u9608\u503c\u51fd\u6570\u53ef\u6c42\u89e3 \u4ee3\u7801\u5b9e\u73b0 def run ( self , show = True ): iiter = 0 flag = 1 loss = [] lamb = 0.01 x = self . x0 for _ in tqdm ( range ( self . Iter )): # regularized problem dataregs = self . d - self . b_ # subquestion1 Sub1 = RegularizedInv ( self . Op , self . obs , self . x0 , lamb , self . Reg , dataregs ) # \u521d\u59cb\u5316\u5cad\u56de\u5f52\u53cd\u6f14 x , sub1loss = Sub1 . run ( self . x0 if flag else x , 10 , 'GN' , True ) # \u9009\u62e9\u4f18\u5316\u65b9\u6cd5\u8fed\u4ee3\u6c42\u89e3 flag = 0 # subquestion2 dataregs2 = self . Reg @ x + self . b_ # self.d, sub2loss = self.Ista_run(self.d,np.eye(self.Reg.shape[0]),dataregs2,50,None) # ISTA\u65b9\u6cd5 self . d = self . _softThresh ( lamb / 4 , dataregs2 ) # TODO lambda \u5e94\u8be5\u600e\u4e48\u786e\u5b9a residual = np . linalg . norm ( self . calculate_residual ( x , self . A , self . b )) loss . append ( residual ) self . b_ = self . b_ + self . tau * ( self . Reg @ x - self . d ) iiter = iiter + 1 if show : plt . figure () plt . plot ( loss , linewidth = 1 , linestyle = \"solid\" , label = \"loss\" ) plt . legend () plt . title ( 'Split Bregman Loss curve(final loss = ' + str ( round ( loss [ - 1 ], 4 )) + ')' ) plt . xlabel ( 'iters' ) plt . ylabel ( 'res' ) return x , loss \u5bf9\u4e8e\u4e8c\u9636TV\u53cd\u95ee\u9898 \\min_m\\sum_i\\sqrt{(\\nabla_x m)^2_i+(\\nabla_y m)^2_i}+\\frac{\\mu}{2}||Gm-d||^2_2 \\min_m\\sum_i\\sqrt{(\\nabla_x m)^2_i+(\\nabla_y m)^2_i}+\\frac{\\mu}{2}||Gm-d||^2_2 \u4ee4 d_x=\\nabla_x m, d_y=\\nabla_y m d_x=\\nabla_x m, d_y=\\nabla_y m \u8fdb\u884c\u5206\u88c2L1,L2\u9879\u540e\uff0c\u53cd\u95ee\u9898\u5316\u4e3a \\min_{u,d_k,d_y}\\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2+\\frac{\\mu}{2}||Gm-d||^2_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 \\min_{u,d_k,d_y}\\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2+\\frac{\\mu}{2}||Gm-d||^2_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 \u5176\u4e2d \\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2=\\sum_{i,j}\\sqrt{|d_{x,i,j}|^2+|d_{y,i,j}|^2} \\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2=\\sum_{i,j}\\sqrt{|d_{x,i,j}|^2+|d_{y,i,j}|^2} \u4e24\u4e2a\u5b50\u95ee\u9898\u5206\u522b\u4e3a \u5b50\u95ee\u9898\u4e00 m^{k+1}=\\min_m\\frac{\\mu}{2}||Gm-d||^2_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 m^{k+1}=\\min_m\\frac{\\mu}{2}||Gm-d||^2_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 \u5316\u4e3a\u5cad\u56de\u5f52\u95ee\u9898 \\min\\left|\\left|\\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}m - \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix}\\right|\\right|_2 \\min\\left|\\left|\\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}m - \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix}\\right|\\right|_2 \u6216 \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}= \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}= \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \u5316\u4e3a \\min\\left|\\left| \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m- \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}^{-1} \\right|\\right|_2 \\min\\left|\\left| \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m- \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}^{-1} \\right|\\right|_2 \u5316\u7b80\u4e3a \\min\\left|\\left| \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m- \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}^{-1} \\right|\\right|_2 \\min\\left|\\left| \\begin{bmatrix}G \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_x \\\\ I \\end{bmatrix}m- \\begin{bmatrix}d \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_x-b_x) \\\\\\sqrt[]{\\frac{\\lambda}{2}}(d_y-b_y) \\end{bmatrix} \\begin{bmatrix}I \\\\ I \\\\ \\sqrt[]{\\frac{\\lambda}{2}} \\nabla_y \\end{bmatrix}^{-1} \\right|\\right|_2 \u5b50\u95ee\u9898\u4e8c (d_x^{k+1},d_y^{k+1})=\\min_{d_x,d_y}\\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 (d_x^{k+1},d_y^{k+1})=\\min_{d_x,d_y}\\left|\\left|\\left(d_x,d_y\\right)\\right|\\right|_2+\\frac{\\lambda}{2}||d_x-\\nabla_xm-b_x||^2_2+\\frac{\\lambda}{2}||d_y-\\nabla_y m-b_y||^2_2 \u53ef\u4ee5\u901a\u8fc7 \u5e7f\u4e49\u9608\u503c\u51fd\u6570 \u6c42\u89e3\uff0c\u53c2\u8003\u8bba\u6587 A Fast Algorithm for Image Deblurring with Total Variation Regularization \u8fed\u4ee3\u8fc7\u7a0b\u4e3a d^{k+1}_x=\\max\\left(s^k-\\frac{1}{\\lambda},0\\right)\\frac{\\nabla_xm^k+b^k_x}{s^k} \\\\ d^{k+1}_y=\\max\\left(s^k-\\frac{1}{\\lambda},0\\right)\\frac{\\nabla_ym^k+b^k_y}{s^k} \\\\ s^k=\\sqrt{|\\nabla_xm^k+b^k_x|^2+|\\nabla_ym^k+b^k_y|^2} d^{k+1}_x=\\max\\left(s^k-\\frac{1}{\\lambda},0\\right)\\frac{\\nabla_xm^k+b^k_x}{s^k} \\\\ d^{k+1}_y=\\max\\left(s^k-\\frac{1}{\\lambda},0\\right)\\frac{\\nabla_ym^k+b^k_y}{s^k} \\\\ s^k=\\sqrt{|\\nabla_xm^k+b^k_x|^2+|\\nabla_ym^k+b^k_y|^2}","title":"Split-Bregman\u65b9\u6cd5"},{"location":"SeismicInversion/Optimization/#_7","text":"\u4ee5\u4e0a\u7684\u4f18\u5316\u65b9\u6cd5\u90fd\u53ea\u9488\u5bf9\u4e8e\u5355\u9053\uff0c\u4f46\u5730\u9707\u6570\u636e\u5f80\u5f80\u9700\u8981\u591a\u9053\u8fdb\u884c\u5904\u7406 \u76ee\u524d\u672c\u4eba\u5b9e\u73b0\u7684\u65b9\u6cd5\u53ea\u662f\u5faa\u73af\u8fdb\u884c\u4e0d\u540c\u9053\u7684\u5355\u9053\u53cd\u6f14\uff0c\u672a\u5b8c\u5f85\u7eed\u3002\u3002\u3002","title":"\u591a\u9053\u53cd\u6f14"},{"location":"SeismicInversion/PaperNotes/","text":"PAPER1: Approximations to the Zoeppritz equations and their use in AVO analysis \u00b6 Zoeppritz\u65b9\u7a0b\u7684\u8fd1\u4f3c\u503c\u53ca\u5176\u5728AVO\u5206\u6790\u4e2d\u7684\u5e94\u7528(AVO:Amplitude variation with offset) \u6458\u8981 \u00b6 \u63a8\u5bfc\u4e86p-p\u6ce2\u53cd\u5c04\u548c\u900f\u5c04\u7cfb\u6570(( T_{pp},R_{pp} T_{pp},R_{pp} ))\u4e0e\u5f39\u6027\u53c2\u6570\u76f8\u5bf9\u5bf9\u6bd4\u5ea6\u7684\u4e8c\u6b21\u8868\u8fbe\u5f0f\u3002\u63d0\u4f9b\u4e86Zoeppritz\u65b9\u7a0b\u7684\u66ff\u4ee3\u8fd1\u4f3c\u503c\uff0c p^2,p^4 p^2,p^4 \u9879\u7684\u663e\u5f0f\u7cfb\u6570.\u8fd9\u662f\u4e00\u4e2a\u7d27\u51d1\u7684\u5f62\u5f0f\u3002 \u4f20\u7edf\u7ebf\u6027\u8fd1\u4f3c\u53ea\u80fd\u53cd\u6f14\u4e24\u4e2a\u5f39\u6027\u7cfb\u6570\u3002\u901a\u8fc7\u4e8c\u9636\u8fd1\u4f3c\uff0cFrechet\u77e9\u9635\u5bf9\u4e09\u4e2a\u5f39\u6027\u53c2\u6570\u7684\u6761\u4ef6\u6570\u6bd4\u7ebf\u6027\u8fd1\u4f3c\u6709\u660e\u663e\u6539\u5584\u3002 (\u5f39\u6027\u5bf9\u6bd4\u9879\uff1ap\u6ce2\u5bf9\u6bd4,s\u6ce2\u5bf9\u6bd4\uff0c\u754c\u9762\u5904ps\u6bd4\u503c,\u5373 \\varDelta\\alpha / \\alpha,\\varDelta\\beta/\\beta,\\alpha/\\beta \\varDelta\\alpha / \\alpha,\\varDelta\\beta/\\beta,\\alpha/\\beta \u5f39\u6027\u53c2\u6570\uff1a\u4f53\u5bc6\u5ea6\uff0cP\u6ce2\u901f\u5ea6\uff0cS\u6ce2\u901f\u5ea6) those quadratic approximations can be used directly with amplitude information to estimate not only two but three parameters: P-wave velocity contrast, S-wave velocity contrast, and the ratio of S-wave and P-wave velocities at an interface. \u524d\u8a00 \u00b6 \u4f20\u7edfAVO \u5047\u8bbe\uff1a\u9664\u53cd\u5c04\u7cfb\u6570\u5916\uff0c\u6240\u6709\u7684\u4e0e\u504f\u79fb\u76f8\u5173\u7684\u632f\u5e45\u6548\u5e94\u90fd\u88ab\u77eb\u6b63\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f39\u6027\u53c2\u6570\u7684\u5bf9\u6bd4\u53ef\u4ee5\u4ece\u53cd\u5c04\u632f\u5e45\u7406\u8bba\u4e0a\u4f30\u8ba1\u3002\u9700\u8981\u8003\u8651\uff08\u53cd\u5c04\u4e0e\u4f20\u8f93\u7cfb\u6570\uff0c\u7ed3\u6784\u5f71\u54cd\uff09 \u5728\u53cd\u6f14\u4e2d\uff0c\u901a\u5e38\u91c7\u7528 \u7cbe\u786e \u7684Zoeppritz\u65b9\u7a0b\u6765\u8ba1\u7b97\u53cd\u5c04\u548c\u6298\u5c04\u7cfb\u6570\u3002\u8fd1\u4f3c\u7684\u597d\u5904\u662f\u632f\u5e45\u7684\u4ee5\u5f39\u6027\u53c2\u6570\u4e3a\u57fa\u7840\u7684Frechet\u5bfc\u6570\u7684\u7075\u654f\u5ea6\u77e9\u9635\u53ef\u4ee5\u89e3\u6790\u8ba1\u7b97\u51fa\u6765\u3002 Ursin and Dahl (1992) \u6cf0\u52d2\u7ea7\u6570\u7684\u7cfb\u6570\u76f4\u63a5\u7531\u4ecb\u8d28\u53c2\u6570\u8ba1\u7b97((not from the vertical slownesses)\uff0c\u7f3a\u70b9\uff1a\u5197\u957f\uff0c\u53ea\u80fd\u8ba1\u7b97\u673a\u5b9e\u73b0 Mallick (1993) \u4e5f\u505a\u4e86 R_{pp} R_{pp} \u8fd1\u4f3c\uff0c\u7701\u7565\u4e86\u4e8c\u6b21\u9879 Zoeppritz\u65b9\u7a0b \u00b6 R_{pp}(p)=\\frac{E+Fp^2+Gp^4-Dp^6}{A+Bp^2+Cp^4+Dp^6}\\tag {1} R_{pp}(p)=\\frac{E+Fp^2+Gp^4-Dp^6}{A+Bp^2+Cp^4+Dp^6}\\tag {1} T_{pp}(p)=\\frac{H+Ip^2}{A+Bp^2+Cp^4+Dp^6}\\tag {2} T_{pp}(p)=\\frac{H+Ip^2}{A+Bp^2+Cp^4+Dp^6}\\tag {2} p\u4e3a\u5c04\u7ebf\u7cfb\u6570\uff0c\u5c06\u5206\u6bcd\u5728 p=0 p=0 \u5904\u8fdb\u884c\u56db\u9636\u6cf0\u52d2\u5c55\u5f00 ... ... ... R_f R_f \u4e3a\u6d41\u4f53-\u6d41\u4f53\u53cd\u5c04\u7cfb\u6570\uff0c\u5373S\u6ce2\u5728\u4e24\u4ecb\u8d28\u4e2d\u901f\u5ea6\u4e3a0\u65f6\u7684\u53cd\u5c04\u7cfb\u6570\uff0c\u6b64\u65f6\u4f20\u8f93\u7cfb\u6570\u4e3a T_f=1-R_f T_f=1-R_f \u4f2a\u56db\u6b21\u8fd1\u4f3c(\u672c\u6587\u65b9\u6cd5) \u00b6 R_{pp}\\approx\\left[\\frac{1}{2}-2\\left(\\frac{\\beta}{\\alpha}\\right)^2\\sin^2\\theta\\right]\\frac{\\varDelta\\rho}{\\rho}+\\frac{1}{2}\\sec^2\\theta\\frac{\\varDelta\\alpha}{\\alpha}\\\\ -4\\left(\\frac{\\beta}{\\alpha}\\right)^2\\sin^2\\theta\\frac{\\varDelta\\beta}{\\beta}+\\left(\\frac{\\beta}{\\alpha}\\right)^3\\cos\\theta\\sin^2\\theta\\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2\\tag {3} R_{pp}\\approx\\left[\\frac{1}{2}-2\\left(\\frac{\\beta}{\\alpha}\\right)^2\\sin^2\\theta\\right]\\frac{\\varDelta\\rho}{\\rho}+\\frac{1}{2}\\sec^2\\theta\\frac{\\varDelta\\alpha}{\\alpha}\\\\ -4\\left(\\frac{\\beta}{\\alpha}\\right)^2\\sin^2\\theta\\frac{\\varDelta\\beta}{\\beta}+\\left(\\frac{\\beta}{\\alpha}\\right)^3\\cos\\theta\\sin^2\\theta\\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2\\tag {3} T_{pp}\\approx 1-\\frac{1}{2}\\frac{\\varDelta\\rho}{\\rho}+\\frac{1}{2}(\\tan^2\\theta-1)\\frac{\\varDelta\\alpha}{\\alpha}-\\left(\\frac{\\beta}{\\alpha}\\right)^3\\cos\\theta\\sin^2\\theta\\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2\\tag{4} T_{pp}\\approx 1-\\frac{1}{2}\\frac{\\varDelta\\rho}{\\rho}+\\frac{1}{2}(\\tan^2\\theta-1)\\frac{\\varDelta\\alpha}{\\alpha}-\\left(\\frac{\\beta}{\\alpha}\\right)^3\\cos\\theta\\sin^2\\theta\\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2\\tag{4} \u8fdb\u4e00\u6b65\u8fd1\u4f3c\uff0c\u5c06(5)\u5e26\u5165(3)(4) \\frac{\\varDelta\\rho}{\\rho}\\approx\\frac{1}4\\frac{\\varDelta\\alpha}{\\alpha}\\tag{5} \\frac{\\varDelta\\rho}{\\rho}\\approx\\frac{1}4\\frac{\\varDelta\\alpha}{\\alpha}\\tag{5} \u7ebf\u6027\u8fd1\u4f3c\u65b9\u6cd5 \u5ffd\u7565\u4e86 \\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2 \\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2 \u5bf9\u6bd4 \u00b6 \u4f2a\u56db\u6b21\u8fd1\u4f3c\u5f97\u5230\u7684 R_{pp}\u4e0eT_{pp} R_{pp}\u4e0eT_{pp} \u6bd4\u7ebf\u6027\u8fd1\u4f3c\u66f4\u63a5\u8fd1\u7cbe\u786e\u7684zoeppritz\u7ed3\u679c \u8fd0\u7528\u5728\u53cd\u6f14\u95ee\u9898\u4e2d\uff0c\u79bb\u6563\u5316\u8fd0\u7b97\u7b26L\u7684\u7279\u5f81\u503c\u66f4\u5927 \u4f2a\u56db\u6b21\u8fd1\u4f3c\u7531\u66f4\u5c0f\u7684\u6761\u4ef6\u6570\uff08conditio number\uff09 \u5373\u6700\u5927\u7279\u5f81\u503c\u4e0e\u6700\u5c0f\u7279\u5f81\u503c\u4e4b\u6bd4 \u7ed3\u8bed \u00b6 \u5f15\u5165\u4f2a\u56db\u6b21\u903c\u8fd1\u4ee5\u5c04\u7ebf\u53c2\u6570p\u4e3a\u53c2\u6570\u7684p-p\u6ce2\u7684\u53cd\u5c04\u548c\u900f\u5c04\u7cfb\u6570\u3002\u8fd9\u4e9b\u8fd1\u4f3c\u5177\u6709\u76f8\u5f53\u7d27\u51d1\u7684\u5f62\u5f0f\uff0c\u5176\u4e2dp2\u548cp4\u9879\u7684\u7cfb\u6570\u7528\u5782\u76f4\u6162\u5ea6\u8868\u793a PAPER2: AVO inversion using the Zoeppritz equation for PP reflections \u00b6 \u5229\u7528Zoeppritz\u65b9\u7a0b\u53cd\u6f14PP\u53cd\u5c04 summary \u00b6 \u5728\u4f17\u591aZoeppritz\u8fd1\u4f3c\u65b9\u6cd5\u4e2d\uff0c\u504f\u79fb\u8ddd\u79bb\u88ab\u9650\u5236\u5230\u5c0f\u6216\u4e2d\u7b49\uff0c\u89d2\u5ea6\u88ab\u9650\u5236\u5230\u5f88\u5c0f\uff0c\u53ef\u9006\u5f39\u6027\u53c2\u6570\u4e5f\u88ab\u9650\u5236\u5230\u4e24\u5230\u4e09\u4e2a\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u7cbe\u786e\u7684Zoeppritz\u65b9\u7a0b\u5bf9\u65e0\u4e34\u754c\u89d2(\u5927\u89d2\u5ea6)\u7684\u53cd\u5c04\u8fdb\u884cAVO\u53cd\u6f14\u3002\u5e76\u8fdb\u884c\u4e86\u5bf9\u6bd4\u3002\u6700\u5c0f\u4e8c\u4e58\u632f\u5e45\u62df\u5408\u53ef\u6c42\u51fa\u53cd\u5c04\u9762\u7684\u5bc6\u5ea6\u6bd4\u548c\u4e09\u4e2a\u901f\u5ea6\u6bd4\u3002\u8be5\u7b97\u6cd5\u9002\u7528\u4e8e\u957f\u504f\u7f6ePP\u53cd\u5c04\u7684\u53cd\u6f14\u3002 \u524d\u8a00 \u00b6 \u53cd\u6f14\u901a\u5e38\u901a\u8fc7\u6700\u5c0f\u4e8c\u4e58\u4f7f\u89c2\u6d4b\u503c\u548c\u5408\u6210AVO\u6570\u636e\u4e4b\u95f4\u7684\u5dee\u5f02\u6700\u5c0f\u5316\uff0c\u89c2\u6d4b\u6570\u636e\u8f93\u5165\u4e4b\u524d\uff0c\u5e94\u8fdb\u884c\u9884\u5904\u7406\uff0c\u5373\u5bf9\u5305\u62ec\u51e0\u4f55\u6269\u6563\uff0c\u8870\u51cf\uff0c\u8272\u6563\u548c\u4f20\u8f93\u635f\u5931\u8fdb\u884c\u77eb\u6b63(\u9664\u4e86RCs:reflection coefficients) \u504f\u79fb\u91cf\u8d8a\u5927\uff0c\u5165\u5c04\u89d2\u8303\u56f4\u8d8a\u5e7f,\u66f4\u5927\u7684\u89d2\u5ea6\u8303\u56f4\u4f7f\u53cd\u6f14\u7a33\u5b9a\uff0c\u53cd\u6f14\u53c2\u6570\u66f4\u591a\uff0c\u6240\u4ee5\u91cd\u70b9\u662f\u5982\u4f55\u5904\u7406\u957f\u504f\u79fb\u53cd\u5c04\u6570\u636e\u3002\u957f\u504f\u79fb\u53cd\u5c04\u4e0d\u4e00\u5b9a\u5305\u62ec\u5e7f\u89d2\u53cd\u5c04\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u5e7f\u89d2\u53cd\u5c04\u6765\u81ea\u8fd1\u4e34\u754c\u5165\u5c04\u89d2\u548c\u540e\u4e34\u754c\u5165\u5c04\u89d2\u3002\u4ea7\u751f\u5e7f\u89d2\u53cd\u5c04\u9700\u8981\u5728\u76f8\u5bf9\u8f83\u6d45\u7684\u6df1\u5ea6\u5904\u6709\u8f83\u5927\u6b63\u901f\u5ea6\u5bf9\u6bd4\u7684\u6a21\u578b\uff0c\u9700\u8981\u7403\u6ce2\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u3002 \u672c\u6587\u8003\u8651\u957f\u504f\u79fb\u975e\u4e34\u754cPP\u53cd\u5c04\uff0c\u6700\u7ec8\u5f97\u5230 - [x] \u7cbe\u786e\u7684Zoepptriz\u5f97\u5230\u7684\u5e73\u9762\u6ce2RCs\u5bf9\u7403\u6ce2\u53cd\u5c04\u957f\u504f\u79fb\u6570\u636e\u4e5f\u662f\u51c6\u786e\u7684 - [x] \u7cbe\u786e\u7684Zoepptriz\u65b9\u7a0b\u80fd\u7528\u5728\u4f20\u7edfAVO\u4e2d AVO Modeling \u00b6 \u7cbe\u786eZoepptriz\u65b9\u7a0b \u00b6 R_{pp}=\\frac{Q^2-r_4T_0T_3+r_4T_1T_2-(1+Q)^2T_0T_2+A-B}{Q^2+r_4T_0T_3+r_4T_1T_2+(1+Q)^2T_0T_2+A+B} R_{pp}=\\frac{Q^2-r_4T_0T_3+r_4T_1T_2-(1+Q)^2T_0T_2+A-B}{Q^2+r_4T_0T_3+r_4T_1T_2+(1+Q)^2T_0T_2+A+B} \u6709\u9650\u5fae\u5206 \u00b6 \u6211\u4eec\u9009\u62e9\u4e00\u79cd\u6709\u9650\u5dee\u5206\u89e3\u6765\u751f\u6210\u7cbe\u786e\u7684AVO\u89c2\u6d4b\u6570\u636e\uff0c\u7528\u4e8e\u6d4b\u8bd5\u7684\u957f\u504f\u79fb\u7cbe\u5ea6PP RCs\u3002\u6b63\u6f14\u5efa\u6a21\u91c7\u75288\u9636\u4ea4\u9519\u7f51\u683c\u5f39\u6027\u52a8\u529b\u5b66\u65b9\u7a0b\u7684FD\u89e3\u3002 \u8fd1\u4f3c \u00b6 \u8fd1\u4f3c\u7684\u65b9\u6cd5\u9002\u7528\u7684\u89d2\u5ea6\u90fd\u5f88\u5c0f\uff0c\u7ebf\u6027\u8fd1\u4f3c\u53ea\u9002\u7528\u4e8e\u5c0f\u4e8e20\u7684\u89d2\u5ea6\uff0c\u4f2a\u56db\u6b21\u53ea\u9002\u7528\u4e8e\u5c0f\u4e8e50\u7684\u89d2\u5ea6\uff0c\u6240\u4ee5\u7cbe\u786e\u7684Zoepptriz\u6709\u4f18\u52bf\u3002 AVO Inversion \u00b6 \u901a\u8fc7\u7531\u89d2\u5ea6\u51b3\u5b9a\u7684PP\u53cd\u5c04\u7cfb\u6570\uff0c\u53ea\u80fd\u9884\u6d4b\u51fa\u4e09\u4e2a\u901f\u5ea6\u7684\u6bd4\u503c\u4e0e\u5bc6\u5ea6\u6bd4\u503c\u3002\u4e14\u56db\u4e2a\u6bd4\u503c\u4e0d\u72ec\u7acb\u3002 r_1,r_2,r_3\u7531\\alpha_! r_1,r_2,r_3\u7531\\alpha_! \u5f52\u4e00\u5316\uff0c r_4\u7531\\rho_1 r_4\u7531\\rho_1 \u5f52\u4e00\u5316\uff0c\u6240\u4ee5\u5c06 \\alpha_1,\\rho_1 \\alpha_1,\\rho_1 \u5f53\u4f5c\u5148\u9a8c\uff0c\u53ef\u901a\u8fc7\u6570\u5b66\u5de5\u5177(Mathematica)\u8ba1\u7b97frechet\u5bfc\u6570\u77e9\u9635\uff0c\u5728\u5bfc\u6570\u8ba1\u7b97\u4e2d\uff0c\u9700\u8981\u786e\u5b9a\u6700\u4f73\u6270\u52a8\uff0c\u8fd9\u4e2a\u6270\u52a8\u8981\u591f\u5c0f\u80fd\u5230\u6355\u83b7\u5c40\u90e8\u68af\u5ea6\uff0c\u4f46\u4e5f\u4e0d\u80fd\u5c0f\u5230\u5f15\u8d77\u9ad8\u9891\u4f2a\u5f71\u3002 \u7ed3\u8bed \u00b6 \u4e00\u79cd\u65b0\u7684AVO\u53cd\u6f14\u7b97\u6cd5\uff0c\u4f7f\u7528 \u7cbe\u786e\u7684Zoeppritz\u65b9\u7a0b \uff0c\u91c7\u7528\u7cbe\u786e\u7684\u957f\u504f\u79fbPP\u53cd\u5c04(\u516b\u9636FD\u6a21\u578b)\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e86\u9a8c\u8bc1\u3002 zoepptriz\u5047\u8bbe\u7684\u5e73\u9762\u6ce2RCs\u5728\u4e34\u754c\u89d2\u9644\u8fd1\u4e0d\u9002\u7528\uff0c\u56e0\u6b64\u4e0a\u8ff0\u6a21\u578b\u5177\u6709\u8870\u51cf\u901f\u5ea6\u5bf9\u6bd4\uff0c\u56e0\u6b64\u89c2\u6d4b\u6570\u636e\u4e2d\u6ca1\u6709\u4e34\u754c\u53cd\u5c04\u3002\u5bf9\u4e8e\u5177\u6709\u6b63\u5bf9\u6bd4\u7684\u6a21\u578b\uff0c\u53ea\u8981\u5229\u7528\u7684\u89d2\u5ea6\u8303\u56f4\u4e0d\u5728\u4e34\u754c\u89d2\u7684\u7b2c\u4e00\u4e2a\u83f2\u6d85\u5c14\u5e26\u5185\uff0c\u8be5\u7b97\u6cd5\u4ecd\u7136\u6709\u6548\u3002 PAPER3 Constrained nonlinear amplitude variation with offset inversion using Zoeppritz equations \u00b6 \u5229\u7528\u504f\u7f6e\u53cd\u6f14\u7ea6\u675f\u975e\u7ebf\u6027\u632f\u5e45\u53d8\u5316Zoeppritz\u65b9\u7a0b: \u8bba\u6587\u94fe\u63a5 \u6458\u8981 \u00b6 \u5f00\u53d1\u4e86\u4e00\u79cd\u6709\u6548\u7684\u975e\u7ebf\u6027AVO\u524d\u4e34\u754c\u53cd\u5c04\u53cd\u6f14\u7b97\u6cd5\uff0c\u4f7f\u7528\u7cbe\u786e\u7684\u591a\u901a\u9053\u548c\u591a\u754c\u9762Zoeppritz\u65b9\u7a0b\u540c\u65f6\u4f30\u8ba1p\u6ce2\u901f\u5ea6\uff0cs\u6ce2\u901f\u5ea6\u548c\u5bc6\u5ea6\u3002\u5728\u6c42\u89e3\u6b63\u6f14\u975e\u7ebf\u6027\u6a21\u578b\u65f6\uff0c\u91c7\u7528\u5168\u53d8\u5206\u7ea6\u675f\u514b\u670d\u4e86\u75c5\u6001\u6027\uff0c\u4fdd\u6301\u4e86\u53c2\u6570\u7a7a\u95f4\u4e2d\u754c\u9762\u7684\u9510\u5ea6\u3002 We have developed an efficient algorithm for nonlinear AVO inversion of precritical reflections using the exact Zoeppritz equations in multichannel and multi-interface form for simultaneous estimation of the P-wave velocity, S-wave velocity, and density. The total variation constraint is used to overcome the ill-posedness while solving the forward nonlinear model and to preserve the sharpness of the interfaces in the parameter space. \u524d\u8a00 \u00b6 \u5229\u7528AVO\u7684\u53e0\u524d\u5730\u9707\u53cd\u6f14\u53ef\u4ee5\u5bf9\u5f39\u6027\u53c2\u6570\u5373P\u6ce2\u901f\u5ea6(\u03b1)\u3001S\u6ce2\u901f\u5ea6(\u03b2)\u548c\u5bc6\u5ea6(\u03c1)\u7ed9\u51fa\u53ef\u9760\u7684\u4f30\u8ba1\u3002AVO\u4e3b\u8981\u53d7Zoeppritz\u65b9\u7a0b\u51b3\u5b9a\uff0c\u8be5\u65b9\u7a0b\u63cf\u8ff0\u4e86\u754c\u9762\u5728\u7ed9\u5b9a\u89d2\u5ea6\u7684\u53cd\u5c04\u7387RC\u4e0e\u754c\u9762\u4e24\u4fa7\u4ecb\u8d28\u7684\u5f39\u6027\u7279\u6027\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\u5173\u7cfb\u3002\u7136\u800c\u8fd9\u4e2a\u65b9\u7a0b\u9488\u5bf9\u5927\u5c3a\u5ea6\u3001\u591a\u5c42\u6b21\u3001\u591a\u7ef4\u7684\u5730\u7403\u6a21\u578b\uff0c\u5f88\u96be\u5177\u4f53\u6c42\u89e3\u3002\u6240\u4ee5\u5f88\u591a\u7814\u7a76\u63d0\u51fa\u4e86Zoepptriz\u7684\u5404\u79cd\u8fd1\u4f3c\u3002\u5176\u4e2dAki and Richards (1980)\u7684\u7ebf\u6027\u8fd1\u4f3c\u7528\u7684\u6700\u5e7f\uff0c\u5c3d\u7ba1\u7b80\u5316\u4e86\u8ba1\u7b97\uff0c\u4f46\u662f\u8fd9\u4e9b\u8fd1\u4f3c\u65b9\u6cd5\u53ea\u9002\u7528\u4e8e\u5f39\u6027\u7279\u5f81\u5bf9\u6bd4\u8f83\u5c0f\u7684\u754c\u9762\uff0c\u8f83\u5c0f\u5165\u5c04\u89d2\u7684\u60c5\u51b5\u3002\u4e4b\u540e\u7684\u7814\u7a76\u57fa\u4e8e\u7cbe\u786e\u7684Zoepptriz\u65b9\u7a0b\u8fdb\u884c\u975e\u4e34\u754c\u89d2\u7684AVO\u53cd\u6f14\uff0c\u901a\u8fc7\u8fed\u4ee3\u7684\u65b9\u6cd5\u89e3\u51b3\uff0c\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u6c42\u89e3\u5f39\u6027\u7cfb\u6570\u3002 \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u9ad8\u6548\u7684\u5168\u53d8\u5206\u7b97\u6cd5(TV)\u57fa\u4e8eZoeppritz\u65b9\u7a0b\u7684\u6b63\u5219\u5316\u975e\u7ebf\u6027\u591a\u754c\u9762AVO\u53cd\u6f14\u3002\u4e0e\u6807\u51c6AVO\u53cd\u6f14\u6280\u672f\u7c7b\u4f3c\uff0c\u8003\u8651\u4e86\u9884\u4e34\u754c\u89d2\u7684\u53cd\u5c04\u54cd\u5e94;\u5229\u7528\u7ebf\u6027\u8fd1\u4f3c\u7684\u7b80\u6613\u6027\uff0c\u5f53\u53cd\u5c04\u632f\u5e45\u4e0e\u5f39\u6027\u6027\u8d28\u6216\u5176\u76f8\u53cd\u6027\u8d28\u6210\u7ebf\u6027\u5173\u7cfb\u65f6\uff0c\u4f7f\u7528\u7ebf\u6027\u8fd1\u4f3c\u6c42\u89e3\u3002 \u901a\u8fc7(Levenberg, 1944)\u7b97\u6cd5\u6c42\u89e3\u975e\u7ebf\u6027Zoeppritz\u65b9\u7a0b\uff0c\u540c\u65f6\u4f7f\u7528(\u5168\u5c40)\u7ebf\u6027\u903c\u8fd1\u8ba1\u7b97\u3002\u65b9\u6cd5\u91cd\u5199\u4e3a \u7b2c\u4e00\u6b65\u5bf9\u6a21\u578b\u53c2\u6570\u8fdb\u884c\u66f4\u65b0 \u7b2c\u4e8c\u6b65\u5bf9\u5408\u6210\u6570\u636e\u8fdb\u884c\u66f4\u65b0 \u8fd9\u4e2a\u7b56\u7565\u53ef\u5f3a\u52a0\u7ea6\u675f\uff0c\u4ee5\u4fdd\u8bc1\u53c2\u6570\u7a7a\u95f4\u4e2d\u754c\u9762\u7684\u5757\u72b6\u6027\u8d28\u3002 \u901a\u8fc7(Goldstein and Osher, 2009)\u8fed\u4ee3\u8fc7\u7a0b\u89e3\u51b3\u6a21\u578b\u66f4\u65b0\u65f6\u7684\u6b63\u5219\u5316\u95ee\u9898\u3002 Zoeppritz equations \u00b6 Zoeppritz\u4e8e1919\u5e74\u63d0\u51fa\u7684\u65b9\u7a0b \\begin{align}&\\left[ \\begin{matrix} \\cos(\\theta)&-\\sin(\\delta_r)&\\cos(\\theta_t)&\\sin(\\delta_t)\\\\ \\sin(\\theta)&\\cos(\\delta_r)&-\\sin(\\theta_t)&\\cos(\\delta_t)\\\\ -\\cos(2\\delta_r)&\\frac{\\beta_1}{\\alpha_1}\\sin(2\\delta_r)&\\frac{\\rho_2\\alpha_2}{\\rho_1\\alpha_1}\\cos(2\\delta_t)&\\frac{\\rho_2\\beta_2}{\\rho_1\\alpha_1}\\sin(2\\delta_t)\\\\ \\sin(2\\theta)&\\frac{\\alpha_1}{\\beta_1}\\cos(2\\delta_r)&\\frac{\\rho_2\\beta_2^2\\alpha_2}{\\rho_1\\beta_1^2\\alpha_1}\\sin(2\\theta_t)&-\\frac{\\rho_2\\beta_2\\alpha_1}{\\rho_1\\beta_1\\beta_1}\\cos(2\\delta_t) \\end{matrix} \\right]\\notag\\\\ &\\pmb\\times \\left[\\begin{matrix} R_{pp}\\\\ R_{ps}\\\\ T_{pp}\\\\ T_{ps} \\end{matrix}\\right] =\\left[\\begin{matrix} \\cos(\\theta)\\\\ \\sin(\\theta)\\\\ \\cos(2\\delta_r)\\\\ \\sin(2\\theta) \\end{matrix}\\right]\\end{align} \\begin{align}&\\left[ \\begin{matrix} \\cos(\\theta)&-\\sin(\\delta_r)&\\cos(\\theta_t)&\\sin(\\delta_t)\\\\ \\sin(\\theta)&\\cos(\\delta_r)&-\\sin(\\theta_t)&\\cos(\\delta_t)\\\\ -\\cos(2\\delta_r)&\\frac{\\beta_1}{\\alpha_1}\\sin(2\\delta_r)&\\frac{\\rho_2\\alpha_2}{\\rho_1\\alpha_1}\\cos(2\\delta_t)&\\frac{\\rho_2\\beta_2}{\\rho_1\\alpha_1}\\sin(2\\delta_t)\\\\ \\sin(2\\theta)&\\frac{\\alpha_1}{\\beta_1}\\cos(2\\delta_r)&\\frac{\\rho_2\\beta_2^2\\alpha_2}{\\rho_1\\beta_1^2\\alpha_1}\\sin(2\\theta_t)&-\\frac{\\rho_2\\beta_2\\alpha_1}{\\rho_1\\beta_1\\beta_1}\\cos(2\\delta_t) \\end{matrix} \\right]\\notag\\\\ &\\pmb\\times \\left[\\begin{matrix} R_{pp}\\\\ R_{ps}\\\\ T_{pp}\\\\ T_{ps} \\end{matrix}\\right] =\\left[\\begin{matrix} \\cos(\\theta)\\\\ \\sin(\\theta)\\\\ \\cos(2\\delta_r)\\\\ \\sin(2\\theta) \\end{matrix}\\right]\\end{align} Aki and Richards equation \u00b6 R_{pp}=\\zeta(\\overline\\theta)\\frac{\\varDelta\\alpha}{\\overline\\alpha}+\\eta(\\overline\\theta)\\frac{\\varDelta\\beta}{\\overline\\beta}+\\xi(\\overline\\theta)\\frac{\\varDelta\\rho}{\\overline\\rho}\\tag2 R_{pp}=\\zeta(\\overline\\theta)\\frac{\\varDelta\\alpha}{\\overline\\alpha}+\\eta(\\overline\\theta)\\frac{\\varDelta\\beta}{\\overline\\beta}+\\xi(\\overline\\theta)\\frac{\\varDelta\\rho}{\\overline\\rho}\\tag2 \u4e0e\u5f39\u6027\u53c2\u6570\u6bd4\u503c\u5448\u7ebf\u6027\u5173\u7cfb Linearized equation \u00b6 \u5bf9\u4e0a\u5f0f\u8fdb\u4e00\u6b65\u7b80\u5316\uff0c\u901a\u8fc7\u4e09\u4e2a\u8fd1\u4f3c \\kappa=\\frac12(\\frac{\\beta_1^2}{\\alpha_1^2}+\\frac{\\beta_2^2}{\\alpha_2^2})\\approx\\frac{\\beta^2}{\\alpha^2} \\kappa=\\frac12(\\frac{\\beta_1^2}{\\alpha_1^2}+\\frac{\\beta_2^2}{\\alpha_2^2})\\approx\\frac{\\beta^2}{\\alpha^2} , \\frac{\\varDelta x}{\\overline x}\\approx\\varDelta\\ln x \\frac{\\varDelta x}{\\overline x}\\approx\\varDelta\\ln x , \u5e73\u5747\u89d2\u5ea6 \\overline\\theta \\overline\\theta \u8fd1\u4f3c\u4e8e\u5165\u5c04\u89d2 \\theta \\theta ,\u5f97\u5230 R_{pp}=\\zeta(\\theta)\\varDelta\\ln(\\alpha)+\\eta(\\theta)\\varDelta\\ln(\\beta)+\\xi(\\theta)\\varDelta\\ln(\\rho)\\tag3 R_{pp}=\\zeta(\\theta)\\varDelta\\ln(\\alpha)+\\eta(\\theta)\\varDelta\\ln(\\beta)+\\xi(\\theta)\\varDelta\\ln(\\rho)\\tag3 \u8fd9\u79cd\u8fd1\u4f3c\u5728\u5c0f\u89d2\u5ea6\u65f6\u51c6\u786e\uff0c\u4f46\u89d2\u5ea6\u589e\u5927\u65f6\u4f1a\u53d8\u5f97\u4e0d\u51c6\u786e\u3002 NONLINEAR AVO INVERSION \u975e\u7ebf\u6027AVO\u53cd\u6f14 \u00b6 \u8fed\u4ee3\uff0c\u7c7b\u4f3c\u4e8e\u6700\u5c0f\u4e8c\u4e58\u6cd5 \\bold X^{k+1}=\\bold X^k+(\\bold F^T\\bold F+\\lambda \\bold I)^{-1}\\bold F^T(\\bold Y-f(e^{\\bold X^k})) \\bold X^{k+1}=\\bold X^k+(\\bold F^T\\bold F+\\lambda \\bold I)^{-1}\\bold F^T(\\bold Y-f(e^{\\bold X^k})) \u4f4e\u9891\u6a21\u578b\u901a\u5e38\u7531\u53e0\u52a0\u901f\u5ea6\u6216\u6d4b\u4e95\u66f2\u7ebf\u8ba1\u7b97\u5f97\u51fa\uff0c\u5e76\u7528\u4f5c\u5148\u9a8c\u4fe1\u606f\u3002 TV regularization \u5168\u53d8\u5206\u6b63\u5219\u5316 \u00b6 Connection to the Bregman iterative method \u00b6 Model update via split Bregman technique \u00b6 \u5728\u53cd\u6f14\u8fc7\u7a0b\u4e2d\u5bf9\u5f39\u6027\u53c2\u6570\u8fdb\u884c\u4e0d\u540c\u7684\u52a0\u6743\uff0c\u8be5\u6743\u91cd\u63a7\u5236\u6bcf\u4e2a\u53c2\u6570\u7684\u6536\u7f29/\u6b63\u5219\u5316\u91cf Stopping criterion \u505c\u6b62\u8fed\u4ee3\u51c6\u5219 \u00b6 based on Morozov\u2019s discrepancy principle, the iteration is stopped at the index k^* k^* \u5728\u8bef\u5dee\u9879\u4e0d\u662f\u968f\u673a\u7684\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u6839\u636e\u53ef\u7528\u6d4b\u4e95\uff08\u5730\u9762\u771f\u5b9e\u503c\uff09\u4e0e\u76f8\u5e94\u7684\u53cd\u5411\u53c2\u6570\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u5316\u6765\u786e\u5b9a\u6700\u4f18\u8fed\u4ee3\u3002 NUMERICAL IMPLEMENTATION \u00b6 Simple acoustic-impedance inversion \u58f0\u963b\u6297\u53cd\u6f14 \u00b6 \u57fa\u4e8eZoepptriz\u65b9\u7a0b Single-interface model \u00b6 \u7ed3\u8bed \u00b6 \u672c\u6587\u63d0\u51fa\u7684\u7b97\u6cd5\u4f7f\u7528\u4e86\u4e00\u4e2a\u5168\u5c40\u7ebf\u6027\u8fd1\u4f3c\uff1b\u56e0\u6b64\uff0c\u5b83\u4e0d\u9700\u8981\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\u8ba1\u7b97Jacobian/Hessian\u77e9\u9635\u3002\u4f7f\u5f97\u8be5\u7b97\u6cd5\u975e\u5e38\u7075\u6d3b\u548c\u9ad8\u6548 In this paper, we have introduced a new algorithm for nonlinear seismic AVO inversion, using the exact Zoeppritz equations , for simultaneous estimation of the P-wave velocity, S-wave velocity, and density. Our strategy uses the traditional Aki and Richards equation to construct the Jacobian matrix for solving the original nonlinear problem. This allowed for developing a very efficient algorithm for the TV-regularized nonlinear AVO inversion that is difficult to carry out by other means. The synthetic and field data demonstrated that the proposed algorithm can accurately invert the P-wave velocity, S-wave velocity, and density from precritical reflection data. The accuracy and efficiency of this method make it a promising algorithm for inverting large-scale seismic data sets PAPER4 \u57fa\u4e8e\u53e0\u524d\u5730\u9707\u53cd\u6f14\u7684\u6d41\u4f53\u8bc6\u522b\u65b9\u6cd5\u7814\u7a76\u8fdb\u5c55 \u00b6 PAPER5 AVO Inversion Based on Closed-Loop Multitask Conditional Wasserstein Generative Adversarial Network \u00b6 \u57fa\u4e8e\u95ed\u73af\u591a\u4efb\u52a1\u6761\u4ef6Wasserstein\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u7684avo\u53cd\u6f14 https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=10078923&tag=1 \u6458\u8981 \u00b6 \u6807\u8bb0\u6570\u636e\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u5730\u9707\u53cd\u6f14\u7ed3\u679c\u7cbe\u5ea6\u4e0b\u964d\uff0c\u751a\u81f3\u4f4e\u4e8e\u57fa\u4e8e\u4f20\u7edf\u53cd\u6f14\u65b9\u6cd5\u7684\u53cd\u6f14\u7ed3\u679c\u3002\u6b64\u5916\uff0c\u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u5730\u9707\u53cd\u6f14\u7ed3\u679c\u666e\u904d\u5b58\u5728\u6a2a\u5411\u4e0d\u8fde\u7eed\u6027\u3002\u9488\u5bf9\u8fd9\u4e9b\u95ee\u9898\uff0c\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u95ed\u73af\u591a\u4efb\u52a1\u6761\u4ef6Wasserstein\u751f\u6210\u5bf9\u6297\u7f51\u7edc( CMcWGAN )\u7684AVO\u53cd\u6f14\u65b9\u6cd5\uff0c\u5373\u57fa\u4e8e\u751f\u6210\u5bf9\u6297\u7f51\u7edc( GAN )\u7684AVO\u53cd\u6f14\u65b9\u6cd5\u3002 \u8fd9\u53ef\u4ee5\u540c\u65f6\u51c6\u786e\u53cd\u6f14\u4e09\u4e2a\u5f39\u6027\u53c2\u6570\uff0c\u540c\u65f6\uff0c\u5229\u7528\u5f39\u6027\u53c2\u6570\u7684\u4f4e\u9891\u4fe1\u606f\u4f5c\u4e3a\u6761\u4ef6\u8f93\u5165\uff0c\u7f13\u89e3\u4e86\u53cd\u6f14\u7ed3\u679c\u7684\u6a2a\u5411\u4e0d\u8fde\u7eed\u95ee\u9898\u3002 \u76f8\u8f83\u4e8e\u4f20\u7edfAVO\u53cd\u6f14\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u7cbe\u5ea6\u548c\u9c81\u68d2\u6027 INTRODUCTION \u00b6 AVO\u53cd\u6f14\u53ef\u4ee5\u6709\u6548\u5730\u9884\u6d4b\u5730\u4e0b\u4ecb\u8d28\u7684\u5f39\u6027\u53c2\u6570\uff0c\u4e3a\u50a8\u5c42\u9884\u6d4b\u548c\u6d41\u4f53\u8bc6\u522b\u63d0\u4f9b\u53ef\u9760\u7684\u7406\u8bba\u4f9d\u636e AVO\u53cd\u6f14\u65b9\u6cd5\u7684\u53d1\u5c55\uff1a - Zoeppritz\u65b9\u7a0b\u53ca\u5176\u8fd1\u4f3c - \u52a0\u6743\u53e0\u52a0\u6cd5\u5b9e\u73b0\u7ebf\u6027AVO\u53cd\u6f14 - \u8d1d\u53f6\u65af\u7f51\u7edc - \u57fa\u4e8eL1\u8303\u6570\u7684\u4f3c\u7136\u51fd\u6570\u548c\u5168\u53d8\u5dee( TV )\u6b63\u5219\u5316\u7ea6\u675f - \u57fa\u4e8e\u9a6c\u5c14\u79d1\u592b\u968f\u673a\u573a( MRF )\u7684\u6b63\u5219\u5316 - L\u66f2\u7ebf\u548c\u5e7f\u4e49\u4ea4\u53c9\u9a8c\u8bc1( GCV ) - \u65b9\u5411\u5168\u53d8\u5206( DTV )\u6b63\u5219\u5316 - \u673a\u5668\u5b66\u4e60 - \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc - \u7269\u7406\u5f15\u5bfc\u795e\u7ecf\u7f51\u7edc( PGNN ) - \u95ed\u73afCNN - \u751f\u6210\u5bf9\u6297\u7f51\u7edcGAN \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u95ed\u73af\u591a\u4efb\u52a1\u6761\u4ef6WGAN ( CMcWGAN )\u7684\u53cd\u6f14\u65b9\u6cd5\uff0c\u5b83\u5c06\u95ed\u73af\u6846\u67b6\u548c\u57fa\u4e8eGAN\u7684\u7f51\u7edc\u76f8\u7ed3\u5408\uff0c\u8bbe\u8ba1\u4e86GAN\u7684\u7ed3\u6784\uff0c\u5b9e\u73b0\u4e863\u4e2a\u5f39\u6027\u53c2\u6570\u540c\u65f6\u53cd\u6f14\uff0c\u53ef\u4ee5\u5b9e\u73b0\u591a\u4efb\u52a1\u5b66\u4e60\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u63d0\u9ad8\u7f51\u7edc\u8bad\u7ec3\u7684\u9c81\u68d2\u6027\uff0c\u4f7f\u7528Wasserstein\u8ddd\u79bb\u4ee3\u66ff\u4ea4\u53c9\u71b5( CE )\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u4f7f\u7528cGAN\u901a\u8fc7\u5f15\u5165\u4f4e\u9891\u4fe1\u606f\u5230\u7f51\u7edc\u7f13\u89e3\u6a2a\u5411\u4e0d\u8fde\u7eed\u6027\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u5177\u6709\u66f4\u9ad8\u7684\u53cd\u6f14\u7cbe\u5ea6\u548c\u66f4\u597d\u7684\u6297\u566a\u6027\u3002 CMcWGAN Framework and Neural Network Structure \u00b6 CMcWGAN\u7531\u4e24\u4e2a\u5b50\u7f51\u7edc\u7ec4\u6210\uff1a\u53cd\u6f14\u7f51\u7edc\u548c\u6b63\u6f14\u7f51\u7edc G\u4e3a\u53cd\u6f14\u7f51\u7edc\u751f\u6210\u5668\u3002DVp\u3001DVs\u548cD\u03c1\u5206\u522b\u4e3a\u7eb5\u6ce2\u901f\u5ea6\u3001\u6a2a\u6ce2\u901f\u5ea6\u548c\u5bc6\u5ea6\u5bf9\u5e94\u7684\u5224\u522b\u5668\u3002F\u4e3a\u6b63\u6f14\u7f51\u7edc G \u7ed3\u6784\u5982\u4e0b\uff1a feature block \u5176\u4e2d\u7279\u5f81\u63d0\u53d6block\u7ed3\u6784\u4e3a U-net \u7ed3\u6784 N\u4ee3\u8868\u5165\u5c04\u89d2\uff0ca\u4ee3\u8868\u6570\u636e\u957f\u5ea6 \u5c06\u6bcf\u4e2a\u4e0b\u91c7\u6837\u548c\u5bf9\u5e94\u7684\u4e0a\u91c7\u6837\u7279\u5f81\u7684\u6570\u636e\u8fdb\u884c\u8df3\u8dc3\u62fc\u63a5\uff0c\u878d\u5408\u6570\u636e\u7684\u6d45\u5c42\u7279\u5f81\u548c\u6df1\u5c42\u7279\u5f81\u3002\u8fd9\u662f\u89e3\u51b3\u4f20\u7edf\u5168\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u7684\u6709\u6548\u65b9\u6cd5 \u5728ASPP\u7ed3\u6784\u4e2d\uff0c\u8f83\u5c0f\u7684\u6838\u5c3a\u5bf8\u53ef\u4ee5\u6355\u83b7\u6570\u636e\u7684\u9ad8\u9891\u5185\u5bb9\uff0c\u56e0\u6b64\uff0cASPP\u7684\u6838\u5c3a\u5bf8\u5747\u4e3a3\u00d71\uff0c\u901a\u8fc7\u7a7a\u6d1e\u5377\u79ef\u589e\u5927\u611f\u53d7\u91ce\uff0c\u6355\u83b7\u591a\u4e2a\u5c3a\u5ea6\u7684\u7279\u5f81\u3002 \u5728G\u7ed3\u6784\u4e2d\uff0cinversion block\u4f7f\u7528\u4e86\u4e09\u4e2a1-D U-net\uff0c\u8be5\u5757\u7684U - Net\u6bd4\u7279\u5f81\u63d0\u53d6\u5757\u5177\u6709\u66f4\u6d45\u7684\u6df1\u5ea6\u548c\u66f4\u7b80\u5355\u7684\u7ed3\u6784\u3002\u53c2\u8003cGAN\u7684\u7406\u8bba\uff0c\u8fd9\u91cc\u7684\u4e09\u4e2aunet\u5747\u4e3a\u53cc\u901a\u9053\u8f93\u5165\uff0c\u4e00\u4e2a\u4e3a\u7279\u5f81\u63d0\u53d6\u5230\u7684\u9ad8\u9891\u4fe1\u606f\uff0c\u53e6\u4e00\u4e2a\u4e3a\u9884\u8bbe\u4f4e\u9891\u4fe1\u606f\u3002 discriminator \u5224\u522b\u5668\u7ed3\u6784 \u5224\u522b\u5668\u4e3a3\u4e2a\u7ed3\u6784\u76f8\u540c\u7684\u7f51\u7edc\uff0c\u672c\u6587\u91c7\u7528\u4e00\u7ef4\u9a6c\u5c14\u79d1\u592b\u5224\u522b\u5668\u4ee3\u66ff\u4f20\u7edf\u7684GAN\u5224\u522b\u5668\u8fdb\u884c\u591a\u4efb\u52a1cGAN\u3002\u9a6c\u5c14\u79d1\u592b\u5224\u522b\u5668\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u77e9\u9635\u6216\u5411\u91cf\uff0c\u800c\u4e0d\u662f\u4f20\u7edfGAN\u4e2d\u76840\u62161\u8f93\u51fa\u3002\u8fd9\u610f\u5473\u7740\u8f93\u51fa\u7684\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u8f93\u5165\u6570\u636e\u7684\u4e00\u4e2a\u8865\u4e01\u3002\u8fd9\u6837\u53ef\u4ee5\u589e\u5f3a\u53cd\u6f14\u7ed3\u679c\u4e2d\u9ad8\u9891\u7ec6\u8282\u7684\u523b\u753b\u3002\u5224\u522b\u5668\u540c\u6837\u662f\u4f4e\u9891\u9ad8\u9891\u53cc\u901a\u9053\u8f93\u5165\uff0c\u6700\u7ec8\u8f93\u51fa\u5927\u5c0f\u4e3a\u8f93\u5165\u76841/16 F \u6b63\u6f14\u7f51\u7edc \u6211\u4eec\u5728AVO\u53cd\u6f14\u4e2d\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u4ee3\u66ff\u57fa\u4e8e\u7269\u7406\u7684\u65b9\u7a0b\u8fdb\u884c\u5730\u9707\u6b63\u6f14\u3002\u7531\u4e8eU - Net\u5728\u5730\u9707\u6b63\u6f14\u65b9\u9762\u4e5f\u5177\u6709\u826f\u597d\u7684\u6027\u80fd\uff0c\u56e0\u6b64\u6211\u4eec\u5c06U - Net\u4f5c\u4e3aAVO\u6b63\u6f14\u7f51\u7edc(F)\uff0c\u5b9e\u73b0\u5f39\u6027\u53c2\u6570\u5230\u5730\u9707\u89d2\u9053\u96c6\u7684\u6620\u5c04\u3002F\u7684\u7ed3\u6784\u5982\u4e0aUnet\u3002\u5b83\u901a\u8fc7\u4e09\u4e2a\u901a\u9053\u5c06\u4e09\u4e2a\u5f39\u6027\u53c2\u6570\u5206\u522b\u8f93\u5165\u7f51\u7edc\uff1b\u6240\u4ee5N=3\u3002\u6700\u7ec8\u5f97\u5230\u89d2\u9053\u96c6 Loss function \u00b6 \u4e09\u4e2a\u5224\u522b\u5668\u7684\u635f\u5931\u51fd\u6570 \u00b6 \\begin{aligned} & L_{V p}^d=\\frac{1}{m} \\sum_i^m\\left[-D_{V p}\\left(V p^{\\text {label }} \\mid V p^{\\text {low }}\\right)\\right. \\left.+D_{V p}\\left(G\\left(S \\mid V p^{\\text {low }}\\right) \\mid V p^{\\text {low }}\\right)+\\lambda \\mathrm{gp}_{V p}\\right] \\\\ & L_{V s}^d=\\frac{1}{m} \\sum_i^m\\left[-D_{V s}\\left(V s^{\\text {label }} \\mid V s^{\\text {low }}\\right)\\right. \\left.+D_{V s}\\left(G\\left(S \\mid V s^{\\text {low }}\\right) \\mid V s^{\\text {low }}\\right)+\\lambda \\mathrm{gp}_{V s}\\right] \\\\ & L_\\rho^d=\\frac{1}{m} \\sum_i^m\\left[-D_\\rho\\left(\\rho^{\\text {label }} \\mid \\rho^{\\text {low }}\\right)\\right. \\left.+D_\\rho\\left(G\\left(S \\mid \\rho^{\\mathrm{low}}\\right) \\mid \\rho^{\\mathrm{low}}\\right)+\\lambda \\mathrm{gp}_\\rho\\right] \\\\ & \\mathrm{gp}=E_{\\tilde{x}, y}\\left[\\left(\\left\\|\\nabla_{\\tilde{x}} D(\\tilde{x}, y)\\right\\|_2-1\\right)^2\\right] \\\\ & \\tilde{x}=t x+(1-t) G(y) \\\\ \\end{aligned} \\begin{aligned} & L_{V p}^d=\\frac{1}{m} \\sum_i^m\\left[-D_{V p}\\left(V p^{\\text {label }} \\mid V p^{\\text {low }}\\right)\\right. \\left.+D_{V p}\\left(G\\left(S \\mid V p^{\\text {low }}\\right) \\mid V p^{\\text {low }}\\right)+\\lambda \\mathrm{gp}_{V p}\\right] \\\\ & L_{V s}^d=\\frac{1}{m} \\sum_i^m\\left[-D_{V s}\\left(V s^{\\text {label }} \\mid V s^{\\text {low }}\\right)\\right. \\left.+D_{V s}\\left(G\\left(S \\mid V s^{\\text {low }}\\right) \\mid V s^{\\text {low }}\\right)+\\lambda \\mathrm{gp}_{V s}\\right] \\\\ & L_\\rho^d=\\frac{1}{m} \\sum_i^m\\left[-D_\\rho\\left(\\rho^{\\text {label }} \\mid \\rho^{\\text {low }}\\right)\\right. \\left.+D_\\rho\\left(G\\left(S \\mid \\rho^{\\mathrm{low}}\\right) \\mid \\rho^{\\mathrm{low}}\\right)+\\lambda \\mathrm{gp}_\\rho\\right] \\\\ & \\mathrm{gp}=E_{\\tilde{x}, y}\\left[\\left(\\left\\|\\nabla_{\\tilde{x}} D(\\tilde{x}, y)\\right\\|_2-1\\right)^2\\right] \\\\ & \\tilde{x}=t x+(1-t) G(y) \\\\ \\end{aligned} \u5176\u4e2d\uff0cm\u4e3a\u6807\u8bb0\u6570\u636e\u7684\u4e2a\u6570\uff0cS\u4e3a\u6709\u6807\u6ce8\u6570\u636e\u7684\u5730\u9707\u89d2\u5ea6\u9053\u96c6\uff0cgp\u4e3a\u68af\u5ea6\u60e9\u7f5a\uff0c\u6ee1\u8db31-Lipschitz\u7ea6\u675f\uff0c \\lambda \\lambda \u4e3a\u7ea6\u675f\u7cfb\u6570\u5728gp\u7684\u8868\u8fbe\u5f0f\u4e2d\uff0cy\u662f\u4f5c\u4e3a\u751f\u6210\u5668\u8f93\u5165\u7684\u539f\u59cb\u6570\u636e\u3002 \\nabla_{\\tilde{x}} \\nabla_{\\tilde{x}} \u662f\u6cbf \\tilde{x} \\tilde{x} \u65b9\u5411\u7684\u68af\u5ea6\u8ba1\u7b97\u3002 \\tilde{x} \\tilde{x} \u968f\u673a\u91c7\u6837\u4e8e\u5728x\u4f5c\u4e3a\u6807\u7b7e\u548c\u5bf9\u5e94\u7684\u751f\u6210\u6570\u636eG (y)\u4e4b\u95f4\u7684\u76f4\u7ebf\u4e0a\u3002 \u751f\u6210\u5668\u7684\u635f\u5931\u51fd\u6570 \u00b6 \\begin{aligned} & L^g=\\frac{1}{m} \\sum_i^m\\left[-D_{V_p}\\left(G\\left(S \\mid V p^{\\text {low }}\\right) \\mid V p^{\\text {low }}\\right)\\right. -D_{V s}\\left(G\\left(S \\mid V s^{\\text {low }}\\right) \\mid V s^{\\text {low }}\\right) \\\\ & \\left.-D_\\rho\\left(G\\left(S \\mid \\rho^{\\text {low }}\\right) \\mid \\rho^{\\text {low }}\\right)\\right] \\text {. } \\\\ \\end{aligned} \\begin{aligned} & L^g=\\frac{1}{m} \\sum_i^m\\left[-D_{V_p}\\left(G\\left(S \\mid V p^{\\text {low }}\\right) \\mid V p^{\\text {low }}\\right)\\right. -D_{V s}\\left(G\\left(S \\mid V s^{\\text {low }}\\right) \\mid V s^{\\text {low }}\\right) \\\\ & \\left.-D_\\rho\\left(G\\left(S \\mid \\rho^{\\text {low }}\\right) \\mid \\rho^{\\text {low }}\\right)\\right] \\text {. } \\\\ \\end{aligned} \u6211\u4eec\u4f7f\u7528\u4e86\u5faa\u73af\u4e00\u81f4\u635f\u5931\u51fd\u6570\uff0cG\u548cF\u7684\u4e92\u4e3a\u8f93\u5165\u8f93\u51fa\uff0c\u56e0\u6b64\uff0cG\u548cF\u64cd\u4f5c\u7684\u6570\u636e\u90fd\u662f\u95ed\u73af\u7684\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4ec5\u7531\u5355\u4e2a\u7f51\u7edcG\u6216F\u64cd\u4f5c\u7684\u6570\u636e\u610f\u5473\u7740\u5f00\u73af\u3002\u6b64\u5916\uff0c\u6839\u636eAVO\u53cd\u6f14\u7684\u9700\u6c42\uff0c\u5bf9\u5faa\u73af\u4e00\u81f4\u635f\u5931\u51fd\u6570\u8fdb\u884c\u4e86\u6539\u8fdb\u3002\u6b64\u5916\uff0c \u6211\u4eec\u4f7f\u7528\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee(MAE)\u4ee3\u66ff\u5747\u65b9\u8bef\u5dee(mse)\u4f5c\u4e3a\u635f\u5931\u51fd\u6570 \uff0c\u4ee5\u63d0\u9ad8\u8bad\u7ec3\u7684\u9c81\u68d2\u6027\u3002\u5f00\u73af\u635f\u5931\u51fd\u6570\u5982\u4e0b \\begin{aligned} & L_{\\text {open }}^1=\\frac{1}{m} \\sum_i^m \\| G\\left(S \\mid V p^{\\text {low }}\\right)-V p^{\\text {label }} \\mid +\\left|G\\left(S \\mid V s^{\\text {low }}\\right)-V s^{\\text {labcl }}\\right| \\\\ & \\left.+\\left|G\\left(S \\mid \\rho^{\\text {low }}\\right)-\\rho^{\\text {labcl }}\\right|\\right] \\\\ & L_{\\mathrm{open}}^2=\\frac{1}{m} \\sum_i^m\\left[\\left|F\\left(V p^{\\text {label }}, V s^{\\text {labcl }}, \\rho^{\\text {label }}\\right)-S\\right|\\right] . \\\\ & \\end{aligned} \\begin{aligned} & L_{\\text {open }}^1=\\frac{1}{m} \\sum_i^m \\| G\\left(S \\mid V p^{\\text {low }}\\right)-V p^{\\text {label }} \\mid +\\left|G\\left(S \\mid V s^{\\text {low }}\\right)-V s^{\\text {labcl }}\\right| \\\\ & \\left.+\\left|G\\left(S \\mid \\rho^{\\text {low }}\\right)-\\rho^{\\text {labcl }}\\right|\\right] \\\\ & L_{\\mathrm{open}}^2=\\frac{1}{m} \\sum_i^m\\left[\\left|F\\left(V p^{\\text {label }}, V s^{\\text {labcl }}, \\rho^{\\text {label }}\\right)-S\\right|\\right] . \\\\ & \\end{aligned} \u95ed\u73af\u635f\u5931\u51fd\u6570\u7531\u6b63\u6f14\u5730\u9707\u6570\u636e\u7684\u635f\u5931\uff0c\u53cd\u6f14\u4e09\u53c2\u6570\u7684\u635f\u5931\uff0c\u672a\u6807\u6ce8\u6570\u636e\u7684\u6b63\u6f14\u635f\u5931\u7ec4\u6210 \\begin{aligned} & L_{\\text {close }}^1=\\frac{1}{m} \\sum_i^m\\left[\\left|F\\left(G\\left(S \\mid V p^{\\text {low }}\\right), G\\left(S \\mid V s^{\\text {low }}\\right), G\\left(S \\mid \\rho^{\\text {low }}\\right)\\right)-S\\right|\\right] \\\\ & L_{\\text {close }}^2=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid V p^{\\text {low }}\\right)-V p^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^3=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid V s^{\\text {low }}\\right)-V s^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^4=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid \\rho^{\\text {low }}\\right)-\\rho^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^5=\\frac{1}{M} \\sum_i^M\\left[\\mid F\\left(G\\left(S^* \\mid V p^{\\text {low* }}\\right), G\\left(S^* \\mid V s^{\\text {low* }}\\right)\\right. \\text {, }\\right. \\\\ & \\left.\\left.G\\left(S^* \\mid \\rho^{\\text {low* }}\\right)\\right)-S^* \\mid\\right] \\\\ & \\end{aligned} \\begin{aligned} & L_{\\text {close }}^1=\\frac{1}{m} \\sum_i^m\\left[\\left|F\\left(G\\left(S \\mid V p^{\\text {low }}\\right), G\\left(S \\mid V s^{\\text {low }}\\right), G\\left(S \\mid \\rho^{\\text {low }}\\right)\\right)-S\\right|\\right] \\\\ & L_{\\text {close }}^2=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid V p^{\\text {low }}\\right)-V p^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^3=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid V s^{\\text {low }}\\right)-V s^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^4=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid \\rho^{\\text {low }}\\right)-\\rho^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^5=\\frac{1}{M} \\sum_i^M\\left[\\mid F\\left(G\\left(S^* \\mid V p^{\\text {low* }}\\right), G\\left(S^* \\mid V s^{\\text {low* }}\\right)\\right. \\text {, }\\right. \\\\ & \\left.\\left.G\\left(S^* \\mid \\rho^{\\text {low* }}\\right)\\right)-S^* \\mid\\right] \\\\ & \\end{aligned} \u6545\u7efc\u4e0a\uff0c\u6700\u7ec8\u7684\u751f\u6210\u5668\u635f\u5931\u51fd\u6570\u4e3a L_{I,L} = L^g+\\beta(L^1_{open}+L^2_{open})+\\alpha(L^1_{close}+L^2_{close}+L^3_{close}+L^4_{close}+L^5_{close}) L_{I,L} = L^g+\\beta(L^1_{open}+L^2_{open})+\\alpha(L^1_{close}+L^2_{close}+L^3_{close}+L^4_{close}+L^5_{close}) \u5176\u4e2d \\alpha,\\beta(\\beta \\gg \\alpha) \\alpha,\\beta(\\beta \\gg \\alpha) \u4e3a\u7ea6\u675f\u7cfb\u6570\uff0c\u5206\u522b\u63a7\u5236\u5f00\u73af\u548c\u95ed\u73af\u90e8\u5206\u7684\u8d21\u732e\u3002 \u8bad\u7ec3\u6d41\u7a0b \u00b6 \u9996\u5148\u5c06\u5e26\u6807\u7b7e\u6570\u636e\u7ec4\u4f5c\u4e3a\u8f93\u5165\u8bad\u7ec3\u5224\u522b\u5668 \u8bad\u7ec3G\u548cF \u5e26\u6807\u7b7e\u6570\u636e\u7531\u7cbe\u786eZoeppritz\u65b9\u7a0b\u5f97\u5230 \u5728\u4e00\u4e2a\u8bad\u7ec3epoch\u5185\uff0c\u5224\u522b\u5668\u8bad\u7ec3\u4e24\u6b21\uff0cG\u548cF\u8bad\u7ec3\u4e00\u6b21\u3002\u6210\u4e3a\u5bf9\u6297\u8bad\u7ec3 \u8bad\u7ec3\u8d85\u53c2\u6570\u8bbe\u5b9a \u7ea6\u675f\u7cfb\u6570\u5206\u522b\u4e3a \\lambda = 10, \\alpha = 50, \\beta = 1500 \\lambda = 10, \\alpha = 50, \\beta = 1500 epoch = 300, batchsize = 34, \u5b66\u4e60\u7387=10exp-4, \u8870\u51cf\u7387\u4e3a0.99 \u8bc4\u4ef7\u6807\u51c6 \u4e3a\u4e86\u91cf\u5316\u53cd\u6f14\u7ed3\u679c\u7684\u51c6\u786e\u6027\uff0c\u6211\u4eec\u8ba1\u7b97\u4e86\u6bcf\u4e2a\u9053\u7684\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570( PCC )\u4ee5\u53ca\u53cd\u6f14\u7ed3\u679c\u4e0e\u771f\u5b9e\u6a21\u578b\u4e4b\u95f4\u7684mse\u3002\u4e24\u8005\u5747\u5b9a\u4e49 \\begin{aligned} & PCC(x,y)=\\frac{Cov(x,y)}{\\sqrt{Var(x)\\sqrt{Var(y)}}}\\\\ & mse(x,y) = \\frac{1}{M \\times N}\\sum^M_i\\sum^N_j(x_{i,j}-y_{i,j})^2 \\end{aligned} \\begin{aligned} & PCC(x,y)=\\frac{Cov(x,y)}{\\sqrt{Var(x)\\sqrt{Var(y)}}}\\\\ & mse(x,y) = \\frac{1}{M \\times N}\\sum^M_i\\sum^N_j(x_{i,j}-y_{i,j})^2 \\end{aligned} \u672c\u6587\u65b9\u6cd5\u7684\u53cd\u6f14\u7ed3\u679c\u4e0e\u5176\u4ed6\u4e24\u79cd\u65b9\u6cd5\u76f8\u6bd4\u5177\u6709\u66f4\u9ad8\u66f4\u7d27\u51d1\u7684PCC\u548c\u66f4\u4f4e\u7684mse \u6211\u4eec\u8fd8\u91c7\u7528Frechet\u8d77\u59cb\u8ddd\u79bb( FID )\u8bc4\u5206\u6765\u8bc4\u4f30\u53cd\u6f14\u7ed3\u679c\u3002\u5b83\u80fd\u6bd4inception score( IS )\u66f4\u597d\u5730\u6355\u6349\u751f\u6210\u7ed3\u679c\u4e0e\u771f\u5b9e\u7ed3\u679c\u7684\u76f8\u4f3c\u6027.\u5f53FID\u8bc4\u5206\u8d8a\u4f4e\u65f6\uff0c\u9884\u6d4b\u7ed3\u679c\u8d8a\u63a5\u8fd1\u771f\u5b9e\u6a21\u578b\u3002 \\mathbf{FID}(x,y)=||\\mu_x-\\mu_y||^2_2+\\mathbf{Tr}\\left(\\sum_x+\\sum_y-2\\left(\\sum_x\\sum_y\\right)^{\\frac{1}{2}}\\right) \\mathbf{FID}(x,y)=||\\mu_x-\\mu_y||^2_2+\\mathbf{Tr}\\left(\\sum_x+\\sum_y-2\\left(\\sum_x\\sum_y\\right)^{\\frac{1}{2}}\\right) \u5176\u4e2dx\u548cy\u5206\u522b\u4e3a\u9884\u6d4b\u7ed3\u679c\u548c\u771f\u5b9e\u6a21\u578b\uff0c \\mu \\mu \u4e3a\u5e73\u5747\u503c\u3002 \\sum \\sum \u4e3a\u7279\u5f81\u5411\u91cf\u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002 \\mathbf{Tr} \\mathbf{Tr} \u4e3a\u77e9\u9635\u7684\u8ff9 \u521b\u65b0\u70b9\uff1a - \u635f\u5931\u51fd\u6570\u4f7f\u7528Wasserstein\u8ddd\u79bb\u4ee3\u66ff\u4ea4\u53c9\u71b5\u3002 - \u5229\u7528\u5f39\u6027\u53c2\u6570\u7684\u4f4e\u9891\u4fe1\u606f\u4f5c\u4e3a\u6761\u4ef6\u8f93\u5165\u7f13\u89e3\u6a2a\u5411\u4e0d\u8fde\u7eed\u6027\u3002 - \u4f7f\u7528\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee( MAE )\u4ee3\u66ff\u5747\u65b9\u8bef\u5dee( mse )\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u6765\u63d0\u9ad8\u7f51\u7edc\u8bad\u7ec3\u7684\u9c81\u68d2\u6027 \u7ed3\u8bba \u00b6 CMcWGAN\u5229\u7528\u5f39\u6027\u53c2\u6570\u7684\u4f4e\u9891\u4fe1\u606f\u4f5c\u4e3a\u6761\u4ef6\u8f93\u5165\u7f13\u89e3\u4e86\u6a2a\u5411\u4e0d\u8fde\u7eed\u95ee\u9898\uff0c\u63d0\u9ad8\u4e86\u53cd\u6f14\u7ed3\u679c\u7684\u7cbe\u5ea6\u3002\u5229\u7528\u5408\u6210\u5730\u9707\u89d2\u9053\u96c6\u7684\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cCMcWGAN\u6bd4cGAN\u5177\u6709\u66f4\u597d\u7684\u6a2a\u5411\u8fde\u7eed\u6027\uff0c\u6bd4\u4f20\u7edf\u7684\u8d1d\u53f6\u65afAVO\u53cd\u6f14\u65b9\u6cd5\u5177\u6709\u66f4\u9ad8\u7684\u53cd\u6f14\u7cbe\u5ea6\u3002\u5728\u6807\u7b7e\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\uff0cCMcWGAN\u80fd\u591f\u5b9e\u73b0\u9ad8\u7cbe\u5ea6\u7684AVO\u53cd\u6f14\uff0c\u5e76\u4e14\u5bf9\u542b\u566a\u89d2\u5ea6\u9053\u96c6\u5177\u6709\u9c81\u68d2\u6027\u3002 PAPER6 AVO Inversion Based on Transfer Learning and Low-Frequency Model \u00b6 \u57fa\u4e8e\u8fc1\u79fb\u5b66\u4e60\u548c\u4f4e\u9891\u6a21\u578b\u7684AVO\u53cd\u6f14 https://ieeexplore.ieee.org/document/9634049 \u6458\u8981 \u00b6 \u5f53\u6df1\u5ea6\u5b66\u4e60\u76f4\u63a5\u7528\u4e8e\u5730\u9707\u53cd\u6f14\u65f6\uff0c\u4e3b\u8981\u5b58\u5728\u4e09\u4e2a\u95ee\u9898\u3002\u9996\u5148\uff0c\u6807\u7b7e\u6570\u636e\u4e0d\u8db3\u3002\u7b2c\u4e8c\uff0c\u9488\u5bf9\u4e00\u4e2a\u5de5\u4f5c\u533a\u57df\u8bad\u7ec3\u7684\u7f51\u7edc\u4e0d\u9002\u7528\u4e8e\u5176\u4ed6\u5de5\u4f5c\u533a\u57df\u3002\u7b2c\u4e09\uff0c\u53cd\u6f14\u7ed3\u679c\u5b58\u5728\u7a7a\u95f4\u4e0d\u8fde\u7eed\u548c\u4e0d\u7a33\u5b9a\u95ee\u9898\u3002\u672c\u6587\u63d0\u51fa\u4e86\u7ed3\u5408\u8fc1\u79fb\u5b66\u4e60\u548c\u4f4e\u9891\u5206\u91cf\u7ea6\u675f\u7684AVO\u53cd\u6f14\u65b9\u6cd5\u3002 INTRODUCTION \u00b6 \u6839\u636e\u53cd\u6f14\u7b97\u6cd5\u7684\u4e0d\u540c\uff0c\u53ef\u4ee5\u5206\u4e3a\u8fed\u4ee3\u6b63\u6f14\u6a21\u62df\u65b9\u6cd5\u3001\u975e\u7ebf\u6027\u53cd\u6f14\u65b9\u6cd5\u548c\u7ebf\u6027\u53cd\u6f14\u65b9\u6cd5\u3002\u4f20\u7edf\u7684AVO\u53cd\u6f14\u662f\u5178\u578b\u7684\u75c5\u6001\u95ee\u9898\uff0c\u901a\u5e38\u9700\u8981\u8fdb\u884c\u5404\u79cd\u5047\u8bbe\uff0c\u53cd\u6f14\u5f97\u5230\u7684\u5bc6\u5ea6\u7ed3\u679c\u5e76\u4e0d\u53ef\u9760\u3002\u968f\u7740\u6df1\u5ea6\u5b66\u4e60\u7684\u5d1b\u8d77\uff0c\u8d8a\u6765\u8d8a\u591a\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u88ab\u7528\u5728\u4e86\u5730\u9707\u53cd\u6f14\u4e0a\uff0c\u4f8b\u5982CNN\u5bf9\u65f6\u7a7a\u6ce2\u5f62\u8fdb\u884c\u5206\u7c7b\uff0c\u8fdb\u884c\u963b\u6297\u53cd\u6f14\uff0c\u7531\u4e8e\u7f51\u7edc\u6df1\u5ea6\u589e\u52a0\u5f15\u8d77\u7684\u68af\u5ea6\u7206\u70b8\uff0c\u5f15\u7528\u4e86Resnet\u5bf9\u5730\u9707\u968f\u673a\u566a\u58f0\u7684\u8870\u51cf\uff0c\u53e0\u524d\u53cd\u6f14\u7b49\uff0c\u8fd9\u4e9b\u7f51\u7edc\u5747\u8bbe\u8ba1\u4e3a\u5355\u8f93\u5165(\u4ec5\u6709\u5730\u9707\u6570\u636e\u4f5c\u4e3a\u8f93\u5165)\uff0c\u7531\u4e8e\u5730\u9707\u6570\u636e\u4e3a\u5e26\u9650\u6570\u636e\uff0c\u7f3a\u5c11\u4f4e\u9891\u6210\u5206\uff0c\u5bfc\u81f4\u53cd\u6f14\u7ed3\u679c\u5177\u6709\u6a2a\u5411\u4e0d\u7a33\u5b9a\u6027\u548c\u4e0d\u8fde\u7eed\u6027\u3002 \u7531\u4e8e\u5ca9\u6027\u7684\u5dee\u5f02\uff0c\u4e00\u4e2a\u5de5\u533a\u8bad\u7ec3\u7684\u53cd\u6f14\u7f51\u7edc\u6a21\u578b\u4e0d\u80fd\u76f4\u63a5\u5e94\u7528\u4e8e\u5176\u4ed6\u5730\u533a\u7684\u5730\u9707\u53c2\u6570\u53cd\u6f14\u3002\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528\u8fc1\u79fb\u5b66\u4e60\u5f88\u6709\u5fc5\u8981\u3002 \u6545\u672c\u6587\u91c7\u7528\u8fc1\u79fb\u5b66\u4e60\u548c\u4f4e\u9891\u7ea6\u675f\u76f8\u7ed3\u5408\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u591a\u8f93\u5165\u7f51\u7edc\u7ed3\u6784\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u5b66\u4e60\u89d2\u5ea6\u5730\u9707\u8bb0\u5f55\u548c\u5f39\u6027\u53c2\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd8\u53ef\u4ee5\u7ea6\u675f\u8fdb\u884cAVO\u53cd\u6f14\uff0c\u5148\u8ba9\u7f51\u7edc\u5728\u968f\u673a\u5408\u6210\u6570\u636e\u4e2d\u8fdb\u884c\u5b66\u4e60\uff0c\u518d\u8fdb\u884c\u8fc1\u79fb\u5b66\u4e60\u5c0f\u6837\u672c\u6570\u636e \u521b\u65b0\u70b9 - \u8fc1\u79fb\u5b66\u4e60 - \u7f51\u7edc\u53cc\u8f93\u5165\uff08\u5730\u9707\u6570\u636e\u548c\u4f4e\u9891\u4fe1\u606f\uff09 \u6d41\u7a0b \u00b6 \u5c06\u771f\u5b9e\u6570\u636e\uff08\u5f39\u6027\u53c2\u6570\uff09\u5f53\u4f5c\u76ee\u6807\u57df\u6570\u636e\uff0c\u968f\u673a\u751f\u6210\u4e00\u4e9b\u6570\u636e\uff08\u5f39\u6027\u53c2\u6570\uff09\u5f53\u4f5c\u6e90\u57df\u6570\u636e\uff0c\u9996\u5148\u4f7f\u7528\u6e90\u57df\u6570\u636e\u8fdb\u884c\u7f51\u7edc\u8bad\u7ec3\u5f97\u5230\u9884\u8bad\u7ec3\u6743\u91cd\uff0c\u4e4b\u540e\u8fdb\u884c\u76ee\u6807\u57df\u6570\u636e\u8fc1\u79fb\u5b66\u4e60 \u6b63\u6f14\u5408\u6210\u6570\u636e \u4f7f\u7528\u5408\u6210\u6570\u636e\u53ef\u4ee5\u51cf\u8f7b\u5c0f\u6837\u672c\u95ee\u9898\u7684\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u7531\u4e8eZoeppritz\u8fd1\u4f3c\u4e0d\u80fd\u53cd\u6620\u5168\u53cd\u5c04\u73b0\u8c61\uff0c\u8fd9\u91cc\u5408\u6210\u6570\u636e\u53cd\u5c04\u7cfb\u6570\u7531\u7cbe\u786eZoeppritz\u65b9\u7a0b\u5f97\u5230\uff0c\u4e4b\u540e\u901a\u8fc7\u548c\u5b50\u6ce2\u8936\u79ef\u5f97\u5230\u5408\u6210\u5730\u9707\u6570\u636e \u53cd\u6f14\u7f51\u7edc\u7ed3\u6784 \u7b2c\u4e00\u6b65\uff0c\u7528\u968f\u673a\u6570\u636e\u5bf9\u7f51\u7edc\u8fdb\u884c\u9884\u8bad\u7ec3\uff0c\u5f97\u5230\u5e7f\u4e49\u7f51\u7edc\u6a21\u578b\u3002\u7b2c\u4e8c\u6b65\uff0c\u5c06\u5e7f\u4e49\u7f51\u7edc\u6a21\u578b\u8f6c\u79fb\u5230\u76ee\u6807\u533a\u57df\uff0c\u5229\u7528\u76ee\u6807\u6570\u636e\u5bf9\u7f51\u7edc\u6a21\u578b\u8fdb\u884c\u4f18\u5316\uff0c\u5f97\u5230\u7b26\u5408\u76ee\u6807\u533a\u57df\u53cd\u6f14\u8981\u6c42\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u5b9e\u9a8c \u4e3a\u4e86\u6a21\u62df\u771f\u5b9e\u60c5\u51b5\u4e0b\u7684\u4e95\u6570\u8f83\u5c11\u7684\u95ee\u9898\uff0c\u76ee\u6807\u57df\u6570\u636e\u4e3aOverthrust\u6a21\u578b\u4e2d4\u9053\u4e95\u66f2\u7ebf\uff0c\u6b63\u6f14\u4f7f\u752840hz\u7684\u96f7\u514b\u5b50\u6ce2\uff0c\u5165\u5c04\u89d2\u4e3a0~30\u95f4\u96945\u00b0\u3002 \u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u7528\u5927\u91cf\u5408\u6210\u7684\u968f\u673a\u6570\u636e\u9884\u8bad\u7ec3\u7f51\u7edc\u3002\u7b2c\u4e8c\u6b65\uff0c\u5c06\u9884\u8bad\u7ec3\u7684\u7f51\u7edc\u7684\u6743\u91cd\u8fc1\u79fb\u5230\u5177\u6709\u76f8\u540c\u67b6\u6784\u7684\u76ee\u6807\u7f51\u7edc\u4e2d\u9488\u5bf9\u76ee\u6807\u57df\u6570\u636e\u8fdb\u884c\u5fae\u8c03\u3002 \u672c\u6587\u8fd8\u5bf9\u51bb\u7ed3\u4e0d\u540c\u5c42\u5bf9\u53cd\u6f14\u7ed3\u679c\u7684\u5f71\u54cd\u505a\u4e86\u5bf9\u6bd4\uff0c\u4e14\u8fdb\u884c\u4e86PCC\u5bf9\u6bd4\uff0c\u8bc1\u660e\u9884\u6d4b\u6548\u679c\u90fd\u5f88\u597d \u5bf9\u4e0d\u540c\u4e3b\u9891\u7684\u5730\u9707\u6570\u636e\u7684\u53cd\u6f14\u7ed3\u679c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u540c\u6837\u9884\u6d4b\u6548\u679c\u90fd\u5f88\u597d \u5bf9Mamousi2\u6570\u636e\u8fdb\u884c\u5b9e\u9a8c\uff0c\u6dfb\u52a05db\u7684\u9ad8\u65af\u566a\u58f0\uff0c\u672c\u6587\u7684\u65b9\u6cd5\u4f9d\u65e7\u8868\u73b0\u7740\u826f\u597d\u7684\u6027\u80fd PAPER7 Nonlinear multichannel impedance inversion by total-variation regularization \u00b6 \u5168\u53d8\u5206\u6b63\u5219\u5316\u975e\u7ebf\u6027\u591a\u901a\u9053\u963b\u6297\u53cd\u6f14 \u6458\u8981 \u00b6 \u58f0\u963b\u6297(AI)\u5206\u6790\u80fd\u591f\u4f7f\u5730\u9707\u53cd\u5c04\u6570\u636e\u6620\u5c04\u5230\u5ca9\u6027\uff0c\u53cd\u5c04\u7387\u8ba1\u7b97AI\u9700\u8981\u6c42\u89e3\u4e00\u4e2a\u6709\u7ea6\u675f\u7684\u975e\u7ebf\u6027\u53cd\u95ee\u9898\u3002\u9488\u5bf9\u591a\u901a\u9053\u5f62\u5f0f\u7684\u975e\u7ebf\u6027\u963b\u6297\u95ee\u9898\uff0c\u5728\u603b\u53d8\u5dee(TV)\u7ea6\u675f\u4e0b\uff0c\u63d0\u51fa\u4e86\u4e24\u79cd\u6709\u6548\u7684\u7b97\u6cd5\u6765\u6062\u590d\u5177\u6709\u5757\u72b6\u7ed3\u6784\u7684\u963b\u6297\u56fe\u3002 Introduction \u00b6 \u4ece\u5e26\u9650\u5730\u9707\u8bb0\u5f55\u4e2d\u83b7\u5f97AI\u9700\u8981\u4e24\u6b65 deconvolution \u53cd\u8936\u79ef\uff0c\u7528\u4e8e\u8865\u507f\u7531\u9707\u6e90\u4ea7\u751f\u7684\u5b50\u6ce2\u7684\u5e26\u9650\u6027\u8d28\u6240\u9020\u6210\u7684\u8bb0\u5f55\u5730\u9707\u8bb0\u5f55\u7684\u7f3a\u5931\u9891\u7387 inversion \u7528AI\u53cd\u6f14\u8be5\u53cd\u5c04\u7cfb\u6570 \u7531\u4e8e\u4ea7\u751fAI\u7684\u9012\u63a8\u516c\u5f0f\u662f\u6309\u8ff9\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u4e0d\u5141\u8bb8\u963b\u6297\u56fe\u7684\u7a7a\u95f4\u6b63\u5219\u5316\u3002 \u53cd\u5c04\u7cfb\u6570\u4e0e\u963b\u6297\u53c2\u6570\u5448\u975e\u7ebf\u6027\u5173\u7cfb\uff1b\u56e0\u6b64\uff0c\u9700\u8981\u6c42\u89e3\u4e00\u4e2a\u6709\u7ea6\u675f\u7684\u975e\u7ebf\u6027\u53cd\u95ee\u9898\u6765\u4ece\u53cd\u5c04\u7387\u5256\u9762\u4e2d\u6062\u590d\u4e00\u4e2a\u6b63\u5219\u5316\u7684\u963b\u6297\u5256\u9762\u3002 \u672c\u6587\u65b9\u6cd5\uff1a\u4ece\u6570\u636e\u4e2d\u63d0\u53d6\u53cd\u5c04\u7387\u5256\u9762\u3002\u7136\u540e\u6c42\u89e3\u975e\u7ebf\u6027\u963b\u6297\u95ee\u9898\uff0c\u5c06\u751f\u6210\u7684\u53cd\u5c04\u7387\u6a21\u578b\u53cd\u6f14\u4e3a\u6b63\u5219\u5316\u7684AI\u6a21\u578b\uff0c\u4f7f\u7528\u5168\u53d8\u5206(TV)\u6b63\u5219\u5316\u6765\u652f\u6301\u5177\u6709\u5757\u72b6\u7ed3\u6784\u7684AI\u6a21\u578b\u3002","title":"\u8bba\u6587\u7b14\u8bb0"},{"location":"SeismicInversion/PaperNotes/#paper1-approximations-to-the-zoeppritz-equations-and-their-use-in-avo-analysis","text":"Zoeppritz\u65b9\u7a0b\u7684\u8fd1\u4f3c\u503c\u53ca\u5176\u5728AVO\u5206\u6790\u4e2d\u7684\u5e94\u7528(AVO:Amplitude variation with offset)","title":"PAPER1: Approximations to the Zoeppritz equations and their use in AVO analysis"},{"location":"SeismicInversion/PaperNotes/#_1","text":"\u63a8\u5bfc\u4e86p-p\u6ce2\u53cd\u5c04\u548c\u900f\u5c04\u7cfb\u6570(( T_{pp},R_{pp} T_{pp},R_{pp} ))\u4e0e\u5f39\u6027\u53c2\u6570\u76f8\u5bf9\u5bf9\u6bd4\u5ea6\u7684\u4e8c\u6b21\u8868\u8fbe\u5f0f\u3002\u63d0\u4f9b\u4e86Zoeppritz\u65b9\u7a0b\u7684\u66ff\u4ee3\u8fd1\u4f3c\u503c\uff0c p^2,p^4 p^2,p^4 \u9879\u7684\u663e\u5f0f\u7cfb\u6570.\u8fd9\u662f\u4e00\u4e2a\u7d27\u51d1\u7684\u5f62\u5f0f\u3002 \u4f20\u7edf\u7ebf\u6027\u8fd1\u4f3c\u53ea\u80fd\u53cd\u6f14\u4e24\u4e2a\u5f39\u6027\u7cfb\u6570\u3002\u901a\u8fc7\u4e8c\u9636\u8fd1\u4f3c\uff0cFrechet\u77e9\u9635\u5bf9\u4e09\u4e2a\u5f39\u6027\u53c2\u6570\u7684\u6761\u4ef6\u6570\u6bd4\u7ebf\u6027\u8fd1\u4f3c\u6709\u660e\u663e\u6539\u5584\u3002 (\u5f39\u6027\u5bf9\u6bd4\u9879\uff1ap\u6ce2\u5bf9\u6bd4,s\u6ce2\u5bf9\u6bd4\uff0c\u754c\u9762\u5904ps\u6bd4\u503c,\u5373 \\varDelta\\alpha / \\alpha,\\varDelta\\beta/\\beta,\\alpha/\\beta \\varDelta\\alpha / \\alpha,\\varDelta\\beta/\\beta,\\alpha/\\beta \u5f39\u6027\u53c2\u6570\uff1a\u4f53\u5bc6\u5ea6\uff0cP\u6ce2\u901f\u5ea6\uff0cS\u6ce2\u901f\u5ea6) those quadratic approximations can be used directly with amplitude information to estimate not only two but three parameters: P-wave velocity contrast, S-wave velocity contrast, and the ratio of S-wave and P-wave velocities at an interface.","title":"\u6458\u8981"},{"location":"SeismicInversion/PaperNotes/#_2","text":"\u4f20\u7edfAVO \u5047\u8bbe\uff1a\u9664\u53cd\u5c04\u7cfb\u6570\u5916\uff0c\u6240\u6709\u7684\u4e0e\u504f\u79fb\u76f8\u5173\u7684\u632f\u5e45\u6548\u5e94\u90fd\u88ab\u77eb\u6b63\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f39\u6027\u53c2\u6570\u7684\u5bf9\u6bd4\u53ef\u4ee5\u4ece\u53cd\u5c04\u632f\u5e45\u7406\u8bba\u4e0a\u4f30\u8ba1\u3002\u9700\u8981\u8003\u8651\uff08\u53cd\u5c04\u4e0e\u4f20\u8f93\u7cfb\u6570\uff0c\u7ed3\u6784\u5f71\u54cd\uff09 \u5728\u53cd\u6f14\u4e2d\uff0c\u901a\u5e38\u91c7\u7528 \u7cbe\u786e \u7684Zoeppritz\u65b9\u7a0b\u6765\u8ba1\u7b97\u53cd\u5c04\u548c\u6298\u5c04\u7cfb\u6570\u3002\u8fd1\u4f3c\u7684\u597d\u5904\u662f\u632f\u5e45\u7684\u4ee5\u5f39\u6027\u53c2\u6570\u4e3a\u57fa\u7840\u7684Frechet\u5bfc\u6570\u7684\u7075\u654f\u5ea6\u77e9\u9635\u53ef\u4ee5\u89e3\u6790\u8ba1\u7b97\u51fa\u6765\u3002 Ursin and Dahl (1992) \u6cf0\u52d2\u7ea7\u6570\u7684\u7cfb\u6570\u76f4\u63a5\u7531\u4ecb\u8d28\u53c2\u6570\u8ba1\u7b97((not from the vertical slownesses)\uff0c\u7f3a\u70b9\uff1a\u5197\u957f\uff0c\u53ea\u80fd\u8ba1\u7b97\u673a\u5b9e\u73b0 Mallick (1993) \u4e5f\u505a\u4e86 R_{pp} R_{pp} \u8fd1\u4f3c\uff0c\u7701\u7565\u4e86\u4e8c\u6b21\u9879","title":"\u524d\u8a00"},{"location":"SeismicInversion/PaperNotes/#zoeppritz","text":"R_{pp}(p)=\\frac{E+Fp^2+Gp^4-Dp^6}{A+Bp^2+Cp^4+Dp^6}\\tag {1} R_{pp}(p)=\\frac{E+Fp^2+Gp^4-Dp^6}{A+Bp^2+Cp^4+Dp^6}\\tag {1} T_{pp}(p)=\\frac{H+Ip^2}{A+Bp^2+Cp^4+Dp^6}\\tag {2} T_{pp}(p)=\\frac{H+Ip^2}{A+Bp^2+Cp^4+Dp^6}\\tag {2} p\u4e3a\u5c04\u7ebf\u7cfb\u6570\uff0c\u5c06\u5206\u6bcd\u5728 p=0 p=0 \u5904\u8fdb\u884c\u56db\u9636\u6cf0\u52d2\u5c55\u5f00 ... ... ... R_f R_f \u4e3a\u6d41\u4f53-\u6d41\u4f53\u53cd\u5c04\u7cfb\u6570\uff0c\u5373S\u6ce2\u5728\u4e24\u4ecb\u8d28\u4e2d\u901f\u5ea6\u4e3a0\u65f6\u7684\u53cd\u5c04\u7cfb\u6570\uff0c\u6b64\u65f6\u4f20\u8f93\u7cfb\u6570\u4e3a T_f=1-R_f T_f=1-R_f","title":"Zoeppritz\u65b9\u7a0b"},{"location":"SeismicInversion/PaperNotes/#_3","text":"R_{pp}\\approx\\left[\\frac{1}{2}-2\\left(\\frac{\\beta}{\\alpha}\\right)^2\\sin^2\\theta\\right]\\frac{\\varDelta\\rho}{\\rho}+\\frac{1}{2}\\sec^2\\theta\\frac{\\varDelta\\alpha}{\\alpha}\\\\ -4\\left(\\frac{\\beta}{\\alpha}\\right)^2\\sin^2\\theta\\frac{\\varDelta\\beta}{\\beta}+\\left(\\frac{\\beta}{\\alpha}\\right)^3\\cos\\theta\\sin^2\\theta\\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2\\tag {3} R_{pp}\\approx\\left[\\frac{1}{2}-2\\left(\\frac{\\beta}{\\alpha}\\right)^2\\sin^2\\theta\\right]\\frac{\\varDelta\\rho}{\\rho}+\\frac{1}{2}\\sec^2\\theta\\frac{\\varDelta\\alpha}{\\alpha}\\\\ -4\\left(\\frac{\\beta}{\\alpha}\\right)^2\\sin^2\\theta\\frac{\\varDelta\\beta}{\\beta}+\\left(\\frac{\\beta}{\\alpha}\\right)^3\\cos\\theta\\sin^2\\theta\\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2\\tag {3} T_{pp}\\approx 1-\\frac{1}{2}\\frac{\\varDelta\\rho}{\\rho}+\\frac{1}{2}(\\tan^2\\theta-1)\\frac{\\varDelta\\alpha}{\\alpha}-\\left(\\frac{\\beta}{\\alpha}\\right)^3\\cos\\theta\\sin^2\\theta\\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2\\tag{4} T_{pp}\\approx 1-\\frac{1}{2}\\frac{\\varDelta\\rho}{\\rho}+\\frac{1}{2}(\\tan^2\\theta-1)\\frac{\\varDelta\\alpha}{\\alpha}-\\left(\\frac{\\beta}{\\alpha}\\right)^3\\cos\\theta\\sin^2\\theta\\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2\\tag{4} \u8fdb\u4e00\u6b65\u8fd1\u4f3c\uff0c\u5c06(5)\u5e26\u5165(3)(4) \\frac{\\varDelta\\rho}{\\rho}\\approx\\frac{1}4\\frac{\\varDelta\\alpha}{\\alpha}\\tag{5} \\frac{\\varDelta\\rho}{\\rho}\\approx\\frac{1}4\\frac{\\varDelta\\alpha}{\\alpha}\\tag{5} \u7ebf\u6027\u8fd1\u4f3c\u65b9\u6cd5 \u5ffd\u7565\u4e86 \\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2 \\left(\\frac{\\varDelta\\rho}{\\rho}+2\\frac{\\varDelta\\beta}{\\beta}\\right)^2","title":"\u4f2a\u56db\u6b21\u8fd1\u4f3c(\u672c\u6587\u65b9\u6cd5)"},{"location":"SeismicInversion/PaperNotes/#_4","text":"\u4f2a\u56db\u6b21\u8fd1\u4f3c\u5f97\u5230\u7684 R_{pp}\u4e0eT_{pp} R_{pp}\u4e0eT_{pp} \u6bd4\u7ebf\u6027\u8fd1\u4f3c\u66f4\u63a5\u8fd1\u7cbe\u786e\u7684zoeppritz\u7ed3\u679c \u8fd0\u7528\u5728\u53cd\u6f14\u95ee\u9898\u4e2d\uff0c\u79bb\u6563\u5316\u8fd0\u7b97\u7b26L\u7684\u7279\u5f81\u503c\u66f4\u5927 \u4f2a\u56db\u6b21\u8fd1\u4f3c\u7531\u66f4\u5c0f\u7684\u6761\u4ef6\u6570\uff08conditio number\uff09 \u5373\u6700\u5927\u7279\u5f81\u503c\u4e0e\u6700\u5c0f\u7279\u5f81\u503c\u4e4b\u6bd4","title":"\u5bf9\u6bd4"},{"location":"SeismicInversion/PaperNotes/#_5","text":"\u5f15\u5165\u4f2a\u56db\u6b21\u903c\u8fd1\u4ee5\u5c04\u7ebf\u53c2\u6570p\u4e3a\u53c2\u6570\u7684p-p\u6ce2\u7684\u53cd\u5c04\u548c\u900f\u5c04\u7cfb\u6570\u3002\u8fd9\u4e9b\u8fd1\u4f3c\u5177\u6709\u76f8\u5f53\u7d27\u51d1\u7684\u5f62\u5f0f\uff0c\u5176\u4e2dp2\u548cp4\u9879\u7684\u7cfb\u6570\u7528\u5782\u76f4\u6162\u5ea6\u8868\u793a","title":"\u7ed3\u8bed"},{"location":"SeismicInversion/PaperNotes/#paper2-avo-inversion-using-the-zoeppritz-equation-for-pp-reflections","text":"\u5229\u7528Zoeppritz\u65b9\u7a0b\u53cd\u6f14PP\u53cd\u5c04","title":"PAPER2: AVO inversion using the Zoeppritz equation for PP reflections"},{"location":"SeismicInversion/PaperNotes/#summary","text":"\u5728\u4f17\u591aZoeppritz\u8fd1\u4f3c\u65b9\u6cd5\u4e2d\uff0c\u504f\u79fb\u8ddd\u79bb\u88ab\u9650\u5236\u5230\u5c0f\u6216\u4e2d\u7b49\uff0c\u89d2\u5ea6\u88ab\u9650\u5236\u5230\u5f88\u5c0f\uff0c\u53ef\u9006\u5f39\u6027\u53c2\u6570\u4e5f\u88ab\u9650\u5236\u5230\u4e24\u5230\u4e09\u4e2a\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u7cbe\u786e\u7684Zoeppritz\u65b9\u7a0b\u5bf9\u65e0\u4e34\u754c\u89d2(\u5927\u89d2\u5ea6)\u7684\u53cd\u5c04\u8fdb\u884cAVO\u53cd\u6f14\u3002\u5e76\u8fdb\u884c\u4e86\u5bf9\u6bd4\u3002\u6700\u5c0f\u4e8c\u4e58\u632f\u5e45\u62df\u5408\u53ef\u6c42\u51fa\u53cd\u5c04\u9762\u7684\u5bc6\u5ea6\u6bd4\u548c\u4e09\u4e2a\u901f\u5ea6\u6bd4\u3002\u8be5\u7b97\u6cd5\u9002\u7528\u4e8e\u957f\u504f\u7f6ePP\u53cd\u5c04\u7684\u53cd\u6f14\u3002","title":"summary"},{"location":"SeismicInversion/PaperNotes/#_6","text":"\u53cd\u6f14\u901a\u5e38\u901a\u8fc7\u6700\u5c0f\u4e8c\u4e58\u4f7f\u89c2\u6d4b\u503c\u548c\u5408\u6210AVO\u6570\u636e\u4e4b\u95f4\u7684\u5dee\u5f02\u6700\u5c0f\u5316\uff0c\u89c2\u6d4b\u6570\u636e\u8f93\u5165\u4e4b\u524d\uff0c\u5e94\u8fdb\u884c\u9884\u5904\u7406\uff0c\u5373\u5bf9\u5305\u62ec\u51e0\u4f55\u6269\u6563\uff0c\u8870\u51cf\uff0c\u8272\u6563\u548c\u4f20\u8f93\u635f\u5931\u8fdb\u884c\u77eb\u6b63(\u9664\u4e86RCs:reflection coefficients) \u504f\u79fb\u91cf\u8d8a\u5927\uff0c\u5165\u5c04\u89d2\u8303\u56f4\u8d8a\u5e7f,\u66f4\u5927\u7684\u89d2\u5ea6\u8303\u56f4\u4f7f\u53cd\u6f14\u7a33\u5b9a\uff0c\u53cd\u6f14\u53c2\u6570\u66f4\u591a\uff0c\u6240\u4ee5\u91cd\u70b9\u662f\u5982\u4f55\u5904\u7406\u957f\u504f\u79fb\u53cd\u5c04\u6570\u636e\u3002\u957f\u504f\u79fb\u53cd\u5c04\u4e0d\u4e00\u5b9a\u5305\u62ec\u5e7f\u89d2\u53cd\u5c04\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u5e7f\u89d2\u53cd\u5c04\u6765\u81ea\u8fd1\u4e34\u754c\u5165\u5c04\u89d2\u548c\u540e\u4e34\u754c\u5165\u5c04\u89d2\u3002\u4ea7\u751f\u5e7f\u89d2\u53cd\u5c04\u9700\u8981\u5728\u76f8\u5bf9\u8f83\u6d45\u7684\u6df1\u5ea6\u5904\u6709\u8f83\u5927\u6b63\u901f\u5ea6\u5bf9\u6bd4\u7684\u6a21\u578b\uff0c\u9700\u8981\u7403\u6ce2\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u3002 \u672c\u6587\u8003\u8651\u957f\u504f\u79fb\u975e\u4e34\u754cPP\u53cd\u5c04\uff0c\u6700\u7ec8\u5f97\u5230 - [x] \u7cbe\u786e\u7684Zoepptriz\u5f97\u5230\u7684\u5e73\u9762\u6ce2RCs\u5bf9\u7403\u6ce2\u53cd\u5c04\u957f\u504f\u79fb\u6570\u636e\u4e5f\u662f\u51c6\u786e\u7684 - [x] \u7cbe\u786e\u7684Zoepptriz\u65b9\u7a0b\u80fd\u7528\u5728\u4f20\u7edfAVO\u4e2d","title":"\u524d\u8a00"},{"location":"SeismicInversion/PaperNotes/#avo-modeling","text":"","title":"AVO Modeling"},{"location":"SeismicInversion/PaperNotes/#zoepptriz","text":"R_{pp}=\\frac{Q^2-r_4T_0T_3+r_4T_1T_2-(1+Q)^2T_0T_2+A-B}{Q^2+r_4T_0T_3+r_4T_1T_2+(1+Q)^2T_0T_2+A+B} R_{pp}=\\frac{Q^2-r_4T_0T_3+r_4T_1T_2-(1+Q)^2T_0T_2+A-B}{Q^2+r_4T_0T_3+r_4T_1T_2+(1+Q)^2T_0T_2+A+B}","title":"\u7cbe\u786eZoepptriz\u65b9\u7a0b"},{"location":"SeismicInversion/PaperNotes/#_7","text":"\u6211\u4eec\u9009\u62e9\u4e00\u79cd\u6709\u9650\u5dee\u5206\u89e3\u6765\u751f\u6210\u7cbe\u786e\u7684AVO\u89c2\u6d4b\u6570\u636e\uff0c\u7528\u4e8e\u6d4b\u8bd5\u7684\u957f\u504f\u79fb\u7cbe\u5ea6PP RCs\u3002\u6b63\u6f14\u5efa\u6a21\u91c7\u75288\u9636\u4ea4\u9519\u7f51\u683c\u5f39\u6027\u52a8\u529b\u5b66\u65b9\u7a0b\u7684FD\u89e3\u3002","title":"\u6709\u9650\u5fae\u5206"},{"location":"SeismicInversion/PaperNotes/#_8","text":"\u8fd1\u4f3c\u7684\u65b9\u6cd5\u9002\u7528\u7684\u89d2\u5ea6\u90fd\u5f88\u5c0f\uff0c\u7ebf\u6027\u8fd1\u4f3c\u53ea\u9002\u7528\u4e8e\u5c0f\u4e8e20\u7684\u89d2\u5ea6\uff0c\u4f2a\u56db\u6b21\u53ea\u9002\u7528\u4e8e\u5c0f\u4e8e50\u7684\u89d2\u5ea6\uff0c\u6240\u4ee5\u7cbe\u786e\u7684Zoepptriz\u6709\u4f18\u52bf\u3002","title":"\u8fd1\u4f3c"},{"location":"SeismicInversion/PaperNotes/#avo-inversion","text":"\u901a\u8fc7\u7531\u89d2\u5ea6\u51b3\u5b9a\u7684PP\u53cd\u5c04\u7cfb\u6570\uff0c\u53ea\u80fd\u9884\u6d4b\u51fa\u4e09\u4e2a\u901f\u5ea6\u7684\u6bd4\u503c\u4e0e\u5bc6\u5ea6\u6bd4\u503c\u3002\u4e14\u56db\u4e2a\u6bd4\u503c\u4e0d\u72ec\u7acb\u3002 r_1,r_2,r_3\u7531\\alpha_! r_1,r_2,r_3\u7531\\alpha_! \u5f52\u4e00\u5316\uff0c r_4\u7531\\rho_1 r_4\u7531\\rho_1 \u5f52\u4e00\u5316\uff0c\u6240\u4ee5\u5c06 \\alpha_1,\\rho_1 \\alpha_1,\\rho_1 \u5f53\u4f5c\u5148\u9a8c\uff0c\u53ef\u901a\u8fc7\u6570\u5b66\u5de5\u5177(Mathematica)\u8ba1\u7b97frechet\u5bfc\u6570\u77e9\u9635\uff0c\u5728\u5bfc\u6570\u8ba1\u7b97\u4e2d\uff0c\u9700\u8981\u786e\u5b9a\u6700\u4f73\u6270\u52a8\uff0c\u8fd9\u4e2a\u6270\u52a8\u8981\u591f\u5c0f\u80fd\u5230\u6355\u83b7\u5c40\u90e8\u68af\u5ea6\uff0c\u4f46\u4e5f\u4e0d\u80fd\u5c0f\u5230\u5f15\u8d77\u9ad8\u9891\u4f2a\u5f71\u3002","title":"AVO Inversion"},{"location":"SeismicInversion/PaperNotes/#_9","text":"\u4e00\u79cd\u65b0\u7684AVO\u53cd\u6f14\u7b97\u6cd5\uff0c\u4f7f\u7528 \u7cbe\u786e\u7684Zoeppritz\u65b9\u7a0b \uff0c\u91c7\u7528\u7cbe\u786e\u7684\u957f\u504f\u79fbPP\u53cd\u5c04(\u516b\u9636FD\u6a21\u578b)\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e86\u9a8c\u8bc1\u3002 zoepptriz\u5047\u8bbe\u7684\u5e73\u9762\u6ce2RCs\u5728\u4e34\u754c\u89d2\u9644\u8fd1\u4e0d\u9002\u7528\uff0c\u56e0\u6b64\u4e0a\u8ff0\u6a21\u578b\u5177\u6709\u8870\u51cf\u901f\u5ea6\u5bf9\u6bd4\uff0c\u56e0\u6b64\u89c2\u6d4b\u6570\u636e\u4e2d\u6ca1\u6709\u4e34\u754c\u53cd\u5c04\u3002\u5bf9\u4e8e\u5177\u6709\u6b63\u5bf9\u6bd4\u7684\u6a21\u578b\uff0c\u53ea\u8981\u5229\u7528\u7684\u89d2\u5ea6\u8303\u56f4\u4e0d\u5728\u4e34\u754c\u89d2\u7684\u7b2c\u4e00\u4e2a\u83f2\u6d85\u5c14\u5e26\u5185\uff0c\u8be5\u7b97\u6cd5\u4ecd\u7136\u6709\u6548\u3002","title":"\u7ed3\u8bed"},{"location":"SeismicInversion/PaperNotes/#paper3-constrained-nonlinear-amplitude-variation-with-offset-inversion-using-zoeppritz-equations","text":"\u5229\u7528\u504f\u7f6e\u53cd\u6f14\u7ea6\u675f\u975e\u7ebf\u6027\u632f\u5e45\u53d8\u5316Zoeppritz\u65b9\u7a0b: \u8bba\u6587\u94fe\u63a5","title":"PAPER3 Constrained nonlinear amplitude variation with offset inversion using Zoeppritz equations"},{"location":"SeismicInversion/PaperNotes/#_10","text":"\u5f00\u53d1\u4e86\u4e00\u79cd\u6709\u6548\u7684\u975e\u7ebf\u6027AVO\u524d\u4e34\u754c\u53cd\u5c04\u53cd\u6f14\u7b97\u6cd5\uff0c\u4f7f\u7528\u7cbe\u786e\u7684\u591a\u901a\u9053\u548c\u591a\u754c\u9762Zoeppritz\u65b9\u7a0b\u540c\u65f6\u4f30\u8ba1p\u6ce2\u901f\u5ea6\uff0cs\u6ce2\u901f\u5ea6\u548c\u5bc6\u5ea6\u3002\u5728\u6c42\u89e3\u6b63\u6f14\u975e\u7ebf\u6027\u6a21\u578b\u65f6\uff0c\u91c7\u7528\u5168\u53d8\u5206\u7ea6\u675f\u514b\u670d\u4e86\u75c5\u6001\u6027\uff0c\u4fdd\u6301\u4e86\u53c2\u6570\u7a7a\u95f4\u4e2d\u754c\u9762\u7684\u9510\u5ea6\u3002 We have developed an efficient algorithm for nonlinear AVO inversion of precritical reflections using the exact Zoeppritz equations in multichannel and multi-interface form for simultaneous estimation of the P-wave velocity, S-wave velocity, and density. The total variation constraint is used to overcome the ill-posedness while solving the forward nonlinear model and to preserve the sharpness of the interfaces in the parameter space.","title":"\u6458\u8981"},{"location":"SeismicInversion/PaperNotes/#_11","text":"\u5229\u7528AVO\u7684\u53e0\u524d\u5730\u9707\u53cd\u6f14\u53ef\u4ee5\u5bf9\u5f39\u6027\u53c2\u6570\u5373P\u6ce2\u901f\u5ea6(\u03b1)\u3001S\u6ce2\u901f\u5ea6(\u03b2)\u548c\u5bc6\u5ea6(\u03c1)\u7ed9\u51fa\u53ef\u9760\u7684\u4f30\u8ba1\u3002AVO\u4e3b\u8981\u53d7Zoeppritz\u65b9\u7a0b\u51b3\u5b9a\uff0c\u8be5\u65b9\u7a0b\u63cf\u8ff0\u4e86\u754c\u9762\u5728\u7ed9\u5b9a\u89d2\u5ea6\u7684\u53cd\u5c04\u7387RC\u4e0e\u754c\u9762\u4e24\u4fa7\u4ecb\u8d28\u7684\u5f39\u6027\u7279\u6027\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\u5173\u7cfb\u3002\u7136\u800c\u8fd9\u4e2a\u65b9\u7a0b\u9488\u5bf9\u5927\u5c3a\u5ea6\u3001\u591a\u5c42\u6b21\u3001\u591a\u7ef4\u7684\u5730\u7403\u6a21\u578b\uff0c\u5f88\u96be\u5177\u4f53\u6c42\u89e3\u3002\u6240\u4ee5\u5f88\u591a\u7814\u7a76\u63d0\u51fa\u4e86Zoepptriz\u7684\u5404\u79cd\u8fd1\u4f3c\u3002\u5176\u4e2dAki and Richards (1980)\u7684\u7ebf\u6027\u8fd1\u4f3c\u7528\u7684\u6700\u5e7f\uff0c\u5c3d\u7ba1\u7b80\u5316\u4e86\u8ba1\u7b97\uff0c\u4f46\u662f\u8fd9\u4e9b\u8fd1\u4f3c\u65b9\u6cd5\u53ea\u9002\u7528\u4e8e\u5f39\u6027\u7279\u5f81\u5bf9\u6bd4\u8f83\u5c0f\u7684\u754c\u9762\uff0c\u8f83\u5c0f\u5165\u5c04\u89d2\u7684\u60c5\u51b5\u3002\u4e4b\u540e\u7684\u7814\u7a76\u57fa\u4e8e\u7cbe\u786e\u7684Zoepptriz\u65b9\u7a0b\u8fdb\u884c\u975e\u4e34\u754c\u89d2\u7684AVO\u53cd\u6f14\uff0c\u901a\u8fc7\u8fed\u4ee3\u7684\u65b9\u6cd5\u89e3\u51b3\uff0c\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u6c42\u89e3\u5f39\u6027\u7cfb\u6570\u3002 \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u9ad8\u6548\u7684\u5168\u53d8\u5206\u7b97\u6cd5(TV)\u57fa\u4e8eZoeppritz\u65b9\u7a0b\u7684\u6b63\u5219\u5316\u975e\u7ebf\u6027\u591a\u754c\u9762AVO\u53cd\u6f14\u3002\u4e0e\u6807\u51c6AVO\u53cd\u6f14\u6280\u672f\u7c7b\u4f3c\uff0c\u8003\u8651\u4e86\u9884\u4e34\u754c\u89d2\u7684\u53cd\u5c04\u54cd\u5e94;\u5229\u7528\u7ebf\u6027\u8fd1\u4f3c\u7684\u7b80\u6613\u6027\uff0c\u5f53\u53cd\u5c04\u632f\u5e45\u4e0e\u5f39\u6027\u6027\u8d28\u6216\u5176\u76f8\u53cd\u6027\u8d28\u6210\u7ebf\u6027\u5173\u7cfb\u65f6\uff0c\u4f7f\u7528\u7ebf\u6027\u8fd1\u4f3c\u6c42\u89e3\u3002 \u901a\u8fc7(Levenberg, 1944)\u7b97\u6cd5\u6c42\u89e3\u975e\u7ebf\u6027Zoeppritz\u65b9\u7a0b\uff0c\u540c\u65f6\u4f7f\u7528(\u5168\u5c40)\u7ebf\u6027\u903c\u8fd1\u8ba1\u7b97\u3002\u65b9\u6cd5\u91cd\u5199\u4e3a \u7b2c\u4e00\u6b65\u5bf9\u6a21\u578b\u53c2\u6570\u8fdb\u884c\u66f4\u65b0 \u7b2c\u4e8c\u6b65\u5bf9\u5408\u6210\u6570\u636e\u8fdb\u884c\u66f4\u65b0 \u8fd9\u4e2a\u7b56\u7565\u53ef\u5f3a\u52a0\u7ea6\u675f\uff0c\u4ee5\u4fdd\u8bc1\u53c2\u6570\u7a7a\u95f4\u4e2d\u754c\u9762\u7684\u5757\u72b6\u6027\u8d28\u3002 \u901a\u8fc7(Goldstein and Osher, 2009)\u8fed\u4ee3\u8fc7\u7a0b\u89e3\u51b3\u6a21\u578b\u66f4\u65b0\u65f6\u7684\u6b63\u5219\u5316\u95ee\u9898\u3002","title":"\u524d\u8a00"},{"location":"SeismicInversion/PaperNotes/#zoeppritz-equations","text":"Zoeppritz\u4e8e1919\u5e74\u63d0\u51fa\u7684\u65b9\u7a0b \\begin{align}&\\left[ \\begin{matrix} \\cos(\\theta)&-\\sin(\\delta_r)&\\cos(\\theta_t)&\\sin(\\delta_t)\\\\ \\sin(\\theta)&\\cos(\\delta_r)&-\\sin(\\theta_t)&\\cos(\\delta_t)\\\\ -\\cos(2\\delta_r)&\\frac{\\beta_1}{\\alpha_1}\\sin(2\\delta_r)&\\frac{\\rho_2\\alpha_2}{\\rho_1\\alpha_1}\\cos(2\\delta_t)&\\frac{\\rho_2\\beta_2}{\\rho_1\\alpha_1}\\sin(2\\delta_t)\\\\ \\sin(2\\theta)&\\frac{\\alpha_1}{\\beta_1}\\cos(2\\delta_r)&\\frac{\\rho_2\\beta_2^2\\alpha_2}{\\rho_1\\beta_1^2\\alpha_1}\\sin(2\\theta_t)&-\\frac{\\rho_2\\beta_2\\alpha_1}{\\rho_1\\beta_1\\beta_1}\\cos(2\\delta_t) \\end{matrix} \\right]\\notag\\\\ &\\pmb\\times \\left[\\begin{matrix} R_{pp}\\\\ R_{ps}\\\\ T_{pp}\\\\ T_{ps} \\end{matrix}\\right] =\\left[\\begin{matrix} \\cos(\\theta)\\\\ \\sin(\\theta)\\\\ \\cos(2\\delta_r)\\\\ \\sin(2\\theta) \\end{matrix}\\right]\\end{align} \\begin{align}&\\left[ \\begin{matrix} \\cos(\\theta)&-\\sin(\\delta_r)&\\cos(\\theta_t)&\\sin(\\delta_t)\\\\ \\sin(\\theta)&\\cos(\\delta_r)&-\\sin(\\theta_t)&\\cos(\\delta_t)\\\\ -\\cos(2\\delta_r)&\\frac{\\beta_1}{\\alpha_1}\\sin(2\\delta_r)&\\frac{\\rho_2\\alpha_2}{\\rho_1\\alpha_1}\\cos(2\\delta_t)&\\frac{\\rho_2\\beta_2}{\\rho_1\\alpha_1}\\sin(2\\delta_t)\\\\ \\sin(2\\theta)&\\frac{\\alpha_1}{\\beta_1}\\cos(2\\delta_r)&\\frac{\\rho_2\\beta_2^2\\alpha_2}{\\rho_1\\beta_1^2\\alpha_1}\\sin(2\\theta_t)&-\\frac{\\rho_2\\beta_2\\alpha_1}{\\rho_1\\beta_1\\beta_1}\\cos(2\\delta_t) \\end{matrix} \\right]\\notag\\\\ &\\pmb\\times \\left[\\begin{matrix} R_{pp}\\\\ R_{ps}\\\\ T_{pp}\\\\ T_{ps} \\end{matrix}\\right] =\\left[\\begin{matrix} \\cos(\\theta)\\\\ \\sin(\\theta)\\\\ \\cos(2\\delta_r)\\\\ \\sin(2\\theta) \\end{matrix}\\right]\\end{align}","title":"Zoeppritz equations"},{"location":"SeismicInversion/PaperNotes/#aki-and-richards-equation","text":"R_{pp}=\\zeta(\\overline\\theta)\\frac{\\varDelta\\alpha}{\\overline\\alpha}+\\eta(\\overline\\theta)\\frac{\\varDelta\\beta}{\\overline\\beta}+\\xi(\\overline\\theta)\\frac{\\varDelta\\rho}{\\overline\\rho}\\tag2 R_{pp}=\\zeta(\\overline\\theta)\\frac{\\varDelta\\alpha}{\\overline\\alpha}+\\eta(\\overline\\theta)\\frac{\\varDelta\\beta}{\\overline\\beta}+\\xi(\\overline\\theta)\\frac{\\varDelta\\rho}{\\overline\\rho}\\tag2 \u4e0e\u5f39\u6027\u53c2\u6570\u6bd4\u503c\u5448\u7ebf\u6027\u5173\u7cfb","title":"Aki and Richards equation"},{"location":"SeismicInversion/PaperNotes/#linearized-equation","text":"\u5bf9\u4e0a\u5f0f\u8fdb\u4e00\u6b65\u7b80\u5316\uff0c\u901a\u8fc7\u4e09\u4e2a\u8fd1\u4f3c \\kappa=\\frac12(\\frac{\\beta_1^2}{\\alpha_1^2}+\\frac{\\beta_2^2}{\\alpha_2^2})\\approx\\frac{\\beta^2}{\\alpha^2} \\kappa=\\frac12(\\frac{\\beta_1^2}{\\alpha_1^2}+\\frac{\\beta_2^2}{\\alpha_2^2})\\approx\\frac{\\beta^2}{\\alpha^2} , \\frac{\\varDelta x}{\\overline x}\\approx\\varDelta\\ln x \\frac{\\varDelta x}{\\overline x}\\approx\\varDelta\\ln x , \u5e73\u5747\u89d2\u5ea6 \\overline\\theta \\overline\\theta \u8fd1\u4f3c\u4e8e\u5165\u5c04\u89d2 \\theta \\theta ,\u5f97\u5230 R_{pp}=\\zeta(\\theta)\\varDelta\\ln(\\alpha)+\\eta(\\theta)\\varDelta\\ln(\\beta)+\\xi(\\theta)\\varDelta\\ln(\\rho)\\tag3 R_{pp}=\\zeta(\\theta)\\varDelta\\ln(\\alpha)+\\eta(\\theta)\\varDelta\\ln(\\beta)+\\xi(\\theta)\\varDelta\\ln(\\rho)\\tag3 \u8fd9\u79cd\u8fd1\u4f3c\u5728\u5c0f\u89d2\u5ea6\u65f6\u51c6\u786e\uff0c\u4f46\u89d2\u5ea6\u589e\u5927\u65f6\u4f1a\u53d8\u5f97\u4e0d\u51c6\u786e\u3002","title":"Linearized equation"},{"location":"SeismicInversion/PaperNotes/#nonlinear-avo-inversion-avo","text":"\u8fed\u4ee3\uff0c\u7c7b\u4f3c\u4e8e\u6700\u5c0f\u4e8c\u4e58\u6cd5 \\bold X^{k+1}=\\bold X^k+(\\bold F^T\\bold F+\\lambda \\bold I)^{-1}\\bold F^T(\\bold Y-f(e^{\\bold X^k})) \\bold X^{k+1}=\\bold X^k+(\\bold F^T\\bold F+\\lambda \\bold I)^{-1}\\bold F^T(\\bold Y-f(e^{\\bold X^k})) \u4f4e\u9891\u6a21\u578b\u901a\u5e38\u7531\u53e0\u52a0\u901f\u5ea6\u6216\u6d4b\u4e95\u66f2\u7ebf\u8ba1\u7b97\u5f97\u51fa\uff0c\u5e76\u7528\u4f5c\u5148\u9a8c\u4fe1\u606f\u3002","title":"NONLINEAR AVO INVERSION \u975e\u7ebf\u6027AVO\u53cd\u6f14"},{"location":"SeismicInversion/PaperNotes/#tv-regularization","text":"","title":"TV regularization \u5168\u53d8\u5206\u6b63\u5219\u5316"},{"location":"SeismicInversion/PaperNotes/#connection-to-the-bregman-iterative-method","text":"","title":"Connection to the Bregman iterative method"},{"location":"SeismicInversion/PaperNotes/#model-update-via-split-bregman-technique","text":"\u5728\u53cd\u6f14\u8fc7\u7a0b\u4e2d\u5bf9\u5f39\u6027\u53c2\u6570\u8fdb\u884c\u4e0d\u540c\u7684\u52a0\u6743\uff0c\u8be5\u6743\u91cd\u63a7\u5236\u6bcf\u4e2a\u53c2\u6570\u7684\u6536\u7f29/\u6b63\u5219\u5316\u91cf","title":"Model update via split Bregman technique"},{"location":"SeismicInversion/PaperNotes/#stopping-criterion","text":"based on Morozov\u2019s discrepancy principle, the iteration is stopped at the index k^* k^* \u5728\u8bef\u5dee\u9879\u4e0d\u662f\u968f\u673a\u7684\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u6839\u636e\u53ef\u7528\u6d4b\u4e95\uff08\u5730\u9762\u771f\u5b9e\u503c\uff09\u4e0e\u76f8\u5e94\u7684\u53cd\u5411\u53c2\u6570\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u5316\u6765\u786e\u5b9a\u6700\u4f18\u8fed\u4ee3\u3002","title":"Stopping criterion \u505c\u6b62\u8fed\u4ee3\u51c6\u5219"},{"location":"SeismicInversion/PaperNotes/#numerical-implementation","text":"","title":"NUMERICAL IMPLEMENTATION"},{"location":"SeismicInversion/PaperNotes/#simple-acoustic-impedance-inversion","text":"\u57fa\u4e8eZoepptriz\u65b9\u7a0b","title":"Simple acoustic-impedance inversion \u58f0\u963b\u6297\u53cd\u6f14"},{"location":"SeismicInversion/PaperNotes/#single-interface-model","text":"","title":"Single-interface model"},{"location":"SeismicInversion/PaperNotes/#_12","text":"\u672c\u6587\u63d0\u51fa\u7684\u7b97\u6cd5\u4f7f\u7528\u4e86\u4e00\u4e2a\u5168\u5c40\u7ebf\u6027\u8fd1\u4f3c\uff1b\u56e0\u6b64\uff0c\u5b83\u4e0d\u9700\u8981\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\u8ba1\u7b97Jacobian/Hessian\u77e9\u9635\u3002\u4f7f\u5f97\u8be5\u7b97\u6cd5\u975e\u5e38\u7075\u6d3b\u548c\u9ad8\u6548 In this paper, we have introduced a new algorithm for nonlinear seismic AVO inversion, using the exact Zoeppritz equations , for simultaneous estimation of the P-wave velocity, S-wave velocity, and density. Our strategy uses the traditional Aki and Richards equation to construct the Jacobian matrix for solving the original nonlinear problem. This allowed for developing a very efficient algorithm for the TV-regularized nonlinear AVO inversion that is difficult to carry out by other means. The synthetic and field data demonstrated that the proposed algorithm can accurately invert the P-wave velocity, S-wave velocity, and density from precritical reflection data. The accuracy and efficiency of this method make it a promising algorithm for inverting large-scale seismic data sets","title":"\u7ed3\u8bed"},{"location":"SeismicInversion/PaperNotes/#paper4","text":"","title":"PAPER4 \u57fa\u4e8e\u53e0\u524d\u5730\u9707\u53cd\u6f14\u7684\u6d41\u4f53\u8bc6\u522b\u65b9\u6cd5\u7814\u7a76\u8fdb\u5c55"},{"location":"SeismicInversion/PaperNotes/#paper5-avo-inversion-based-on-closed-loop-multitask-conditional-wasserstein-generative-adversarial-network","text":"\u57fa\u4e8e\u95ed\u73af\u591a\u4efb\u52a1\u6761\u4ef6Wasserstein\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u7684avo\u53cd\u6f14 https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=10078923&tag=1","title":"PAPER5 AVO Inversion Based on Closed-Loop Multitask Conditional Wasserstein Generative Adversarial Network"},{"location":"SeismicInversion/PaperNotes/#_13","text":"\u6807\u8bb0\u6570\u636e\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u5730\u9707\u53cd\u6f14\u7ed3\u679c\u7cbe\u5ea6\u4e0b\u964d\uff0c\u751a\u81f3\u4f4e\u4e8e\u57fa\u4e8e\u4f20\u7edf\u53cd\u6f14\u65b9\u6cd5\u7684\u53cd\u6f14\u7ed3\u679c\u3002\u6b64\u5916\uff0c\u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u5730\u9707\u53cd\u6f14\u7ed3\u679c\u666e\u904d\u5b58\u5728\u6a2a\u5411\u4e0d\u8fde\u7eed\u6027\u3002\u9488\u5bf9\u8fd9\u4e9b\u95ee\u9898\uff0c\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u95ed\u73af\u591a\u4efb\u52a1\u6761\u4ef6Wasserstein\u751f\u6210\u5bf9\u6297\u7f51\u7edc( CMcWGAN )\u7684AVO\u53cd\u6f14\u65b9\u6cd5\uff0c\u5373\u57fa\u4e8e\u751f\u6210\u5bf9\u6297\u7f51\u7edc( GAN )\u7684AVO\u53cd\u6f14\u65b9\u6cd5\u3002 \u8fd9\u53ef\u4ee5\u540c\u65f6\u51c6\u786e\u53cd\u6f14\u4e09\u4e2a\u5f39\u6027\u53c2\u6570\uff0c\u540c\u65f6\uff0c\u5229\u7528\u5f39\u6027\u53c2\u6570\u7684\u4f4e\u9891\u4fe1\u606f\u4f5c\u4e3a\u6761\u4ef6\u8f93\u5165\uff0c\u7f13\u89e3\u4e86\u53cd\u6f14\u7ed3\u679c\u7684\u6a2a\u5411\u4e0d\u8fde\u7eed\u95ee\u9898\u3002 \u76f8\u8f83\u4e8e\u4f20\u7edfAVO\u53cd\u6f14\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u7cbe\u5ea6\u548c\u9c81\u68d2\u6027","title":"\u6458\u8981"},{"location":"SeismicInversion/PaperNotes/#introduction","text":"AVO\u53cd\u6f14\u53ef\u4ee5\u6709\u6548\u5730\u9884\u6d4b\u5730\u4e0b\u4ecb\u8d28\u7684\u5f39\u6027\u53c2\u6570\uff0c\u4e3a\u50a8\u5c42\u9884\u6d4b\u548c\u6d41\u4f53\u8bc6\u522b\u63d0\u4f9b\u53ef\u9760\u7684\u7406\u8bba\u4f9d\u636e AVO\u53cd\u6f14\u65b9\u6cd5\u7684\u53d1\u5c55\uff1a - Zoeppritz\u65b9\u7a0b\u53ca\u5176\u8fd1\u4f3c - \u52a0\u6743\u53e0\u52a0\u6cd5\u5b9e\u73b0\u7ebf\u6027AVO\u53cd\u6f14 - \u8d1d\u53f6\u65af\u7f51\u7edc - \u57fa\u4e8eL1\u8303\u6570\u7684\u4f3c\u7136\u51fd\u6570\u548c\u5168\u53d8\u5dee( TV )\u6b63\u5219\u5316\u7ea6\u675f - \u57fa\u4e8e\u9a6c\u5c14\u79d1\u592b\u968f\u673a\u573a( MRF )\u7684\u6b63\u5219\u5316 - L\u66f2\u7ebf\u548c\u5e7f\u4e49\u4ea4\u53c9\u9a8c\u8bc1( GCV ) - \u65b9\u5411\u5168\u53d8\u5206( DTV )\u6b63\u5219\u5316 - \u673a\u5668\u5b66\u4e60 - \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc - \u7269\u7406\u5f15\u5bfc\u795e\u7ecf\u7f51\u7edc( PGNN ) - \u95ed\u73afCNN - \u751f\u6210\u5bf9\u6297\u7f51\u7edcGAN \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u95ed\u73af\u591a\u4efb\u52a1\u6761\u4ef6WGAN ( CMcWGAN )\u7684\u53cd\u6f14\u65b9\u6cd5\uff0c\u5b83\u5c06\u95ed\u73af\u6846\u67b6\u548c\u57fa\u4e8eGAN\u7684\u7f51\u7edc\u76f8\u7ed3\u5408\uff0c\u8bbe\u8ba1\u4e86GAN\u7684\u7ed3\u6784\uff0c\u5b9e\u73b0\u4e863\u4e2a\u5f39\u6027\u53c2\u6570\u540c\u65f6\u53cd\u6f14\uff0c\u53ef\u4ee5\u5b9e\u73b0\u591a\u4efb\u52a1\u5b66\u4e60\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u63d0\u9ad8\u7f51\u7edc\u8bad\u7ec3\u7684\u9c81\u68d2\u6027\uff0c\u4f7f\u7528Wasserstein\u8ddd\u79bb\u4ee3\u66ff\u4ea4\u53c9\u71b5( CE )\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u4f7f\u7528cGAN\u901a\u8fc7\u5f15\u5165\u4f4e\u9891\u4fe1\u606f\u5230\u7f51\u7edc\u7f13\u89e3\u6a2a\u5411\u4e0d\u8fde\u7eed\u6027\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u5177\u6709\u66f4\u9ad8\u7684\u53cd\u6f14\u7cbe\u5ea6\u548c\u66f4\u597d\u7684\u6297\u566a\u6027\u3002","title":"INTRODUCTION"},{"location":"SeismicInversion/PaperNotes/#cmcwgan-framework-and-neural-network-structure","text":"CMcWGAN\u7531\u4e24\u4e2a\u5b50\u7f51\u7edc\u7ec4\u6210\uff1a\u53cd\u6f14\u7f51\u7edc\u548c\u6b63\u6f14\u7f51\u7edc G\u4e3a\u53cd\u6f14\u7f51\u7edc\u751f\u6210\u5668\u3002DVp\u3001DVs\u548cD\u03c1\u5206\u522b\u4e3a\u7eb5\u6ce2\u901f\u5ea6\u3001\u6a2a\u6ce2\u901f\u5ea6\u548c\u5bc6\u5ea6\u5bf9\u5e94\u7684\u5224\u522b\u5668\u3002F\u4e3a\u6b63\u6f14\u7f51\u7edc G \u7ed3\u6784\u5982\u4e0b\uff1a feature block \u5176\u4e2d\u7279\u5f81\u63d0\u53d6block\u7ed3\u6784\u4e3a U-net \u7ed3\u6784 N\u4ee3\u8868\u5165\u5c04\u89d2\uff0ca\u4ee3\u8868\u6570\u636e\u957f\u5ea6 \u5c06\u6bcf\u4e2a\u4e0b\u91c7\u6837\u548c\u5bf9\u5e94\u7684\u4e0a\u91c7\u6837\u7279\u5f81\u7684\u6570\u636e\u8fdb\u884c\u8df3\u8dc3\u62fc\u63a5\uff0c\u878d\u5408\u6570\u636e\u7684\u6d45\u5c42\u7279\u5f81\u548c\u6df1\u5c42\u7279\u5f81\u3002\u8fd9\u662f\u89e3\u51b3\u4f20\u7edf\u5168\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u7684\u6709\u6548\u65b9\u6cd5 \u5728ASPP\u7ed3\u6784\u4e2d\uff0c\u8f83\u5c0f\u7684\u6838\u5c3a\u5bf8\u53ef\u4ee5\u6355\u83b7\u6570\u636e\u7684\u9ad8\u9891\u5185\u5bb9\uff0c\u56e0\u6b64\uff0cASPP\u7684\u6838\u5c3a\u5bf8\u5747\u4e3a3\u00d71\uff0c\u901a\u8fc7\u7a7a\u6d1e\u5377\u79ef\u589e\u5927\u611f\u53d7\u91ce\uff0c\u6355\u83b7\u591a\u4e2a\u5c3a\u5ea6\u7684\u7279\u5f81\u3002 \u5728G\u7ed3\u6784\u4e2d\uff0cinversion block\u4f7f\u7528\u4e86\u4e09\u4e2a1-D U-net\uff0c\u8be5\u5757\u7684U - Net\u6bd4\u7279\u5f81\u63d0\u53d6\u5757\u5177\u6709\u66f4\u6d45\u7684\u6df1\u5ea6\u548c\u66f4\u7b80\u5355\u7684\u7ed3\u6784\u3002\u53c2\u8003cGAN\u7684\u7406\u8bba\uff0c\u8fd9\u91cc\u7684\u4e09\u4e2aunet\u5747\u4e3a\u53cc\u901a\u9053\u8f93\u5165\uff0c\u4e00\u4e2a\u4e3a\u7279\u5f81\u63d0\u53d6\u5230\u7684\u9ad8\u9891\u4fe1\u606f\uff0c\u53e6\u4e00\u4e2a\u4e3a\u9884\u8bbe\u4f4e\u9891\u4fe1\u606f\u3002 discriminator \u5224\u522b\u5668\u7ed3\u6784 \u5224\u522b\u5668\u4e3a3\u4e2a\u7ed3\u6784\u76f8\u540c\u7684\u7f51\u7edc\uff0c\u672c\u6587\u91c7\u7528\u4e00\u7ef4\u9a6c\u5c14\u79d1\u592b\u5224\u522b\u5668\u4ee3\u66ff\u4f20\u7edf\u7684GAN\u5224\u522b\u5668\u8fdb\u884c\u591a\u4efb\u52a1cGAN\u3002\u9a6c\u5c14\u79d1\u592b\u5224\u522b\u5668\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u77e9\u9635\u6216\u5411\u91cf\uff0c\u800c\u4e0d\u662f\u4f20\u7edfGAN\u4e2d\u76840\u62161\u8f93\u51fa\u3002\u8fd9\u610f\u5473\u7740\u8f93\u51fa\u7684\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u8f93\u5165\u6570\u636e\u7684\u4e00\u4e2a\u8865\u4e01\u3002\u8fd9\u6837\u53ef\u4ee5\u589e\u5f3a\u53cd\u6f14\u7ed3\u679c\u4e2d\u9ad8\u9891\u7ec6\u8282\u7684\u523b\u753b\u3002\u5224\u522b\u5668\u540c\u6837\u662f\u4f4e\u9891\u9ad8\u9891\u53cc\u901a\u9053\u8f93\u5165\uff0c\u6700\u7ec8\u8f93\u51fa\u5927\u5c0f\u4e3a\u8f93\u5165\u76841/16 F \u6b63\u6f14\u7f51\u7edc \u6211\u4eec\u5728AVO\u53cd\u6f14\u4e2d\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u4ee3\u66ff\u57fa\u4e8e\u7269\u7406\u7684\u65b9\u7a0b\u8fdb\u884c\u5730\u9707\u6b63\u6f14\u3002\u7531\u4e8eU - Net\u5728\u5730\u9707\u6b63\u6f14\u65b9\u9762\u4e5f\u5177\u6709\u826f\u597d\u7684\u6027\u80fd\uff0c\u56e0\u6b64\u6211\u4eec\u5c06U - Net\u4f5c\u4e3aAVO\u6b63\u6f14\u7f51\u7edc(F)\uff0c\u5b9e\u73b0\u5f39\u6027\u53c2\u6570\u5230\u5730\u9707\u89d2\u9053\u96c6\u7684\u6620\u5c04\u3002F\u7684\u7ed3\u6784\u5982\u4e0aUnet\u3002\u5b83\u901a\u8fc7\u4e09\u4e2a\u901a\u9053\u5c06\u4e09\u4e2a\u5f39\u6027\u53c2\u6570\u5206\u522b\u8f93\u5165\u7f51\u7edc\uff1b\u6240\u4ee5N=3\u3002\u6700\u7ec8\u5f97\u5230\u89d2\u9053\u96c6","title":"CMcWGAN Framework and Neural Network Structure"},{"location":"SeismicInversion/PaperNotes/#loss-function","text":"","title":"Loss function"},{"location":"SeismicInversion/PaperNotes/#_14","text":"\\begin{aligned} & L_{V p}^d=\\frac{1}{m} \\sum_i^m\\left[-D_{V p}\\left(V p^{\\text {label }} \\mid V p^{\\text {low }}\\right)\\right. \\left.+D_{V p}\\left(G\\left(S \\mid V p^{\\text {low }}\\right) \\mid V p^{\\text {low }}\\right)+\\lambda \\mathrm{gp}_{V p}\\right] \\\\ & L_{V s}^d=\\frac{1}{m} \\sum_i^m\\left[-D_{V s}\\left(V s^{\\text {label }} \\mid V s^{\\text {low }}\\right)\\right. \\left.+D_{V s}\\left(G\\left(S \\mid V s^{\\text {low }}\\right) \\mid V s^{\\text {low }}\\right)+\\lambda \\mathrm{gp}_{V s}\\right] \\\\ & L_\\rho^d=\\frac{1}{m} \\sum_i^m\\left[-D_\\rho\\left(\\rho^{\\text {label }} \\mid \\rho^{\\text {low }}\\right)\\right. \\left.+D_\\rho\\left(G\\left(S \\mid \\rho^{\\mathrm{low}}\\right) \\mid \\rho^{\\mathrm{low}}\\right)+\\lambda \\mathrm{gp}_\\rho\\right] \\\\ & \\mathrm{gp}=E_{\\tilde{x}, y}\\left[\\left(\\left\\|\\nabla_{\\tilde{x}} D(\\tilde{x}, y)\\right\\|_2-1\\right)^2\\right] \\\\ & \\tilde{x}=t x+(1-t) G(y) \\\\ \\end{aligned} \\begin{aligned} & L_{V p}^d=\\frac{1}{m} \\sum_i^m\\left[-D_{V p}\\left(V p^{\\text {label }} \\mid V p^{\\text {low }}\\right)\\right. \\left.+D_{V p}\\left(G\\left(S \\mid V p^{\\text {low }}\\right) \\mid V p^{\\text {low }}\\right)+\\lambda \\mathrm{gp}_{V p}\\right] \\\\ & L_{V s}^d=\\frac{1}{m} \\sum_i^m\\left[-D_{V s}\\left(V s^{\\text {label }} \\mid V s^{\\text {low }}\\right)\\right. \\left.+D_{V s}\\left(G\\left(S \\mid V s^{\\text {low }}\\right) \\mid V s^{\\text {low }}\\right)+\\lambda \\mathrm{gp}_{V s}\\right] \\\\ & L_\\rho^d=\\frac{1}{m} \\sum_i^m\\left[-D_\\rho\\left(\\rho^{\\text {label }} \\mid \\rho^{\\text {low }}\\right)\\right. \\left.+D_\\rho\\left(G\\left(S \\mid \\rho^{\\mathrm{low}}\\right) \\mid \\rho^{\\mathrm{low}}\\right)+\\lambda \\mathrm{gp}_\\rho\\right] \\\\ & \\mathrm{gp}=E_{\\tilde{x}, y}\\left[\\left(\\left\\|\\nabla_{\\tilde{x}} D(\\tilde{x}, y)\\right\\|_2-1\\right)^2\\right] \\\\ & \\tilde{x}=t x+(1-t) G(y) \\\\ \\end{aligned} \u5176\u4e2d\uff0cm\u4e3a\u6807\u8bb0\u6570\u636e\u7684\u4e2a\u6570\uff0cS\u4e3a\u6709\u6807\u6ce8\u6570\u636e\u7684\u5730\u9707\u89d2\u5ea6\u9053\u96c6\uff0cgp\u4e3a\u68af\u5ea6\u60e9\u7f5a\uff0c\u6ee1\u8db31-Lipschitz\u7ea6\u675f\uff0c \\lambda \\lambda \u4e3a\u7ea6\u675f\u7cfb\u6570\u5728gp\u7684\u8868\u8fbe\u5f0f\u4e2d\uff0cy\u662f\u4f5c\u4e3a\u751f\u6210\u5668\u8f93\u5165\u7684\u539f\u59cb\u6570\u636e\u3002 \\nabla_{\\tilde{x}} \\nabla_{\\tilde{x}} \u662f\u6cbf \\tilde{x} \\tilde{x} \u65b9\u5411\u7684\u68af\u5ea6\u8ba1\u7b97\u3002 \\tilde{x} \\tilde{x} \u968f\u673a\u91c7\u6837\u4e8e\u5728x\u4f5c\u4e3a\u6807\u7b7e\u548c\u5bf9\u5e94\u7684\u751f\u6210\u6570\u636eG (y)\u4e4b\u95f4\u7684\u76f4\u7ebf\u4e0a\u3002","title":"\u4e09\u4e2a\u5224\u522b\u5668\u7684\u635f\u5931\u51fd\u6570"},{"location":"SeismicInversion/PaperNotes/#_15","text":"\\begin{aligned} & L^g=\\frac{1}{m} \\sum_i^m\\left[-D_{V_p}\\left(G\\left(S \\mid V p^{\\text {low }}\\right) \\mid V p^{\\text {low }}\\right)\\right. -D_{V s}\\left(G\\left(S \\mid V s^{\\text {low }}\\right) \\mid V s^{\\text {low }}\\right) \\\\ & \\left.-D_\\rho\\left(G\\left(S \\mid \\rho^{\\text {low }}\\right) \\mid \\rho^{\\text {low }}\\right)\\right] \\text {. } \\\\ \\end{aligned} \\begin{aligned} & L^g=\\frac{1}{m} \\sum_i^m\\left[-D_{V_p}\\left(G\\left(S \\mid V p^{\\text {low }}\\right) \\mid V p^{\\text {low }}\\right)\\right. -D_{V s}\\left(G\\left(S \\mid V s^{\\text {low }}\\right) \\mid V s^{\\text {low }}\\right) \\\\ & \\left.-D_\\rho\\left(G\\left(S \\mid \\rho^{\\text {low }}\\right) \\mid \\rho^{\\text {low }}\\right)\\right] \\text {. } \\\\ \\end{aligned} \u6211\u4eec\u4f7f\u7528\u4e86\u5faa\u73af\u4e00\u81f4\u635f\u5931\u51fd\u6570\uff0cG\u548cF\u7684\u4e92\u4e3a\u8f93\u5165\u8f93\u51fa\uff0c\u56e0\u6b64\uff0cG\u548cF\u64cd\u4f5c\u7684\u6570\u636e\u90fd\u662f\u95ed\u73af\u7684\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4ec5\u7531\u5355\u4e2a\u7f51\u7edcG\u6216F\u64cd\u4f5c\u7684\u6570\u636e\u610f\u5473\u7740\u5f00\u73af\u3002\u6b64\u5916\uff0c\u6839\u636eAVO\u53cd\u6f14\u7684\u9700\u6c42\uff0c\u5bf9\u5faa\u73af\u4e00\u81f4\u635f\u5931\u51fd\u6570\u8fdb\u884c\u4e86\u6539\u8fdb\u3002\u6b64\u5916\uff0c \u6211\u4eec\u4f7f\u7528\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee(MAE)\u4ee3\u66ff\u5747\u65b9\u8bef\u5dee(mse)\u4f5c\u4e3a\u635f\u5931\u51fd\u6570 \uff0c\u4ee5\u63d0\u9ad8\u8bad\u7ec3\u7684\u9c81\u68d2\u6027\u3002\u5f00\u73af\u635f\u5931\u51fd\u6570\u5982\u4e0b \\begin{aligned} & L_{\\text {open }}^1=\\frac{1}{m} \\sum_i^m \\| G\\left(S \\mid V p^{\\text {low }}\\right)-V p^{\\text {label }} \\mid +\\left|G\\left(S \\mid V s^{\\text {low }}\\right)-V s^{\\text {labcl }}\\right| \\\\ & \\left.+\\left|G\\left(S \\mid \\rho^{\\text {low }}\\right)-\\rho^{\\text {labcl }}\\right|\\right] \\\\ & L_{\\mathrm{open}}^2=\\frac{1}{m} \\sum_i^m\\left[\\left|F\\left(V p^{\\text {label }}, V s^{\\text {labcl }}, \\rho^{\\text {label }}\\right)-S\\right|\\right] . \\\\ & \\end{aligned} \\begin{aligned} & L_{\\text {open }}^1=\\frac{1}{m} \\sum_i^m \\| G\\left(S \\mid V p^{\\text {low }}\\right)-V p^{\\text {label }} \\mid +\\left|G\\left(S \\mid V s^{\\text {low }}\\right)-V s^{\\text {labcl }}\\right| \\\\ & \\left.+\\left|G\\left(S \\mid \\rho^{\\text {low }}\\right)-\\rho^{\\text {labcl }}\\right|\\right] \\\\ & L_{\\mathrm{open}}^2=\\frac{1}{m} \\sum_i^m\\left[\\left|F\\left(V p^{\\text {label }}, V s^{\\text {labcl }}, \\rho^{\\text {label }}\\right)-S\\right|\\right] . \\\\ & \\end{aligned} \u95ed\u73af\u635f\u5931\u51fd\u6570\u7531\u6b63\u6f14\u5730\u9707\u6570\u636e\u7684\u635f\u5931\uff0c\u53cd\u6f14\u4e09\u53c2\u6570\u7684\u635f\u5931\uff0c\u672a\u6807\u6ce8\u6570\u636e\u7684\u6b63\u6f14\u635f\u5931\u7ec4\u6210 \\begin{aligned} & L_{\\text {close }}^1=\\frac{1}{m} \\sum_i^m\\left[\\left|F\\left(G\\left(S \\mid V p^{\\text {low }}\\right), G\\left(S \\mid V s^{\\text {low }}\\right), G\\left(S \\mid \\rho^{\\text {low }}\\right)\\right)-S\\right|\\right] \\\\ & L_{\\text {close }}^2=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid V p^{\\text {low }}\\right)-V p^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^3=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid V s^{\\text {low }}\\right)-V s^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^4=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid \\rho^{\\text {low }}\\right)-\\rho^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^5=\\frac{1}{M} \\sum_i^M\\left[\\mid F\\left(G\\left(S^* \\mid V p^{\\text {low* }}\\right), G\\left(S^* \\mid V s^{\\text {low* }}\\right)\\right. \\text {, }\\right. \\\\ & \\left.\\left.G\\left(S^* \\mid \\rho^{\\text {low* }}\\right)\\right)-S^* \\mid\\right] \\\\ & \\end{aligned} \\begin{aligned} & L_{\\text {close }}^1=\\frac{1}{m} \\sum_i^m\\left[\\left|F\\left(G\\left(S \\mid V p^{\\text {low }}\\right), G\\left(S \\mid V s^{\\text {low }}\\right), G\\left(S \\mid \\rho^{\\text {low }}\\right)\\right)-S\\right|\\right] \\\\ & L_{\\text {close }}^2=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid V p^{\\text {low }}\\right)-V p^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^3=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid V s^{\\text {low }}\\right)-V s^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^4=\\frac{1}{m} \\sum_i^m\\left[\\left|G\\left(F\\left(V p^{\\text {label }}, V s^{\\text {label }}, \\rho^{\\text {label }}\\right) \\mid \\rho^{\\text {low }}\\right)-\\rho^{\\text {label }}\\right|\\right] \\\\ & L_{\\text {close }}^5=\\frac{1}{M} \\sum_i^M\\left[\\mid F\\left(G\\left(S^* \\mid V p^{\\text {low* }}\\right), G\\left(S^* \\mid V s^{\\text {low* }}\\right)\\right. \\text {, }\\right. \\\\ & \\left.\\left.G\\left(S^* \\mid \\rho^{\\text {low* }}\\right)\\right)-S^* \\mid\\right] \\\\ & \\end{aligned} \u6545\u7efc\u4e0a\uff0c\u6700\u7ec8\u7684\u751f\u6210\u5668\u635f\u5931\u51fd\u6570\u4e3a L_{I,L} = L^g+\\beta(L^1_{open}+L^2_{open})+\\alpha(L^1_{close}+L^2_{close}+L^3_{close}+L^4_{close}+L^5_{close}) L_{I,L} = L^g+\\beta(L^1_{open}+L^2_{open})+\\alpha(L^1_{close}+L^2_{close}+L^3_{close}+L^4_{close}+L^5_{close}) \u5176\u4e2d \\alpha,\\beta(\\beta \\gg \\alpha) \\alpha,\\beta(\\beta \\gg \\alpha) \u4e3a\u7ea6\u675f\u7cfb\u6570\uff0c\u5206\u522b\u63a7\u5236\u5f00\u73af\u548c\u95ed\u73af\u90e8\u5206\u7684\u8d21\u732e\u3002","title":"\u751f\u6210\u5668\u7684\u635f\u5931\u51fd\u6570"},{"location":"SeismicInversion/PaperNotes/#_16","text":"\u9996\u5148\u5c06\u5e26\u6807\u7b7e\u6570\u636e\u7ec4\u4f5c\u4e3a\u8f93\u5165\u8bad\u7ec3\u5224\u522b\u5668 \u8bad\u7ec3G\u548cF \u5e26\u6807\u7b7e\u6570\u636e\u7531\u7cbe\u786eZoeppritz\u65b9\u7a0b\u5f97\u5230 \u5728\u4e00\u4e2a\u8bad\u7ec3epoch\u5185\uff0c\u5224\u522b\u5668\u8bad\u7ec3\u4e24\u6b21\uff0cG\u548cF\u8bad\u7ec3\u4e00\u6b21\u3002\u6210\u4e3a\u5bf9\u6297\u8bad\u7ec3 \u8bad\u7ec3\u8d85\u53c2\u6570\u8bbe\u5b9a \u7ea6\u675f\u7cfb\u6570\u5206\u522b\u4e3a \\lambda = 10, \\alpha = 50, \\beta = 1500 \\lambda = 10, \\alpha = 50, \\beta = 1500 epoch = 300, batchsize = 34, \u5b66\u4e60\u7387=10exp-4, \u8870\u51cf\u7387\u4e3a0.99 \u8bc4\u4ef7\u6807\u51c6 \u4e3a\u4e86\u91cf\u5316\u53cd\u6f14\u7ed3\u679c\u7684\u51c6\u786e\u6027\uff0c\u6211\u4eec\u8ba1\u7b97\u4e86\u6bcf\u4e2a\u9053\u7684\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570( PCC )\u4ee5\u53ca\u53cd\u6f14\u7ed3\u679c\u4e0e\u771f\u5b9e\u6a21\u578b\u4e4b\u95f4\u7684mse\u3002\u4e24\u8005\u5747\u5b9a\u4e49 \\begin{aligned} & PCC(x,y)=\\frac{Cov(x,y)}{\\sqrt{Var(x)\\sqrt{Var(y)}}}\\\\ & mse(x,y) = \\frac{1}{M \\times N}\\sum^M_i\\sum^N_j(x_{i,j}-y_{i,j})^2 \\end{aligned} \\begin{aligned} & PCC(x,y)=\\frac{Cov(x,y)}{\\sqrt{Var(x)\\sqrt{Var(y)}}}\\\\ & mse(x,y) = \\frac{1}{M \\times N}\\sum^M_i\\sum^N_j(x_{i,j}-y_{i,j})^2 \\end{aligned} \u672c\u6587\u65b9\u6cd5\u7684\u53cd\u6f14\u7ed3\u679c\u4e0e\u5176\u4ed6\u4e24\u79cd\u65b9\u6cd5\u76f8\u6bd4\u5177\u6709\u66f4\u9ad8\u66f4\u7d27\u51d1\u7684PCC\u548c\u66f4\u4f4e\u7684mse \u6211\u4eec\u8fd8\u91c7\u7528Frechet\u8d77\u59cb\u8ddd\u79bb( FID )\u8bc4\u5206\u6765\u8bc4\u4f30\u53cd\u6f14\u7ed3\u679c\u3002\u5b83\u80fd\u6bd4inception score( IS )\u66f4\u597d\u5730\u6355\u6349\u751f\u6210\u7ed3\u679c\u4e0e\u771f\u5b9e\u7ed3\u679c\u7684\u76f8\u4f3c\u6027.\u5f53FID\u8bc4\u5206\u8d8a\u4f4e\u65f6\uff0c\u9884\u6d4b\u7ed3\u679c\u8d8a\u63a5\u8fd1\u771f\u5b9e\u6a21\u578b\u3002 \\mathbf{FID}(x,y)=||\\mu_x-\\mu_y||^2_2+\\mathbf{Tr}\\left(\\sum_x+\\sum_y-2\\left(\\sum_x\\sum_y\\right)^{\\frac{1}{2}}\\right) \\mathbf{FID}(x,y)=||\\mu_x-\\mu_y||^2_2+\\mathbf{Tr}\\left(\\sum_x+\\sum_y-2\\left(\\sum_x\\sum_y\\right)^{\\frac{1}{2}}\\right) \u5176\u4e2dx\u548cy\u5206\u522b\u4e3a\u9884\u6d4b\u7ed3\u679c\u548c\u771f\u5b9e\u6a21\u578b\uff0c \\mu \\mu \u4e3a\u5e73\u5747\u503c\u3002 \\sum \\sum \u4e3a\u7279\u5f81\u5411\u91cf\u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002 \\mathbf{Tr} \\mathbf{Tr} \u4e3a\u77e9\u9635\u7684\u8ff9 \u521b\u65b0\u70b9\uff1a - \u635f\u5931\u51fd\u6570\u4f7f\u7528Wasserstein\u8ddd\u79bb\u4ee3\u66ff\u4ea4\u53c9\u71b5\u3002 - \u5229\u7528\u5f39\u6027\u53c2\u6570\u7684\u4f4e\u9891\u4fe1\u606f\u4f5c\u4e3a\u6761\u4ef6\u8f93\u5165\u7f13\u89e3\u6a2a\u5411\u4e0d\u8fde\u7eed\u6027\u3002 - \u4f7f\u7528\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee( MAE )\u4ee3\u66ff\u5747\u65b9\u8bef\u5dee( mse )\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u6765\u63d0\u9ad8\u7f51\u7edc\u8bad\u7ec3\u7684\u9c81\u68d2\u6027","title":"\u8bad\u7ec3\u6d41\u7a0b"},{"location":"SeismicInversion/PaperNotes/#_17","text":"CMcWGAN\u5229\u7528\u5f39\u6027\u53c2\u6570\u7684\u4f4e\u9891\u4fe1\u606f\u4f5c\u4e3a\u6761\u4ef6\u8f93\u5165\u7f13\u89e3\u4e86\u6a2a\u5411\u4e0d\u8fde\u7eed\u95ee\u9898\uff0c\u63d0\u9ad8\u4e86\u53cd\u6f14\u7ed3\u679c\u7684\u7cbe\u5ea6\u3002\u5229\u7528\u5408\u6210\u5730\u9707\u89d2\u9053\u96c6\u7684\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cCMcWGAN\u6bd4cGAN\u5177\u6709\u66f4\u597d\u7684\u6a2a\u5411\u8fde\u7eed\u6027\uff0c\u6bd4\u4f20\u7edf\u7684\u8d1d\u53f6\u65afAVO\u53cd\u6f14\u65b9\u6cd5\u5177\u6709\u66f4\u9ad8\u7684\u53cd\u6f14\u7cbe\u5ea6\u3002\u5728\u6807\u7b7e\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\uff0cCMcWGAN\u80fd\u591f\u5b9e\u73b0\u9ad8\u7cbe\u5ea6\u7684AVO\u53cd\u6f14\uff0c\u5e76\u4e14\u5bf9\u542b\u566a\u89d2\u5ea6\u9053\u96c6\u5177\u6709\u9c81\u68d2\u6027\u3002","title":"\u7ed3\u8bba"},{"location":"SeismicInversion/PaperNotes/#paper6-avo-inversion-based-on-transfer-learning-and-low-frequency-model","text":"\u57fa\u4e8e\u8fc1\u79fb\u5b66\u4e60\u548c\u4f4e\u9891\u6a21\u578b\u7684AVO\u53cd\u6f14 https://ieeexplore.ieee.org/document/9634049","title":"PAPER6 AVO Inversion Based on Transfer Learning and Low-Frequency Model"},{"location":"SeismicInversion/PaperNotes/#_18","text":"\u5f53\u6df1\u5ea6\u5b66\u4e60\u76f4\u63a5\u7528\u4e8e\u5730\u9707\u53cd\u6f14\u65f6\uff0c\u4e3b\u8981\u5b58\u5728\u4e09\u4e2a\u95ee\u9898\u3002\u9996\u5148\uff0c\u6807\u7b7e\u6570\u636e\u4e0d\u8db3\u3002\u7b2c\u4e8c\uff0c\u9488\u5bf9\u4e00\u4e2a\u5de5\u4f5c\u533a\u57df\u8bad\u7ec3\u7684\u7f51\u7edc\u4e0d\u9002\u7528\u4e8e\u5176\u4ed6\u5de5\u4f5c\u533a\u57df\u3002\u7b2c\u4e09\uff0c\u53cd\u6f14\u7ed3\u679c\u5b58\u5728\u7a7a\u95f4\u4e0d\u8fde\u7eed\u548c\u4e0d\u7a33\u5b9a\u95ee\u9898\u3002\u672c\u6587\u63d0\u51fa\u4e86\u7ed3\u5408\u8fc1\u79fb\u5b66\u4e60\u548c\u4f4e\u9891\u5206\u91cf\u7ea6\u675f\u7684AVO\u53cd\u6f14\u65b9\u6cd5\u3002","title":"\u6458\u8981"},{"location":"SeismicInversion/PaperNotes/#introduction_1","text":"\u6839\u636e\u53cd\u6f14\u7b97\u6cd5\u7684\u4e0d\u540c\uff0c\u53ef\u4ee5\u5206\u4e3a\u8fed\u4ee3\u6b63\u6f14\u6a21\u62df\u65b9\u6cd5\u3001\u975e\u7ebf\u6027\u53cd\u6f14\u65b9\u6cd5\u548c\u7ebf\u6027\u53cd\u6f14\u65b9\u6cd5\u3002\u4f20\u7edf\u7684AVO\u53cd\u6f14\u662f\u5178\u578b\u7684\u75c5\u6001\u95ee\u9898\uff0c\u901a\u5e38\u9700\u8981\u8fdb\u884c\u5404\u79cd\u5047\u8bbe\uff0c\u53cd\u6f14\u5f97\u5230\u7684\u5bc6\u5ea6\u7ed3\u679c\u5e76\u4e0d\u53ef\u9760\u3002\u968f\u7740\u6df1\u5ea6\u5b66\u4e60\u7684\u5d1b\u8d77\uff0c\u8d8a\u6765\u8d8a\u591a\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u88ab\u7528\u5728\u4e86\u5730\u9707\u53cd\u6f14\u4e0a\uff0c\u4f8b\u5982CNN\u5bf9\u65f6\u7a7a\u6ce2\u5f62\u8fdb\u884c\u5206\u7c7b\uff0c\u8fdb\u884c\u963b\u6297\u53cd\u6f14\uff0c\u7531\u4e8e\u7f51\u7edc\u6df1\u5ea6\u589e\u52a0\u5f15\u8d77\u7684\u68af\u5ea6\u7206\u70b8\uff0c\u5f15\u7528\u4e86Resnet\u5bf9\u5730\u9707\u968f\u673a\u566a\u58f0\u7684\u8870\u51cf\uff0c\u53e0\u524d\u53cd\u6f14\u7b49\uff0c\u8fd9\u4e9b\u7f51\u7edc\u5747\u8bbe\u8ba1\u4e3a\u5355\u8f93\u5165(\u4ec5\u6709\u5730\u9707\u6570\u636e\u4f5c\u4e3a\u8f93\u5165)\uff0c\u7531\u4e8e\u5730\u9707\u6570\u636e\u4e3a\u5e26\u9650\u6570\u636e\uff0c\u7f3a\u5c11\u4f4e\u9891\u6210\u5206\uff0c\u5bfc\u81f4\u53cd\u6f14\u7ed3\u679c\u5177\u6709\u6a2a\u5411\u4e0d\u7a33\u5b9a\u6027\u548c\u4e0d\u8fde\u7eed\u6027\u3002 \u7531\u4e8e\u5ca9\u6027\u7684\u5dee\u5f02\uff0c\u4e00\u4e2a\u5de5\u533a\u8bad\u7ec3\u7684\u53cd\u6f14\u7f51\u7edc\u6a21\u578b\u4e0d\u80fd\u76f4\u63a5\u5e94\u7528\u4e8e\u5176\u4ed6\u5730\u533a\u7684\u5730\u9707\u53c2\u6570\u53cd\u6f14\u3002\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528\u8fc1\u79fb\u5b66\u4e60\u5f88\u6709\u5fc5\u8981\u3002 \u6545\u672c\u6587\u91c7\u7528\u8fc1\u79fb\u5b66\u4e60\u548c\u4f4e\u9891\u7ea6\u675f\u76f8\u7ed3\u5408\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u591a\u8f93\u5165\u7f51\u7edc\u7ed3\u6784\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u5b66\u4e60\u89d2\u5ea6\u5730\u9707\u8bb0\u5f55\u548c\u5f39\u6027\u53c2\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd8\u53ef\u4ee5\u7ea6\u675f\u8fdb\u884cAVO\u53cd\u6f14\uff0c\u5148\u8ba9\u7f51\u7edc\u5728\u968f\u673a\u5408\u6210\u6570\u636e\u4e2d\u8fdb\u884c\u5b66\u4e60\uff0c\u518d\u8fdb\u884c\u8fc1\u79fb\u5b66\u4e60\u5c0f\u6837\u672c\u6570\u636e \u521b\u65b0\u70b9 - \u8fc1\u79fb\u5b66\u4e60 - \u7f51\u7edc\u53cc\u8f93\u5165\uff08\u5730\u9707\u6570\u636e\u548c\u4f4e\u9891\u4fe1\u606f\uff09","title":"INTRODUCTION"},{"location":"SeismicInversion/PaperNotes/#_19","text":"\u5c06\u771f\u5b9e\u6570\u636e\uff08\u5f39\u6027\u53c2\u6570\uff09\u5f53\u4f5c\u76ee\u6807\u57df\u6570\u636e\uff0c\u968f\u673a\u751f\u6210\u4e00\u4e9b\u6570\u636e\uff08\u5f39\u6027\u53c2\u6570\uff09\u5f53\u4f5c\u6e90\u57df\u6570\u636e\uff0c\u9996\u5148\u4f7f\u7528\u6e90\u57df\u6570\u636e\u8fdb\u884c\u7f51\u7edc\u8bad\u7ec3\u5f97\u5230\u9884\u8bad\u7ec3\u6743\u91cd\uff0c\u4e4b\u540e\u8fdb\u884c\u76ee\u6807\u57df\u6570\u636e\u8fc1\u79fb\u5b66\u4e60 \u6b63\u6f14\u5408\u6210\u6570\u636e \u4f7f\u7528\u5408\u6210\u6570\u636e\u53ef\u4ee5\u51cf\u8f7b\u5c0f\u6837\u672c\u95ee\u9898\u7684\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u7531\u4e8eZoeppritz\u8fd1\u4f3c\u4e0d\u80fd\u53cd\u6620\u5168\u53cd\u5c04\u73b0\u8c61\uff0c\u8fd9\u91cc\u5408\u6210\u6570\u636e\u53cd\u5c04\u7cfb\u6570\u7531\u7cbe\u786eZoeppritz\u65b9\u7a0b\u5f97\u5230\uff0c\u4e4b\u540e\u901a\u8fc7\u548c\u5b50\u6ce2\u8936\u79ef\u5f97\u5230\u5408\u6210\u5730\u9707\u6570\u636e \u53cd\u6f14\u7f51\u7edc\u7ed3\u6784 \u7b2c\u4e00\u6b65\uff0c\u7528\u968f\u673a\u6570\u636e\u5bf9\u7f51\u7edc\u8fdb\u884c\u9884\u8bad\u7ec3\uff0c\u5f97\u5230\u5e7f\u4e49\u7f51\u7edc\u6a21\u578b\u3002\u7b2c\u4e8c\u6b65\uff0c\u5c06\u5e7f\u4e49\u7f51\u7edc\u6a21\u578b\u8f6c\u79fb\u5230\u76ee\u6807\u533a\u57df\uff0c\u5229\u7528\u76ee\u6807\u6570\u636e\u5bf9\u7f51\u7edc\u6a21\u578b\u8fdb\u884c\u4f18\u5316\uff0c\u5f97\u5230\u7b26\u5408\u76ee\u6807\u533a\u57df\u53cd\u6f14\u8981\u6c42\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u5b9e\u9a8c \u4e3a\u4e86\u6a21\u62df\u771f\u5b9e\u60c5\u51b5\u4e0b\u7684\u4e95\u6570\u8f83\u5c11\u7684\u95ee\u9898\uff0c\u76ee\u6807\u57df\u6570\u636e\u4e3aOverthrust\u6a21\u578b\u4e2d4\u9053\u4e95\u66f2\u7ebf\uff0c\u6b63\u6f14\u4f7f\u752840hz\u7684\u96f7\u514b\u5b50\u6ce2\uff0c\u5165\u5c04\u89d2\u4e3a0~30\u95f4\u96945\u00b0\u3002 \u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u7528\u5927\u91cf\u5408\u6210\u7684\u968f\u673a\u6570\u636e\u9884\u8bad\u7ec3\u7f51\u7edc\u3002\u7b2c\u4e8c\u6b65\uff0c\u5c06\u9884\u8bad\u7ec3\u7684\u7f51\u7edc\u7684\u6743\u91cd\u8fc1\u79fb\u5230\u5177\u6709\u76f8\u540c\u67b6\u6784\u7684\u76ee\u6807\u7f51\u7edc\u4e2d\u9488\u5bf9\u76ee\u6807\u57df\u6570\u636e\u8fdb\u884c\u5fae\u8c03\u3002 \u672c\u6587\u8fd8\u5bf9\u51bb\u7ed3\u4e0d\u540c\u5c42\u5bf9\u53cd\u6f14\u7ed3\u679c\u7684\u5f71\u54cd\u505a\u4e86\u5bf9\u6bd4\uff0c\u4e14\u8fdb\u884c\u4e86PCC\u5bf9\u6bd4\uff0c\u8bc1\u660e\u9884\u6d4b\u6548\u679c\u90fd\u5f88\u597d \u5bf9\u4e0d\u540c\u4e3b\u9891\u7684\u5730\u9707\u6570\u636e\u7684\u53cd\u6f14\u7ed3\u679c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u540c\u6837\u9884\u6d4b\u6548\u679c\u90fd\u5f88\u597d \u5bf9Mamousi2\u6570\u636e\u8fdb\u884c\u5b9e\u9a8c\uff0c\u6dfb\u52a05db\u7684\u9ad8\u65af\u566a\u58f0\uff0c\u672c\u6587\u7684\u65b9\u6cd5\u4f9d\u65e7\u8868\u73b0\u7740\u826f\u597d\u7684\u6027\u80fd","title":"\u6d41\u7a0b"},{"location":"SeismicInversion/PaperNotes/#paper7-nonlinear-multichannel-impedance-inversion-by-total-variation-regularization","text":"\u5168\u53d8\u5206\u6b63\u5219\u5316\u975e\u7ebf\u6027\u591a\u901a\u9053\u963b\u6297\u53cd\u6f14","title":"PAPER7 Nonlinear multichannel impedance inversion by total-variation regularization"},{"location":"SeismicInversion/PaperNotes/#_20","text":"\u58f0\u963b\u6297(AI)\u5206\u6790\u80fd\u591f\u4f7f\u5730\u9707\u53cd\u5c04\u6570\u636e\u6620\u5c04\u5230\u5ca9\u6027\uff0c\u53cd\u5c04\u7387\u8ba1\u7b97AI\u9700\u8981\u6c42\u89e3\u4e00\u4e2a\u6709\u7ea6\u675f\u7684\u975e\u7ebf\u6027\u53cd\u95ee\u9898\u3002\u9488\u5bf9\u591a\u901a\u9053\u5f62\u5f0f\u7684\u975e\u7ebf\u6027\u963b\u6297\u95ee\u9898\uff0c\u5728\u603b\u53d8\u5dee(TV)\u7ea6\u675f\u4e0b\uff0c\u63d0\u51fa\u4e86\u4e24\u79cd\u6709\u6548\u7684\u7b97\u6cd5\u6765\u6062\u590d\u5177\u6709\u5757\u72b6\u7ed3\u6784\u7684\u963b\u6297\u56fe\u3002","title":"\u6458\u8981"},{"location":"SeismicInversion/PaperNotes/#introduction_2","text":"\u4ece\u5e26\u9650\u5730\u9707\u8bb0\u5f55\u4e2d\u83b7\u5f97AI\u9700\u8981\u4e24\u6b65 deconvolution \u53cd\u8936\u79ef\uff0c\u7528\u4e8e\u8865\u507f\u7531\u9707\u6e90\u4ea7\u751f\u7684\u5b50\u6ce2\u7684\u5e26\u9650\u6027\u8d28\u6240\u9020\u6210\u7684\u8bb0\u5f55\u5730\u9707\u8bb0\u5f55\u7684\u7f3a\u5931\u9891\u7387 inversion \u7528AI\u53cd\u6f14\u8be5\u53cd\u5c04\u7cfb\u6570 \u7531\u4e8e\u4ea7\u751fAI\u7684\u9012\u63a8\u516c\u5f0f\u662f\u6309\u8ff9\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u4e0d\u5141\u8bb8\u963b\u6297\u56fe\u7684\u7a7a\u95f4\u6b63\u5219\u5316\u3002 \u53cd\u5c04\u7cfb\u6570\u4e0e\u963b\u6297\u53c2\u6570\u5448\u975e\u7ebf\u6027\u5173\u7cfb\uff1b\u56e0\u6b64\uff0c\u9700\u8981\u6c42\u89e3\u4e00\u4e2a\u6709\u7ea6\u675f\u7684\u975e\u7ebf\u6027\u53cd\u95ee\u9898\u6765\u4ece\u53cd\u5c04\u7387\u5256\u9762\u4e2d\u6062\u590d\u4e00\u4e2a\u6b63\u5219\u5316\u7684\u963b\u6297\u5256\u9762\u3002 \u672c\u6587\u65b9\u6cd5\uff1a\u4ece\u6570\u636e\u4e2d\u63d0\u53d6\u53cd\u5c04\u7387\u5256\u9762\u3002\u7136\u540e\u6c42\u89e3\u975e\u7ebf\u6027\u963b\u6297\u95ee\u9898\uff0c\u5c06\u751f\u6210\u7684\u53cd\u5c04\u7387\u6a21\u578b\u53cd\u6f14\u4e3a\u6b63\u5219\u5316\u7684AI\u6a21\u578b\uff0c\u4f7f\u7528\u5168\u53d8\u5206(TV)\u6b63\u5219\u5316\u6765\u652f\u6301\u5177\u6709\u5757\u72b6\u7ed3\u6784\u7684AI\u6a21\u578b\u3002","title":"Introduction"},{"location":"SeismicInversion/Util/","text":"SEGY\u5730\u9707\u6570\u636e \u00b6 \u7b80\u4ecb \u00b6 SEGY\uff08Seismic Exploration Geophysical Data\uff09\u683c\u5f0f\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4e8e\u5b58\u50a8\u5730\u9707\u52d8\u63a2\u6570\u636e\u7684\u6807\u51c6\u683c\u5f0f\u3002SEGY\u683c\u5f0f\u7684\u6570\u636e\u901a\u5e38\u5b58\u50a8\u5728\u78c1\u76d8\u6587\u4ef6\u4e2d\uff0c\u6587\u4ef6\u901a\u5e38\u4ee5\u201c.sgy\u201d\u6216\u201c.segy\u201d\u4f5c\u4e3a\u6269\u5c55\u540d\u3002 SEGY\u6587\u4ef6\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u6587\u4ef6\u5934\uff08File Header\uff09\u3001\u9053\u5934\uff08Trace Header\uff09\u548c\u6570\u636e\u90e8\u5206\uff08Data Section\uff09\u3002 \u6587\u4ef6\u5934\u5305\u542b\u4e86\u6240\u6709\u9053\u7684\u901a\u7528\u4fe1\u606f\uff0c\u4f8b\u5982\u6570\u636e\u7684\u91c7\u6837\u7387\u3001\u6570\u636e\u7c7b\u578b\u3001\u5730\u9707\u4eea\u5668\u7684\u53c2\u6570\u7b49\u3002\u6587\u4ef6\u5934\u901a\u5e38\u5305\u542b3200\u4e2a\u5b57\u8282\u7684\u4fe1\u606f\u3002 \u9053\u5934\u5305\u542b\u4e86\u5355\u4e2a\u5730\u9707\u9053\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u8be5\u9053\u7684\u5750\u6807\u4f4d\u7f6e\u3001\u65f6\u95f4\u4fe1\u606f\u3001\u9053\u53f7\u7b49\u3002\u9053\u5934\u7684\u957f\u5ea6\u901a\u5e38\u4e3a240\u4e2a\u5b57\u8282\u3002 \u6570\u636e\u90e8\u5206\u5305\u542b\u4e86\u6240\u6709\u7684\u5730\u9707\u6570\u636e\uff0c\u6bcf\u4e2a\u6570\u636e\u70b9\u90fd\u662f\u4e00\u4e2a16\u4f4d\u621632\u4f4d\u7684\u6574\u6570\u3002\u5728SEGY\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u662f\u4ee5\u201c\u9053\u201d\uff08Trace\uff09\u7684\u5f62\u5f0f\u7ec4\u7ec7\u7684\uff0c\u6bcf\u4e2a\u9053\u4ee3\u8868\u4e86\u4e00\u6b21\u5730\u9707\u8bb0\u5f55\u7684\u7ed3\u679c\uff0c\u9053\u7684\u6570\u91cf\u53d6\u51b3\u4e8e\u52d8\u63a2\u8fc7\u7a0b\u4e2d\u6240\u91c7\u96c6\u7684\u6570\u636e\u70b9\u6570\u548c\u52d8\u63a2\u9762\u79ef\u7684\u5927\u5c0f\u3002 \u603b\u4e4b\uff0cSEGY\u683c\u5f0f\u662f\u4e00\u79cd\u7075\u6d3b\u7684\u5730\u9707\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\uff0c\u5b83\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b58\u50a8\u5927\u91cf\u7684\u5730\u9707\u52d8\u63a2\u6570\u636e\uff0c\u5e76\u4e14\u80fd\u591f\u63d0\u4f9b\u9ad8\u6548\u7684\u6570\u636e\u8bfb\u53d6\u548c\u5904\u7406\u80fd\u529b\u3002 SEGY\u683c\u5f0f\u53ef\u4ee5\u5206\u4e3aIBM\u683c\u5f0f\u548cIEEE\u683c\u5f0f\u4e24\u79cd\u5b58\u50a8\u65b9\u5f0f\u3002 IBM\u683c\u5f0f\u662f\u6307IBM\u516c\u53f8\u7684\u4e8c\u8fdb\u5236\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u4e5f\u79f0\u4e3a\"big-endian\"\uff08\u5927\u7aef\uff09\u683c\u5f0f\u3002\u5728IBM\u683c\u5f0f\u4e2d\uff0c\u6d6e\u70b9\u6570\u5b58\u50a8\u4e3a\u56db\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u8868\u793a\u7b26\u53f7\u4f4d\u548c\u6307\u6570\u90e8\u5206\uff0c\u800c\u540e\u4e09\u4e2a\u5b57\u8282\u8868\u793a\u5c0f\u6570\u90e8\u5206\u3002\u5728IBM\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u7684\u5b57\u8282\u987a\u5e8f\u662f\u4ece\u5de6\u5230\u53f3\u7684\uff0c\u5373\u6700\u9ad8\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u6700\u5de6\u8fb9\uff0c\u6700\u4f4e\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u6700\u53f3\u8fb9\u3002\u56e0\u6b64\uff0cIBM\u683c\u5f0f\u4e5f\u79f0\u4e3a\"\u5927\u7aef\u5b57\u8282\u5e8f\"\uff08big-endian byte order\uff09\u3002 IEEE\u683c\u5f0f\u662f\u6307\u57fa\u4e8eIEEE\u6807\u51c6\u7684\u4e8c\u8fdb\u5236\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u4e5f\u79f0\u4e3a\"little-endian\"\uff08\u5c0f\u7aef\uff09\u683c\u5f0f\u3002\u5728IEEE\u683c\u5f0f\u4e2d\uff0c\u6d6e\u70b9\u6570\u5b58\u50a8\u4e3a\u56db\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u8868\u793a\u5c0f\u6570\u90e8\u5206\uff0c\u800c\u540e\u4e09\u4e2a\u5b57\u8282\u8868\u793a\u7b26\u53f7\u4f4d\u548c\u6307\u6570\u90e8\u5206\u3002\u5728IEEE\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u7684\u5b57\u8282\u987a\u5e8f\u662f\u4ece\u53f3\u5230\u5de6\u7684\uff0c\u5373\u6700\u4f4e\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u6700\u5de6\u8fb9\uff0c\u6700\u9ad8\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u6700\u53f3\u8fb9\u3002\u56e0\u6b64\uff0cIEEE\u683c\u5f0f\u4e5f\u79f0\u4e3a\"\u5c0f\u7aef\u5b57\u8282\u5e8f\"\uff08little-endian byte order\uff09\u3002 \u5b58\u50a8\u683c\u5f0f \u00b6 \u5177\u4f53\u5b58\u50a8\u683c\u5f0f\u89c1\u4e0b\u6587\u4ef6\u9644\u5f55 \u7528 C \u8bed\u8a00\u8bfb\u5199 SGY \u683c\u5f0f\u7684\u5730\u9707\u6570\u636e \u53ef\u4ee5\u901a\u8fc7\u5c06\u5730\u9707\u6570\u636e\u8bfb\u53d6\u5230hampson russell\u4e2d\uff0c\u70b9\u51fbheader editor\u67e5\u770b\u6587\u4ef6\u5934\u4e0e\u9053\u5934\u5404\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u4fbf\u4e8e\u8c03\u8bd5 \u5177\u4f53\u4ee3\u7801 \u00b6 import struct # \u6253\u5f00SEGY\u6587\u4ef6 with open ( 'gathers.sgy' , 'rb' ) as f : # \u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\u5934 bin_header = f . read ( 3600 ) # \u83b7\u53d6\u6587\u4ef6\u5934\u4e2d\u7684\u76f8\u5173\u4fe1\u606f sample_interval = struct . unpack_from ( \">h\" , bin_header , 3216 )[ 0 ] # >h\u8868\u793a\u5927\u7aefshort num_samples = struct . unpack_from ( \">h\" , bin_header , 3220 )[ 0 ] # \u8bfb\u53d6\u6240\u6709\u9053\u6570\u636e traces = [] # \u67d0\u4e00CDP\u7684\u9053\u96c6 offset = [] # \u540c\u4e00CDP\u9053\u96c6\u4e0d\u540c\u6570\u636e\u5bf9\u5e94\u7684\u504f\u79fb\u8ddd cdp = 330 while True : trace_header = f . read ( 240 ) # \u8bfb\u53d6\u9053\u5934 if not trace_header : break cdp_cur = struct . unpack_from ( \">i\" , trace_header , 20 )[ 0 ] # \u9053\u5934CDP if cdp_cur == cdp : amp = [] for _ in range ( num_samples ): amp . append ( struct . unpack_from ( \">h\" , f . read ( 2 ))[ 0 ]) # \u8fd9\u91cc\u7684\u5730\u9707\u6570\u636e\u662f\u4e24\u5b57\u8282\u7684short traces . append ( amp ) offset . append ( struct . unpack_from ( \">i\" , trace_header , 36 )[ 0 ]) # \u9053\u5934\u504f\u79fb\u8ddd else : data = f . read ( num_samples * 2 ) # \u66f4\u6539\u6587\u4ef6\u6307\u9488 continue \u5b50\u6ce2 \u00b6 \u5e38\u7528\u7684\u4e3aRicker\u5b50\u6ce2 \u751f\u6210Ricker\u5b50\u6ce2\u4ee3\u7801\u4e3a def z_ricker ( t , f0 ): \"\"\" Args: t: \u65f6\u57df\u62bd\u6837\u70b9,\u90fd\u4e3a\u6b63\u503c f0: \u4e3b\u9891 Returns: Ricker\u5b50\u6ce2\u65f6\u57df\u5e45\u503c \"\"\" t = np . concatenate (( np . flipud ( - t [ 1 :]), t ), axis = 0 ) # \u5c06\u65f6\u57df\u6620\u5c04\u81f3\u6574\u4e2a\u5b9e\u8f74 w = ( 1 - 2 * ( np . pi * f0 * t ) ** 2 ) * np . exp ( - (( np . pi * f0 * t ) ** 2 )) # Ricker\u5b50\u6ce2\u8ba1\u7b97\u516c\u5f0f return w AVO\u5efa\u6a21 \u00b6 \u4e24\u9879AVO\u65b9\u7a0b(AB method) \u00b6 R(\\theta) = R_0+B\\sin^2(\\theta) R(\\theta) = R_0+B\\sin^2(\\theta) \u5176\u4e2d R_0 R_0 \u4ee3\u8868\u96f6\u504f\u79fb\u8ddd\u53cd\u5c04\u7cfb\u6570\uff0c\u5373\u622a\u8ddd\uff0c B B \u4ee3\u8868\u68af\u5ea6,\u53ef\u4ee5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7b80\u5316\u5206\u6790 ,\u5bf9\u4e8e\u89d2\u5ea6\u5c0f\u4e8e 40 \u5ea6\u7684\u60c5\u51b5, \u7b2c\u4e09\u9879\u4e0d\u662f\u975e\u5e38\u91cd\u8981 Aki-Richards\u65b9\u7a0b \u00b6 Aki-Richards \u65b9\u7a0b\u662fZoeppritz \u65b9\u7a0b\u7684\u7ebf\u6027\u8fd1\u4f3c\u6a21\u62df\uff0c\u4ee3\u7801\u5b9e\u73b0\u89c1 Aki-Richards\u975e\u7ebf\u6027\u8fd1\u4f3c \\begin{array}{ll} R_P(\\theta)=a \\frac{\\Delta V_P}{2 V_P}+b \\frac{\\Delta V_S}{2 V_S}+c \\frac{\\Delta \\rho}{2 \\rho}, & \\text { where }: \\\\ a=\\frac{1}{\\cos ^2 \\theta}, & \\rho=\\frac{\\rho_2+\\rho_1}{2}, \\Delta \\rho=\\rho_2-\\rho_1, \\\\ b=-8 K \\sin ^2 \\theta, & V_P=\\frac{V_{P 2}+V_{P 1}}{2}, \\Delta V_P=V_{P 2}-V_{P 1}, \\\\ c=1-4 K \\sin ^2 \\theta, & V_S=\\frac{V_{S 2}+V_{S 1}}{2}, \\Delta V_S=V_{S 2}-V_{S 1}, \\\\ K=\\left(\\frac{V_S}{V_P}\\right)^2, & \\text { and } \\theta=\\frac{\\theta_1+\\theta_2}{2} . \\end{array} \\begin{array}{ll} R_P(\\theta)=a \\frac{\\Delta V_P}{2 V_P}+b \\frac{\\Delta V_S}{2 V_S}+c \\frac{\\Delta \\rho}{2 \\rho}, & \\text { where }: \\\\ a=\\frac{1}{\\cos ^2 \\theta}, & \\rho=\\frac{\\rho_2+\\rho_1}{2}, \\Delta \\rho=\\rho_2-\\rho_1, \\\\ b=-8 K \\sin ^2 \\theta, & V_P=\\frac{V_{P 2}+V_{P 1}}{2}, \\Delta V_P=V_{P 2}-V_{P 1}, \\\\ c=1-4 K \\sin ^2 \\theta, & V_S=\\frac{V_{S 2}+V_{S 1}}{2}, \\Delta V_S=V_{S 2}-V_{S 1}, \\\\ K=\\left(\\frac{V_S}{V_P}\\right)^2, & \\text { and } \\theta=\\frac{\\theta_1+\\theta_2}{2} . \\end{array} Aki-Richards\u65b9\u7a0b\u7684Wiggins\u5f62\u5f0f(ABC method) \u00b6 Wiggins(1983)\u7b49\u4eba\u53d1\u5c55\u4e86\u4e00\u79cd\u8fd1\u4f3c\u7684\uff0c\u91cd\u5199\u7684\u65b9\u7a0b\u5f62\u5f0f\u3002\u4ed6\u4eec\u5c06\u65b9\u7a0b\u5206\u4e3a\u4e09\u4e2a \u53cd\u5c04\u7cfb\u6570\u9879, \u6bcf\u4e00\u4e2a\u90fd\u6bd4\u524d\u9762\u7684\u9879\u66f4\u7b80\u5355 R_p(\\theta) = A+B\\sin^2(\\theta)+C\\tan^2(\\theta)\\sin^2(\\theta) R_p(\\theta) = A+B\\sin^2(\\theta)+C\\tan^2(\\theta)\\sin^2(\\theta) where: \\begin{aligned} & A=\\frac{1}{2}\\left[\\frac{\\Delta V_P}{V_p}+\\frac{\\Delta \\rho}{\\rho}\\right], \\\\ & B=\\frac{1}{2} \\frac{\\Delta V_P}{V_p}-4\\left[\\frac{V_S}{V_P}\\right]^2 \\frac{\\Delta V_S}{V_S}-2\\left[\\frac{V_S}{V_P}\\right]^2 \\frac{\\Delta \\rho}{\\rho}, \\\\ & C=\\frac{1}{2} \\frac{\\Delta V_P}{V_p} . \\end{aligned} \\begin{aligned} & A=\\frac{1}{2}\\left[\\frac{\\Delta V_P}{V_p}+\\frac{\\Delta \\rho}{\\rho}\\right], \\\\ & B=\\frac{1}{2} \\frac{\\Delta V_P}{V_p}-4\\left[\\frac{V_S}{V_P}\\right]^2 \\frac{\\Delta V_S}{V_S}-2\\left[\\frac{V_S}{V_P}\\right]^2 \\frac{\\Delta \\rho}{\\rho}, \\\\ & C=\\frac{1}{2} \\frac{\\Delta V_P}{V_p} . \\end{aligned} A\u662f\u622a\u8ddd, B\u662f\u68af\u5ea6, \u4ee5\u53caC\u662f\u66f2\u7387,\u6211\u4eec\u628a\u8fd9\u4e2a\u65b9\u7a0b\u79f0\u4e3aABC\u65b9\u7a0b Aki-Richards\u65b9\u7a0b\u7684Fatti\u5f62\u5f0f \u00b6 Fatti \u7b49\u4eba (Geophysics, September, 1994) \u53d1\u5c55\u4e86\u7b2c\u4e09\u4e2aAki-Richards\u65b9\u7a0b\u7684 \u8fd1\u4f3c\u516c\u5f0f\uff0c\u88ab\u5199\u6210: \\begin{gathered} R_P(\\theta)=c_1 R_P\\left(0^{\\circ}\\right)+c_2 R_S\\left(0^{\\circ}\\right)+c_3 R_D, \\text { \u5176\u4e2d: } \\\\ c_1=1+\\tan ^2 \\theta, c_2=-8 K \\sin ^2 \\theta, c_3=2 K \\sin ^2 \\theta-\\frac{1}{2} \\tan ^2 \\theta, K=\\left(\\frac{V_S}{V_P}\\right)^2, \\\\ R_P\\left(0^{\\circ}\\right)=\\frac{1}{2}\\left[\\frac{\\Delta V_P}{V_P}+\\frac{\\Delta \\rho}{\\rho}\\right], R_S\\left(0^{\\circ}\\right)=\\frac{1}{2}\\left[\\frac{\\Delta V_S}{V_S}+\\frac{\\Delta \\rho}{\\rho}\\right], \\text { and } R_D=\\frac{\\Delta \\rho}{\\rho} . \\end{gathered} \\begin{gathered} R_P(\\theta)=c_1 R_P\\left(0^{\\circ}\\right)+c_2 R_S\\left(0^{\\circ}\\right)+c_3 R_D, \\text { \u5176\u4e2d: } \\\\ c_1=1+\\tan ^2 \\theta, c_2=-8 K \\sin ^2 \\theta, c_3=2 K \\sin ^2 \\theta-\\frac{1}{2} \\tan ^2 \\theta, K=\\left(\\frac{V_S}{V_P}\\right)^2, \\\\ R_P\\left(0^{\\circ}\\right)=\\frac{1}{2}\\left[\\frac{\\Delta V_P}{V_P}+\\frac{\\Delta \\rho}{\\rho}\\right], R_S\\left(0^{\\circ}\\right)=\\frac{1}{2}\\left[\\frac{\\Delta V_S}{V_S}+\\frac{\\Delta \\rho}{\\rho}\\right], \\text { and } R_D=\\frac{\\Delta \\rho}{\\rho} . \\end{gathered} \u6ce8\u610f\u5230\u4e0a\u9762\u7684 R_p(0^\\circ) R_p(0^\\circ) \u9879\u548c\u524d\u9762\u65b9\u7a0b\u4e2d\u7684 A \u9879\u662f\u76f8\u540c\u7684\uff0c\u5e76\u4e14\u524d\u9762\u4e24\u9879\u7684\u7cfb\u6570\u548c\u539f\u65b9\u7a0b\u662f\u76f8\u540c\u7684\u3002 \u5bf9\u4e8eAki-Richards\u65b9\u7a0b\u5c0f\u7ed3 \u00b6 \u65b9\u7a0b\u540d\u79f0 \u6743\u7cfb\u6570 \u5f39\u6027\u53c2\u6570 Aki-Richards a,b,c a,b,c \\frac{\\Delta V_P}{2 V_P}, \\frac{\\Delta V_S}{2 V_S}, \\frac{\\Delta \\rho}{2 \\rho} \\frac{\\Delta V_P}{2 V_P}, \\frac{\\Delta V_S}{2 V_S}, \\frac{\\Delta \\rho}{2 \\rho} Wiggins et al 1,\\sin^2(\\theta),\\tan^2(\\theta)\\sin^2(\\theta) 1,\\sin^2(\\theta),\\tan^2(\\theta)\\sin^2(\\theta) A,B,C A,B,C Fatti et al c_1,c_2,c_3 c_1,c_2,c_3 R_P\\left(0^{\\circ}\\right), R_S\\left(0^{\\circ}\\right) R_D R_P\\left(0^{\\circ}\\right), R_S\\left(0^{\\circ}\\right) R_D \u6ce8\u610f\u5230\u6743\u7cfb\u6570 b, c \u548c c2, c3 \u5305\u542b\u7740 VS/VP \u6bd4\u7684\u5e73\u65b9\u4ee5\u53ca \\theta \\theta \u7684\u4e09\u89d2\u51fd\u6570. \u4f46\u662f, \u5728Wiggins\u7b49\u4eba\u7684\u65b9\u7a0b\u4e2d, \u8fd9\u4e2a\u9879\u5305\u542b\u5728\u5f39\u6027\u53c2\u6570 B \u4e2d \u4e0b\u9762\u662f\u5bf9\u4e8e\u4e09\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u5b66\u89e3\u91ca: - \u56e0\u4e3a\u5730\u9707\u9053\u5305\u542b\u7740\u6ce2\u963b\u6297\u7684\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u53ea\u968f\u901f\u5ea6\u6216\u8005\u53ea\u968f\u5bc6\u5ea6\u800c\u53d8\u5316\uff0c\u6240\u4ee5Aki-Richards\u65b9\u7a0b\u7684\u539f\u59cb\u5f62\u5f0f\u5f88\u5c11\u88ab\u4f7f\u7528 - Aki-Richards\u65b9\u7a0b\u7684A, B, C\u9879\u5bf9\u4e8e\u63d0\u53d6\u6709\u5173 AVO \u6548\u5e94\u7684\u7ecf\u9a8c\u4fe1\u606f (\u6bd4\u5982 A, \u88ab\u79f0\u4e3a\u622a\u8ddd, B, \u88ab\u79f0\u4e3a\u68af\u5ea6, \u4ee5\u53ca C, \u88ab\u79f0\u4e3a\u66f2\u7387)\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u8fd9\u4e9b\u7ecf\u9a8c\u4fe1\u606f\u53ef\u4ee5\u88ab\u5355\u72ec\u663e\u793a\u5206\u6790\u6216\u8005\u8fdb\u884c\u4ea4\u4f1a\u5206\u6790\u3002\u6743\u7cfb\u6570\u5e76\u4e0d\u9700\u8981\u6709\u5173VP/VS \u6bd4\u7684\u660e\u786e\u4fe1\u606f - Fatti \u7b49\u4eba\u53d1\u5c55\u7684\u65b9\u7a0b\u8ba9\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u6709\u5173 P \u548c S \u53cd\u5c04\u7387\u7684\u5b9a\u91cf\u4fe1\u606f\uff0c\u8fd9\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u53e0\u524d\u53cd\u6f14\u3002RP0 \u548c RS0 \u662f\u7ebf\u6027\u5316\u540e\u7684\u96f6\u89d2\u5ea6 P\u548c S \u6ce2\u53cd\u5c04\u7cfb\u6570 Shuey\u4e24\u9879AVO\u65b9\u7a0b \u00b6 Shuey (1985) \u4f7f\u7528VP, \\rho \\rho \u548c \\sigma \\sigma \u91cd\u5199\u4e86ABC\u65b9\u7a0b. \u4ec5\u4ec5\u68af\u5ea6\u548cABC \u65b9\u7a0b\u6709\u6240\u4e0d\u540c: B=A\\left[D-2(1+D)\\frac{1-2\\sigma}{1-\\sigma}\\right]+\\frac{\\Delta\\sigma}{(1-\\sigma)^2} B=A\\left[D-2(1+D)\\frac{1-2\\sigma}{1-\\sigma}\\right]+\\frac{\\Delta\\sigma}{(1-\\sigma)^2} where: D=\\frac{\\Delta V_p /V_p}{\\Delta V_p /V_p+\\Delta \\rho /\\rho}, \\sigma = \\frac{\\sigma_1+\\sigma_2}{2}, \\Delta\\sigma = \\sigma_2-\\sigma_1 D=\\frac{\\Delta V_p /V_p}{\\Delta V_p /V_p+\\Delta \\rho /\\rho}, \\sigma = \\frac{\\sigma_1+\\sigma_2}{2}, \\Delta\\sigma = \\sigma_2-\\sigma_1 \u4e0a\u9762\u7684\u65b9\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u662f\u901a\u8fc7\u5047\u8bbe \\sigma \\sigma = \u2153 (\u5373Vp/Vs=2)\uff0c\u53ef\u4ee5\u88ab\u6781\u5927\u5730\u7b80\u5316\u6210 \u4ee5\u4e0b\u5f62\u5f0f: B=A\\left[D-2(1+D)\\frac{1}{2}\\right]+\\frac{9\\Delta\\sigma}{4}=2.25\\Delta\\sigma-A B=A\\left[D-2(1+D)\\frac{1}{2}\\right]+\\frac{9\\Delta\\sigma}{4}=2.25\\Delta\\sigma-A \u8fd9\u53ef\u4ee5\u5f88\u76f4\u89c2\u5730\u5199\u6210\u4e24\u9879AVO\u65b9\u7a0b: R_p(\\theta) = A + (2.25\\Delta\\sigma-A)\\sin^2\\theta R_p(\\theta) = A + (2.25\\Delta\\sigma-A)\\sin^2\\theta AVO\u5206\u6790\uff08\u4f30\u8ba1\u622a\u8ddd\u4e0e\u68af\u5ea6\uff09 \u00b6 \u4ece\u504f\u79fb\u8ddd\u9053\u96c6\u6570\u636e\u8f6c\u6362\u5230\u89d2\u5ea6\u9053\u96c6\u6570\u636e \u00b6 \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5c06\u504f\u79fb\u8ddd\u9053\u96c6\u8f6c\u6362\u5230\u89d2\u5ea6\u9053\u96c6: TODO\u4ee3\u7801\u5b9e\u73b0 \u76f4\u5c04\u7ebf\u5047\u8bbe (\u5e38\u901f\u5ea6) \u5c04\u7ebf\u53c2\u6570\u5047\u8bbe (\u53d8\u901f\u5ea6\u5047\u8bbe) \u5c04\u7ebf\u8ffd\u8e2a (\u53d8\u901f\u5ea6) GPT\u7684\u56de\u7b54?? \u8bfb\u53d6\u5730\u9707\u6570\u636e \u4f7f\u7528NumPy\u7684loadtxt\u51fd\u6570\u8bfb\u53d6\u5730\u9707\u6570\u636e\uff0c\u6570\u636e\u5e94\u8be5\u4ee5\u6587\u672c\u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u50a8\u3002 \u5c06\u5730\u9707\u6570\u636e\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u6570\u7ec4 \u5c06\u8bfb\u53d6\u7684\u6587\u672c\u6570\u636e\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u9053\u96c6\u3002 \u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362 \u4f7f\u7528NumPy\u7684fft\u51fd\u6570\u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\u3002 \u8ba1\u7b97\u6bcf\u4e2a\u9053\u96c6\u7684\u504f\u79fb\u8ddd \u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u504f\u79fb\u8ddd\u8ba1\u7b97\uff0c\u5c06\u504f\u79fb\u8ddd\u4f5c\u4e3a\u6570\u7ec4\u7684\u7b2c\u4e00\u7ef4\uff0c\u9053\u6570\u4f5c\u4e3a\u6570\u7ec4\u7684\u7b2c\u4e8c\u7ef4\uff0c\u91cd\u65b0\u7ec4\u7ec7\u6570\u7ec4\u3002 \u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u53cd\u5085\u91cc\u53f6\u53d8\u6362 \u4f7f\u7528NumPy\u7684ifft\u51fd\u6570\u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u53cd\u5085\u91cc\u53f6\u53d8\u6362\u3002 \u5c06\u6bcf\u4e2a\u9053\u96c6\u8f6c\u6362\u4e3a\u89d2\u5ea6\u57df \u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884cHilbert\u53d8\u6362\uff0c\u7136\u540e\u8ba1\u7b97\u76f8\u4f4d\u89d2\u5ea6\u3002 \u5c06\u6bcf\u4e2a\u9053\u96c6\u8f6c\u6362\u4e3a\u89d2\u5ea6\u9053\u96c6 \u5c06\u6bcf\u4e2a\u9053\u96c6\u6309\u7167\u89d2\u5ea6\u503c\u91cd\u65b0\u6392\u5217\uff0c\u5373\u53ef\u5f97\u5230\u89d2\u5ea6\u9053\u96c6\u3002 \u62df\u5408\u4e00\u4e2a\u56de\u5f52\u66f2\u7ebf\u6765\u5339\u914d\u632f\u5e45\u62fe\u53d6\u503c\uff0c\u8fd9\u662f\u4e00\u4e2a\u89d2\u5ea6\u5e73\u65b9\u7684\u6b63\u5f26\u51fd\u6570\u5173\u7cfb. \u00b6 \u5c5e\u6027A\u548cB\u5f88\u5c11\u76f4\u63a5\u88ab\u5229\u7528\u3002\u901a\u5e38\uff0c\u5229\u7528\u7684\u662f\u4ece\u8fd9\u4e24\u4e2a\u5c5e\u6027\u4e2d\u8ba1\u7b97\u51fa\u5176\u4ed6\u7684 AVO \u5c5e \u6027\u3002 AVO\u79ef\uff1aA*B \u7684\u5256\u9762\u663e\u793a\u4e86\u5728\u6c14\u85cf\u4f4d\u7f6e\u7684\u9876\u5e95\u90fd\u4e3a\u6b63\u7684\u53cd\u5c04\u7279\u5f81 \u653e\u5927\u7684\u6cca\u677e\u6bd4\u53d8\u5316: A+B \u6b63\u6bd4\u4e8e\u6cca\u677e\u6bd4\u7684\u53d8\u5316 \u526a\u5207\u53cd\u5c04\u7387: A-B \u6b63\u6bd4\u4e8e\u526a\u5207\u53cd\u5c04\u7387 \u6d41\u4f53\u56e0\u5b50 \u6b63\u6f14\u76f8\u5173\u4ee3\u7801 \u00b6 Aki-Richards\u7ebf\u6027\u8fd1\u4f3c \u00b6 R_{pp}=\\zeta(\\theta)\\varDelta\\ln(\\alpha)+\\eta(\\theta)\\varDelta\\ln(\\beta)+\\xi(\\theta)\\varDelta\\ln(\\rho) R_{pp}=\\zeta(\\theta)\\varDelta\\ln(\\alpha)+\\eta(\\theta)\\varDelta\\ln(\\beta)+\\xi(\\theta)\\varDelta\\ln(\\rho) \u5176\u4e2d \\zeta(\\theta)=\\frac{1}{\\cos ^2 \\theta}, b=-8 K \\sin ^2 \\theta,c=1-4 K \\sin ^2 \\theta \\\\ \u5176\u4e2d K=\\frac12\\left(\\frac{\\beta_1^2}{\\alpha_1^2}+\\frac{\\beta_2^2}{\\alpha_2^2}\\right)\\approx\\frac{\\beta^2}{\\alpha^2}=\\left(\\frac{V_S}{V_P}\\right)^2 \\zeta(\\theta)=\\frac{1}{\\cos ^2 \\theta}, b=-8 K \\sin ^2 \\theta,c=1-4 K \\sin ^2 \\theta \\\\ \u5176\u4e2d K=\\frac12\\left(\\frac{\\beta_1^2}{\\alpha_1^2}+\\frac{\\beta_2^2}{\\alpha_2^2}\\right)\\approx\\frac{\\beta^2}{\\alpha^2}=\\left(\\frac{V_S}{V_P}\\right)^2 def createOp ( self , theta ): \"\"\" Args: theta: \u5165\u5c04\u89d2 Returns: np.array([G1, G2, G3]): aki-richards\u65b9\u7a0b\u7684\u7cfb\u6570 \"\"\" theta = np . deg2rad ( theta ) theta = theta [:, np . newaxis ] if self . vsvp . size > 1 else theta vsvp = self . vsvp [:, np . newaxis ] . T if self . vsvp . size > 1 else self . vsvp G1 = 1.0 / ( 2.0 * cos ( theta ) ** 2 ) + 0 * vsvp G2 = - 4.0 * vsvp ** 2 * np . sin ( theta ) ** 2 G3 = 0.5 - 2.0 * vsvp ** 2 * sin ( theta ) ** 2 return np . array ([ G1 , G2 , G3 ]) def forward ( self , wav_mtx , theta , nt0 , show = False , t0 = None ): \"\"\" Args: wav_mtx: \u5b50\u6ce2\u77e9\u9635 theta: \u5165\u5c04\u89d2 nt0: \u91c7\u6837\u70b9 show: \u662f\u5426\u663e\u793a\u5408\u6210\u540e\u7684\u5730\u9707\u6570\u636e t0: \u91c7\u6837\u65f6\u95f4 Returns: cal_data: \u6b63\u6f14\u5f97\u5230\u7684\u5730\u9707\u6570\u636e \"\"\" # \u5355\u9053\u6b63\u6f14 if self . ntrace == 1 : m = self . m . T . ravel () # \u6ce8\u610f\u662f\u6309\u884c\u5c55\u5e73\u5316\uff0c\u6240\u4ee5\u8981\u5148\u8fdb\u884c\u8f6c\u7f6e ntheta = len ( theta ) G = self . createOp ( theta ) # G= np.hstack([Gi for Gi in G]) D = np . diag ( np . ones ( nt0 - 1 ), k = 1 ) - np . diag ( np . ones ( nt0 ), k = 0 ) # \u5dee\u5206\u77e9\u9635 D [ - 1 ] = 0 D = block_diag ( * [ D for i in range ( 3 )]) # \u7528\u5217\u8868\u6279\u91cf\u5316diag G = np . vstack ( np . hstack ([ np . diag ( G_ [ itheta ] * np . ones ( nt0 )) for G_ in G ]) for itheta in range ( ntheta )) # \u751f\u6210\u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u4e58\u6cd5\u8fdb\u884c\u5377\u79ef\u7684\u77e9\u9635 self . W = block_diag ( * [ wav_mtx for _ in range ( ntheta )]) # \u5b50\u6ce2\u77e9\u9635, * \u8868\u793a\u904d\u5386 self . G = G @ D # G in \"WGm = d\" self . D = D self . op = np . dot ( self . W , np . dot ( G , D )) # \u5f97\u5230\"Ax = b\"\u4e2d\u7684A self . obs_data = np . dot ( self . op , m ) # \u8ba1\u7b97\"Ax\"\u5f97\u5230\u5408\u6210\u5730\u9707\u6570\u636e/\u4eff\u771f\u89c2\u6d4b\u6570\u636e self . Rpp = np . dot ( np . dot ( G , D ), m ) # \u53cd\u5c04\u7cfb\u6570 cal_data = self . obs_data . reshape ( ntheta , - 1 ) . T # \u540c\u6837\u8981\u6ce8\u610frehsape\u7684\u6b21\u5e8f\uff0c\u6240\u4ee5\u8981\u5148reshpe\u518d\u8f6c\u7f6e\u800c\u4e0d\u80fd\u76f4\u63a5reshape\u6210\u6307\u5b9a\u7ef4\u5ea6 if show : plt . figure () plt . imshow ( cal_data , cmap = \"gray\" , extent = ( theta [ 0 ], theta [ - 1 ], t0 [ - 1 ], t0 [ 0 ]), vmin =- np . abs ( cal_data ) . max (), vmax = np . abs ( cal_data ) . max ()) plt . axis ( \"tight\" ) plt . xlabel ( 'incident angle' ) plt . ylabel ( 'time' ) plt . title ( 'seismic data from Aki-Ri' ) # \u591a\u9053\u6b63\u6f14 \u4ec5\u4ec5\u6bd4\u5355\u9053\u6b63\u6f14\u591a\u4e86\u4e00\u7ef4\uff0c\u9700\u8981stack else : m = np . vstack ([ self . m [ ... , i ] . T . ravel () for i in range ( self . ntrace )]) ntheta = len ( theta ) G = self . createOp ( theta ) # G= np.hstack([Gi for Gi in G]) D = np . diag ( np . ones ( nt0 - 1 ), k = 1 ) - np . diag ( np . ones ( nt0 ), k = 0 ) D [ - 1 ] = 0 D = block_diag ( * [ D for i in range ( 3 )]) # \u7528\u5217\u8868\u6279\u91cf\u5316diag Garray = [] for i in range ( self . ntrace ): Gi = np . vstack ( np . hstack ([ np . diag ( G_ [ i , itheta ] * np . ones ( nt0 )) for G_ in G ]) for itheta in range ( ntheta )) Garray . append ( Gi ) G = np . array ( Garray ) self . W = block_diag ( * [ wav_mtx for i in range ( ntheta )]) # * \u8868\u793a\u904d\u5386 self . G = np . stack ([ G_ @ D for G_ in G ]) self . D = D self . op = np . stack ([ self . W @ G_ for G_ in self . G ]) self . obs_data = np . stack ([ np . dot ( self . op [ i ], m [ i ]) for i in range ( self . ntrace )]) # self.Rpp = np.dot(np.dot(G, D), m) cal_data = np . stack ([ data . reshape ( ntheta , - 1 ) . T for data in self . obs_data ]) # \u540c\u6837\u8981\u6ce8\u610frehsape\u7684\u6b21\u5e8f\uff0c\u6240\u4ee5\u8981\u5148reshpe\u518d\u8f6c\u7f6e\u800c\u4e0d\u80fd\u76f4\u63a5reshape\u6210\u6307\u5b9a\u7ef4\u5ea6 if show : # \u53ea\u663e\u793a\u4e00\u4e2a\u5256\u9762 plt . figure () plt . imshow ( cal_data [ 1 ], cmap = \"gray\" , extent = ( theta [ 0 ], theta [ - 1 ], t0 [ - 1 ], t0 [ 0 ]), vmin =- np . abs ( cal_data ) . max (), vmax = np . abs ( cal_data ) . max ()) plt . axis ( \"tight\" ) plt . xlabel ( 'incident angle' ) plt . ylabel ( 'time' ) plt . title ( 'seismic data from Aki-Ri' ) return cal_data Zoeppritz\u65b9\u7a0b \u00b6 \u7cbe\u786eZoeppritz\u65b9\u7a0b \\begin{align} \\left[\\begin{matrix} R_{pp}\\\\ R_{ps}\\\\ T_{pp}\\\\ T_{ps} \\end{matrix}\\right] =&\\left[ \\begin{matrix} \\cos(\\theta)&-\\sin(\\delta_r)&\\cos(\\theta_t)&\\sin(\\delta_t)\\\\ \\sin(\\theta)&\\cos(\\delta_r)&-\\sin(\\theta_t)&\\cos(\\delta_t)\\\\ -\\cos(2\\delta_r)&\\frac{\\beta_1}{\\alpha_1}\\sin(2\\delta_r)&\\frac{\\rho_2\\alpha_2}{\\rho_1\\alpha_1}\\cos(2\\delta_t)&\\frac{\\rho_2\\beta_2}{\\rho_1\\alpha_1}\\sin(2\\delta_t)\\\\ \\sin(2\\theta)&\\frac{\\alpha_1}{\\beta_1}\\cos(2\\delta_r)&\\frac{\\rho_2\\beta_2^2\\alpha_2}{\\rho_1\\beta_1^2\\alpha_1}\\sin(2\\theta_t)&-\\frac{\\rho_2\\beta_2\\alpha_1}{\\rho_1\\beta_1\\beta_1}\\cos(2\\delta_t) \\end{matrix}\\right]^{-1}\\times\\left[\\begin{matrix} \\cos(\\theta)\\\\ \\sin(\\theta)\\\\ \\cos(2\\delta_r)\\\\ \\sin(2\\theta) \\end{matrix}\\right]\\notag\\end{align} \\begin{align} \\left[\\begin{matrix} R_{pp}\\\\ R_{ps}\\\\ T_{pp}\\\\ T_{ps} \\end{matrix}\\right] =&\\left[ \\begin{matrix} \\cos(\\theta)&-\\sin(\\delta_r)&\\cos(\\theta_t)&\\sin(\\delta_t)\\\\ \\sin(\\theta)&\\cos(\\delta_r)&-\\sin(\\theta_t)&\\cos(\\delta_t)\\\\ -\\cos(2\\delta_r)&\\frac{\\beta_1}{\\alpha_1}\\sin(2\\delta_r)&\\frac{\\rho_2\\alpha_2}{\\rho_1\\alpha_1}\\cos(2\\delta_t)&\\frac{\\rho_2\\beta_2}{\\rho_1\\alpha_1}\\sin(2\\delta_t)\\\\ \\sin(2\\theta)&\\frac{\\alpha_1}{\\beta_1}\\cos(2\\delta_r)&\\frac{\\rho_2\\beta_2^2\\alpha_2}{\\rho_1\\beta_1^2\\alpha_1}\\sin(2\\theta_t)&-\\frac{\\rho_2\\beta_2\\alpha_1}{\\rho_1\\beta_1\\beta_1}\\cos(2\\delta_t) \\end{matrix}\\right]^{-1}\\times\\left[\\begin{matrix} \\cos(\\theta)\\\\ \\sin(\\theta)\\\\ \\cos(2\\delta_r)\\\\ \\sin(2\\theta) \\end{matrix}\\right]\\notag\\end{align} \u8fd9\u91cc\u6211\u4eec\u8ba1\u7b97\u53cd\u5c04\u7cfb\u6570\u53ea\u7528\u5230 R_{pp} R_{pp} \u4ee3\u7801\u5b9e\u73b0 def forward ( self , a1 , b1 , rho1 , a2 , b2 , rho2 , theta1 ): # \u5355\u5c42\u7684\u53cd\u5c04\u7cfb\u6570\u6b63\u6f14 \"\"\" Args: a1: vp1 b1: vs1 rho1: a2: vp2 b2: vs2 rho2: irfwav: ipol: theta1: \u5165\u5c04\u89d2\u5ea6\u96c6 Returns: \u5f53\u524d\u5c42\u53cd\u5c04\u7cfb\u6570 [ [\"PdPu\", \"SdPu\", \"PuPu\", \"SuPu\"], [\"PdSu\", \"SdSu\", \"PuSu\", \"SuSu\"], [\"PdPd\", \"SdPd\", \"PuPd\", \"SuPd\"], [\"PdSd\", \"SdSd\", \"PuSd\", \"SuSd\"], ] \"\"\" # Create theta1 array of angles in radiants theta1 = np . radians ( theta1 ) # \u8f6c\u5f27\u5ea6 p = np . sin ( theta1 ) / a1 theta2 = np . arcsin ( p * a2 ) # Trans. angle of P-wave phi1 = np . arcsin ( p * b1 ) # Refl. angle of converted S-wave phi2 = np . arcsin ( p * b2 ) # Trans. angle of converted S-wave # Matrix form of Zoeppritz equation M = np . array ( # shape:[4,4,theta] [ [ - sin ( theta1 ), - cos ( phi1 ), sin ( theta2 ), cos ( phi2 )], [ cos ( theta1 ), - sin ( phi1 ), cos ( theta2 ), - sin ( phi2 )], [ 2 * rho1 * b1 * sin ( phi1 ) * cos ( theta1 ), rho1 * b1 * ( 1 - 2 * sin ( phi1 ) ** 2 ), 2 * rho2 * b2 * sin ( phi2 ) * cos ( theta2 ), rho2 * b2 * ( 1 - 2 * sin ( phi2 ) ** 2 ), ], [ ( - rho1 ) * a1 * ( 1 - 2 * sin ( phi1 ) ** 2 ), rho1 * b1 * sin ( 2 * phi1 ), rho2 * a2 * ( 1 - 2 * sin ( phi2 ) ** 2 ), ( - rho2 ) * b2 * sin ( 2 * phi2 ), ], ], dtype = \"float\" , ) N = np . array ( # shape:[4,1,theta] [ [ sin ( theta1 ), cos ( phi1 ), - sin ( theta2 ), - cos ( phi2 )], [ cos ( theta1 ), - sin ( phi1 ), cos ( theta2 ), - sin ( phi2 )], [ 2 * rho1 * b1 * sin ( phi1 ) * cos ( theta1 ), rho1 * b1 * ( 1 - 2 * sin ( phi1 ) ** 2 ), 2 * rho2 * b2 * sin ( phi2 ) * cos ( theta2 ), rho2 * b2 * ( 1 - 2 * sin ( phi2 ) ** 2 ), ], [ ( rho1 ) * a1 * ( 1 - 2 * sin ( phi1 ) ** 2 ), - rho1 * b1 * sin ( 2 * phi1 ), - rho2 * a2 * ( 1 - 2 * sin ( phi2 ) ** 2 ), ( rho2 ) * b2 * sin ( 2 * phi2 ), ], ], dtype = \"float\" , ) # Create Zoeppritz coefficient for all angles coef = np . zeros (( 4 , 4 , M . shape [ - 1 ])) # [4,4,theta] for i in range ( M . shape [ - 1 ]): # \u6309\u89d2\u5ea6\u6570\u904d\u5386 Mi = M [ ... , i ] # \u7b2ci\u4e2a\u89d2\u5ea6\u7684\u6240\u6709 Ni = N [ ... , i ] icoef = np . dot ( np . linalg . inv ( Mi ), Ni ) # M^-1 \u70b9\u4e58 N coef [ ... , i ] = icoef return coef def forward_mutil ( self , x0 , element = \"PdPu\" , show = False ): # \u591a\u5c42\u53cd\u5c04\u7cfb\u6570\u6b63\u6f14 \"\"\" Args: x0: \u8f93\u5165\u4e09\u53c2\u6570\u6a21\u578b element: str [\"PdPu\", \"SdPu\", \"PuPu\", \"SuPu\"], [\"PdSu\", \"SdSu\", \"PuSu\", \"SuSu\"], [\"PdPd\", \"SdPd\", \"PuPd\", \"SuPd\"], [\"PdSd\", \"SdSd\", \"PuSd\", \"SuSd\"], layer: \u5c42\u6570\uff0c\u5373\u62bd\u6837\u70b9\u6570 Returns: \u6240\u6709\u5c42\u53cd\u5c04\u7cfb\u6570 \"\"\" theta1 = self . theta layer = self . layer vp = x0 [: layer + 1 ] vs = x0 [ layer + 1 : 2 * layer + 2 ] rho = x0 [ 2 * layer + 2 :] ntheta = len ( theta1 ) elements = np . array ( [ [ \"PdPu\" , \"SdPu\" , \"PuPu\" , \"SuPu\" ], [ \"PdSu\" , \"SdSu\" , \"PuSu\" , \"SuSu\" ], [ \"PdPd\" , \"SdPd\" , \"PuPd\" , \"SuPd\" ], [ \"PdSd\" , \"SdSd\" , \"PuSd\" , \"SuSd\" ], ] ) coef = np . zeros (( layer + 1 , ntheta )) for i in range ( layer ): a1 = vp [ i ] a2 = vp [ i + 1 ] b1 = vs [ i ] b2 = vs [ i + 1 ] rho1 = rho [ i ] rho2 = rho [ i + 1 ] icoef = self . forward ( a1 , b1 , rho1 , a2 , b2 , rho2 , theta1 ) index = np . where ( elements == element ) coef [ i , ... ] = np . squeeze ( icoef [ index ]) self . ref = coef return coef Aki-Richards-equation\u975e\u7ebf\u6027\u8fd1\u4f3c \u00b6 \u516c\u5f0f\u89c1\u4e0a\u9762\u7684 aki-richards\u65b9\u7a0b def forward_single_layer ( self , vp1 , vp2 , vs1 , vs2 , rho1 , rho2 , Theta_r ): \"\"\" Args: Theta_r: \u5165\u5c04\u89d2 Returns: Rpp: \u5355\u5c42\u53cd\u5c04\u7cfb\u6570 Notes: \u901a\u8fc7\u5355\u5c42\u4e0a\u4e0b\u754c\u9762\u53c2\u6570\uff0c\u8ba1\u7b97\u5355\u5c42\u53cd\u5c04\u7cfb\u6570 \"\"\" # \u8ba1\u7b97\u5e73\u5747\u4e0e\u6b8b\u5dee vp = ( vp1 + vp2 ) / 2 vs = ( vs1 + vs2 ) / 2 rho = ( rho1 + rho2 ) / 2 dvp = vp2 - vp1 dvs = vs2 - vs1 drho = rho2 - rho1 # \u8ba1\u7b97\u5e73\u5747\u89d2 Const = np . sin ( Theta_r ) / vp1 # np\u4e2d\u7684\u4e09\u89d2\u51fd\u6570\u5fc5\u987b\u4e3a\u5f27\u5ea6\u5236\uff01 Theta_t = np . arcsin ( Const * vp2 ) theta = ( Theta_r + Theta_t ) / 2 # Aki-Richards\u65b9\u7a0b\u7684\u7cfb\u6570 G1 = ( 0.5 * (( 1 / np . cos ( theta )) ** 2 )) G2 = - ( 4 * ( vs / vp * np . sin ( theta )) ** 2 ) G3 = 0.5 * ( 1 - 4 * ( vs / vp * np . sin ( theta )) ** 2 ) G = np . stack (( G1 , G2 , G3 )) . T m = np . array ([ dvp / vp , dvs / vs , drho / rho ]) Rpp = G @ m return Rpp def forward ( self , wav_mtx , theta , nt0 , show = False , t0 = None ): # \u76ee\u524d\u53ea\u505a\u5355\u9053 \"\"\" Args: wav_mtx: \u5b50\u6ce2\u77e9\u9635 theta: \u5165\u5c04\u89d2\u96c6 nt0: \u91c7\u6837\u70b9 show: \u662f\u5426\u663e\u793a\u5408\u6210\u5730\u9707\u6570\u636e t0: \u91c7\u6837\u65f6\u95f4\uff0c\u7528\u6765\u9650\u5b9a\u6a2a\u5750\u6807 Returns: Rpp: \u6574\u9053\u53cd\u5c04\u7cfb\u6570 \"\"\" thetar = np . radians ( theta ) # \u8f6c\u5f27\u5ea6 Rpp = [] for i in range ( self . layer ): a1 = self . vp [ i ] a2 = self . vp [ i + 1 ] b1 = self . vs [ i ] b2 = self . vs [ i + 1 ] rho1 = self . rho [ i ] rho2 = self . rho [ i + 1 ] iRpp = self . forward_single_layer ( a1 , a2 , b1 , b2 , rho1 , rho2 , thetar ) Rpp . append ( iRpp ) Rpp = np . array ( Rpp ) Rpp = np . vstack (( Rpp , np . zeros ( Rpp . shape [ - 1 ]))) # \u6dfb\u52a0\u5168\u96f6\u884c\uff0c\u884c\u6570\u8865\u5230\u548c\u91c7\u6837\u70b9\u6570\u4e00\u6837 cal_data = wav_mtx @Rpp if show : plt . figure () plt . imshow ( cal_data , cmap = \"gray\" , extent = ( theta [ 0 ], theta [ - 1 ], t0 [ - 1 ], t0 [ 0 ]), vmin =- np . abs ( cal_data ) . max (), vmax = np . abs ( cal_data ) . max ()) plt . axis ( \"tight\" ) plt . xlabel ( 'incident angle' ) plt . ylabel ( 'time' ) plt . title ( 'seismic data from Aki-Ri-Nonliner' ) return Rpp","title":"\u53cd\u6f14\u57fa\u7840"},{"location":"SeismicInversion/Util/#segy","text":"","title":"SEGY\u5730\u9707\u6570\u636e"},{"location":"SeismicInversion/Util/#_1","text":"SEGY\uff08Seismic Exploration Geophysical Data\uff09\u683c\u5f0f\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4e8e\u5b58\u50a8\u5730\u9707\u52d8\u63a2\u6570\u636e\u7684\u6807\u51c6\u683c\u5f0f\u3002SEGY\u683c\u5f0f\u7684\u6570\u636e\u901a\u5e38\u5b58\u50a8\u5728\u78c1\u76d8\u6587\u4ef6\u4e2d\uff0c\u6587\u4ef6\u901a\u5e38\u4ee5\u201c.sgy\u201d\u6216\u201c.segy\u201d\u4f5c\u4e3a\u6269\u5c55\u540d\u3002 SEGY\u6587\u4ef6\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u6587\u4ef6\u5934\uff08File Header\uff09\u3001\u9053\u5934\uff08Trace Header\uff09\u548c\u6570\u636e\u90e8\u5206\uff08Data Section\uff09\u3002 \u6587\u4ef6\u5934\u5305\u542b\u4e86\u6240\u6709\u9053\u7684\u901a\u7528\u4fe1\u606f\uff0c\u4f8b\u5982\u6570\u636e\u7684\u91c7\u6837\u7387\u3001\u6570\u636e\u7c7b\u578b\u3001\u5730\u9707\u4eea\u5668\u7684\u53c2\u6570\u7b49\u3002\u6587\u4ef6\u5934\u901a\u5e38\u5305\u542b3200\u4e2a\u5b57\u8282\u7684\u4fe1\u606f\u3002 \u9053\u5934\u5305\u542b\u4e86\u5355\u4e2a\u5730\u9707\u9053\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u8be5\u9053\u7684\u5750\u6807\u4f4d\u7f6e\u3001\u65f6\u95f4\u4fe1\u606f\u3001\u9053\u53f7\u7b49\u3002\u9053\u5934\u7684\u957f\u5ea6\u901a\u5e38\u4e3a240\u4e2a\u5b57\u8282\u3002 \u6570\u636e\u90e8\u5206\u5305\u542b\u4e86\u6240\u6709\u7684\u5730\u9707\u6570\u636e\uff0c\u6bcf\u4e2a\u6570\u636e\u70b9\u90fd\u662f\u4e00\u4e2a16\u4f4d\u621632\u4f4d\u7684\u6574\u6570\u3002\u5728SEGY\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u662f\u4ee5\u201c\u9053\u201d\uff08Trace\uff09\u7684\u5f62\u5f0f\u7ec4\u7ec7\u7684\uff0c\u6bcf\u4e2a\u9053\u4ee3\u8868\u4e86\u4e00\u6b21\u5730\u9707\u8bb0\u5f55\u7684\u7ed3\u679c\uff0c\u9053\u7684\u6570\u91cf\u53d6\u51b3\u4e8e\u52d8\u63a2\u8fc7\u7a0b\u4e2d\u6240\u91c7\u96c6\u7684\u6570\u636e\u70b9\u6570\u548c\u52d8\u63a2\u9762\u79ef\u7684\u5927\u5c0f\u3002 \u603b\u4e4b\uff0cSEGY\u683c\u5f0f\u662f\u4e00\u79cd\u7075\u6d3b\u7684\u5730\u9707\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\uff0c\u5b83\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b58\u50a8\u5927\u91cf\u7684\u5730\u9707\u52d8\u63a2\u6570\u636e\uff0c\u5e76\u4e14\u80fd\u591f\u63d0\u4f9b\u9ad8\u6548\u7684\u6570\u636e\u8bfb\u53d6\u548c\u5904\u7406\u80fd\u529b\u3002 SEGY\u683c\u5f0f\u53ef\u4ee5\u5206\u4e3aIBM\u683c\u5f0f\u548cIEEE\u683c\u5f0f\u4e24\u79cd\u5b58\u50a8\u65b9\u5f0f\u3002 IBM\u683c\u5f0f\u662f\u6307IBM\u516c\u53f8\u7684\u4e8c\u8fdb\u5236\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u4e5f\u79f0\u4e3a\"big-endian\"\uff08\u5927\u7aef\uff09\u683c\u5f0f\u3002\u5728IBM\u683c\u5f0f\u4e2d\uff0c\u6d6e\u70b9\u6570\u5b58\u50a8\u4e3a\u56db\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u8868\u793a\u7b26\u53f7\u4f4d\u548c\u6307\u6570\u90e8\u5206\uff0c\u800c\u540e\u4e09\u4e2a\u5b57\u8282\u8868\u793a\u5c0f\u6570\u90e8\u5206\u3002\u5728IBM\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u7684\u5b57\u8282\u987a\u5e8f\u662f\u4ece\u5de6\u5230\u53f3\u7684\uff0c\u5373\u6700\u9ad8\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u6700\u5de6\u8fb9\uff0c\u6700\u4f4e\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u6700\u53f3\u8fb9\u3002\u56e0\u6b64\uff0cIBM\u683c\u5f0f\u4e5f\u79f0\u4e3a\"\u5927\u7aef\u5b57\u8282\u5e8f\"\uff08big-endian byte order\uff09\u3002 IEEE\u683c\u5f0f\u662f\u6307\u57fa\u4e8eIEEE\u6807\u51c6\u7684\u4e8c\u8fdb\u5236\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u4e5f\u79f0\u4e3a\"little-endian\"\uff08\u5c0f\u7aef\uff09\u683c\u5f0f\u3002\u5728IEEE\u683c\u5f0f\u4e2d\uff0c\u6d6e\u70b9\u6570\u5b58\u50a8\u4e3a\u56db\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u8868\u793a\u5c0f\u6570\u90e8\u5206\uff0c\u800c\u540e\u4e09\u4e2a\u5b57\u8282\u8868\u793a\u7b26\u53f7\u4f4d\u548c\u6307\u6570\u90e8\u5206\u3002\u5728IEEE\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u7684\u5b57\u8282\u987a\u5e8f\u662f\u4ece\u53f3\u5230\u5de6\u7684\uff0c\u5373\u6700\u4f4e\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u6700\u5de6\u8fb9\uff0c\u6700\u9ad8\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u6700\u53f3\u8fb9\u3002\u56e0\u6b64\uff0cIEEE\u683c\u5f0f\u4e5f\u79f0\u4e3a\"\u5c0f\u7aef\u5b57\u8282\u5e8f\"\uff08little-endian byte order\uff09\u3002","title":"\u7b80\u4ecb"},{"location":"SeismicInversion/Util/#_2","text":"\u5177\u4f53\u5b58\u50a8\u683c\u5f0f\u89c1\u4e0b\u6587\u4ef6\u9644\u5f55 \u7528 C \u8bed\u8a00\u8bfb\u5199 SGY \u683c\u5f0f\u7684\u5730\u9707\u6570\u636e \u53ef\u4ee5\u901a\u8fc7\u5c06\u5730\u9707\u6570\u636e\u8bfb\u53d6\u5230hampson russell\u4e2d\uff0c\u70b9\u51fbheader editor\u67e5\u770b\u6587\u4ef6\u5934\u4e0e\u9053\u5934\u5404\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u4fbf\u4e8e\u8c03\u8bd5","title":"\u5b58\u50a8\u683c\u5f0f"},{"location":"SeismicInversion/Util/#_3","text":"import struct # \u6253\u5f00SEGY\u6587\u4ef6 with open ( 'gathers.sgy' , 'rb' ) as f : # \u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\u5934 bin_header = f . read ( 3600 ) # \u83b7\u53d6\u6587\u4ef6\u5934\u4e2d\u7684\u76f8\u5173\u4fe1\u606f sample_interval = struct . unpack_from ( \">h\" , bin_header , 3216 )[ 0 ] # >h\u8868\u793a\u5927\u7aefshort num_samples = struct . unpack_from ( \">h\" , bin_header , 3220 )[ 0 ] # \u8bfb\u53d6\u6240\u6709\u9053\u6570\u636e traces = [] # \u67d0\u4e00CDP\u7684\u9053\u96c6 offset = [] # \u540c\u4e00CDP\u9053\u96c6\u4e0d\u540c\u6570\u636e\u5bf9\u5e94\u7684\u504f\u79fb\u8ddd cdp = 330 while True : trace_header = f . read ( 240 ) # \u8bfb\u53d6\u9053\u5934 if not trace_header : break cdp_cur = struct . unpack_from ( \">i\" , trace_header , 20 )[ 0 ] # \u9053\u5934CDP if cdp_cur == cdp : amp = [] for _ in range ( num_samples ): amp . append ( struct . unpack_from ( \">h\" , f . read ( 2 ))[ 0 ]) # \u8fd9\u91cc\u7684\u5730\u9707\u6570\u636e\u662f\u4e24\u5b57\u8282\u7684short traces . append ( amp ) offset . append ( struct . unpack_from ( \">i\" , trace_header , 36 )[ 0 ]) # \u9053\u5934\u504f\u79fb\u8ddd else : data = f . read ( num_samples * 2 ) # \u66f4\u6539\u6587\u4ef6\u6307\u9488 continue","title":"\u5177\u4f53\u4ee3\u7801"},{"location":"SeismicInversion/Util/#_4","text":"\u5e38\u7528\u7684\u4e3aRicker\u5b50\u6ce2 \u751f\u6210Ricker\u5b50\u6ce2\u4ee3\u7801\u4e3a def z_ricker ( t , f0 ): \"\"\" Args: t: \u65f6\u57df\u62bd\u6837\u70b9,\u90fd\u4e3a\u6b63\u503c f0: \u4e3b\u9891 Returns: Ricker\u5b50\u6ce2\u65f6\u57df\u5e45\u503c \"\"\" t = np . concatenate (( np . flipud ( - t [ 1 :]), t ), axis = 0 ) # \u5c06\u65f6\u57df\u6620\u5c04\u81f3\u6574\u4e2a\u5b9e\u8f74 w = ( 1 - 2 * ( np . pi * f0 * t ) ** 2 ) * np . exp ( - (( np . pi * f0 * t ) ** 2 )) # Ricker\u5b50\u6ce2\u8ba1\u7b97\u516c\u5f0f return w","title":"\u5b50\u6ce2"},{"location":"SeismicInversion/Util/#avo","text":"","title":"AVO\u5efa\u6a21"},{"location":"SeismicInversion/Util/#avoab-method","text":"R(\\theta) = R_0+B\\sin^2(\\theta) R(\\theta) = R_0+B\\sin^2(\\theta) \u5176\u4e2d R_0 R_0 \u4ee3\u8868\u96f6\u504f\u79fb\u8ddd\u53cd\u5c04\u7cfb\u6570\uff0c\u5373\u622a\u8ddd\uff0c B B \u4ee3\u8868\u68af\u5ea6,\u53ef\u4ee5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7b80\u5316\u5206\u6790 ,\u5bf9\u4e8e\u89d2\u5ea6\u5c0f\u4e8e 40 \u5ea6\u7684\u60c5\u51b5, \u7b2c\u4e09\u9879\u4e0d\u662f\u975e\u5e38\u91cd\u8981","title":"\u4e24\u9879AVO\u65b9\u7a0b(AB method)"},{"location":"SeismicInversion/Util/#aki-richards","text":"Aki-Richards \u65b9\u7a0b\u662fZoeppritz \u65b9\u7a0b\u7684\u7ebf\u6027\u8fd1\u4f3c\u6a21\u62df\uff0c\u4ee3\u7801\u5b9e\u73b0\u89c1 Aki-Richards\u975e\u7ebf\u6027\u8fd1\u4f3c \\begin{array}{ll} R_P(\\theta)=a \\frac{\\Delta V_P}{2 V_P}+b \\frac{\\Delta V_S}{2 V_S}+c \\frac{\\Delta \\rho}{2 \\rho}, & \\text { where }: \\\\ a=\\frac{1}{\\cos ^2 \\theta}, & \\rho=\\frac{\\rho_2+\\rho_1}{2}, \\Delta \\rho=\\rho_2-\\rho_1, \\\\ b=-8 K \\sin ^2 \\theta, & V_P=\\frac{V_{P 2}+V_{P 1}}{2}, \\Delta V_P=V_{P 2}-V_{P 1}, \\\\ c=1-4 K \\sin ^2 \\theta, & V_S=\\frac{V_{S 2}+V_{S 1}}{2}, \\Delta V_S=V_{S 2}-V_{S 1}, \\\\ K=\\left(\\frac{V_S}{V_P}\\right)^2, & \\text { and } \\theta=\\frac{\\theta_1+\\theta_2}{2} . \\end{array} \\begin{array}{ll} R_P(\\theta)=a \\frac{\\Delta V_P}{2 V_P}+b \\frac{\\Delta V_S}{2 V_S}+c \\frac{\\Delta \\rho}{2 \\rho}, & \\text { where }: \\\\ a=\\frac{1}{\\cos ^2 \\theta}, & \\rho=\\frac{\\rho_2+\\rho_1}{2}, \\Delta \\rho=\\rho_2-\\rho_1, \\\\ b=-8 K \\sin ^2 \\theta, & V_P=\\frac{V_{P 2}+V_{P 1}}{2}, \\Delta V_P=V_{P 2}-V_{P 1}, \\\\ c=1-4 K \\sin ^2 \\theta, & V_S=\\frac{V_{S 2}+V_{S 1}}{2}, \\Delta V_S=V_{S 2}-V_{S 1}, \\\\ K=\\left(\\frac{V_S}{V_P}\\right)^2, & \\text { and } \\theta=\\frac{\\theta_1+\\theta_2}{2} . \\end{array}","title":"Aki-Richards\u65b9\u7a0b"},{"location":"SeismicInversion/Util/#aki-richardswigginsabc-method","text":"Wiggins(1983)\u7b49\u4eba\u53d1\u5c55\u4e86\u4e00\u79cd\u8fd1\u4f3c\u7684\uff0c\u91cd\u5199\u7684\u65b9\u7a0b\u5f62\u5f0f\u3002\u4ed6\u4eec\u5c06\u65b9\u7a0b\u5206\u4e3a\u4e09\u4e2a \u53cd\u5c04\u7cfb\u6570\u9879, \u6bcf\u4e00\u4e2a\u90fd\u6bd4\u524d\u9762\u7684\u9879\u66f4\u7b80\u5355 R_p(\\theta) = A+B\\sin^2(\\theta)+C\\tan^2(\\theta)\\sin^2(\\theta) R_p(\\theta) = A+B\\sin^2(\\theta)+C\\tan^2(\\theta)\\sin^2(\\theta) where: \\begin{aligned} & A=\\frac{1}{2}\\left[\\frac{\\Delta V_P}{V_p}+\\frac{\\Delta \\rho}{\\rho}\\right], \\\\ & B=\\frac{1}{2} \\frac{\\Delta V_P}{V_p}-4\\left[\\frac{V_S}{V_P}\\right]^2 \\frac{\\Delta V_S}{V_S}-2\\left[\\frac{V_S}{V_P}\\right]^2 \\frac{\\Delta \\rho}{\\rho}, \\\\ & C=\\frac{1}{2} \\frac{\\Delta V_P}{V_p} . \\end{aligned} \\begin{aligned} & A=\\frac{1}{2}\\left[\\frac{\\Delta V_P}{V_p}+\\frac{\\Delta \\rho}{\\rho}\\right], \\\\ & B=\\frac{1}{2} \\frac{\\Delta V_P}{V_p}-4\\left[\\frac{V_S}{V_P}\\right]^2 \\frac{\\Delta V_S}{V_S}-2\\left[\\frac{V_S}{V_P}\\right]^2 \\frac{\\Delta \\rho}{\\rho}, \\\\ & C=\\frac{1}{2} \\frac{\\Delta V_P}{V_p} . \\end{aligned} A\u662f\u622a\u8ddd, B\u662f\u68af\u5ea6, \u4ee5\u53caC\u662f\u66f2\u7387,\u6211\u4eec\u628a\u8fd9\u4e2a\u65b9\u7a0b\u79f0\u4e3aABC\u65b9\u7a0b","title":"Aki-Richards\u65b9\u7a0b\u7684Wiggins\u5f62\u5f0f(ABC method)"},{"location":"SeismicInversion/Util/#aki-richardsfatti","text":"Fatti \u7b49\u4eba (Geophysics, September, 1994) \u53d1\u5c55\u4e86\u7b2c\u4e09\u4e2aAki-Richards\u65b9\u7a0b\u7684 \u8fd1\u4f3c\u516c\u5f0f\uff0c\u88ab\u5199\u6210: \\begin{gathered} R_P(\\theta)=c_1 R_P\\left(0^{\\circ}\\right)+c_2 R_S\\left(0^{\\circ}\\right)+c_3 R_D, \\text { \u5176\u4e2d: } \\\\ c_1=1+\\tan ^2 \\theta, c_2=-8 K \\sin ^2 \\theta, c_3=2 K \\sin ^2 \\theta-\\frac{1}{2} \\tan ^2 \\theta, K=\\left(\\frac{V_S}{V_P}\\right)^2, \\\\ R_P\\left(0^{\\circ}\\right)=\\frac{1}{2}\\left[\\frac{\\Delta V_P}{V_P}+\\frac{\\Delta \\rho}{\\rho}\\right], R_S\\left(0^{\\circ}\\right)=\\frac{1}{2}\\left[\\frac{\\Delta V_S}{V_S}+\\frac{\\Delta \\rho}{\\rho}\\right], \\text { and } R_D=\\frac{\\Delta \\rho}{\\rho} . \\end{gathered} \\begin{gathered} R_P(\\theta)=c_1 R_P\\left(0^{\\circ}\\right)+c_2 R_S\\left(0^{\\circ}\\right)+c_3 R_D, \\text { \u5176\u4e2d: } \\\\ c_1=1+\\tan ^2 \\theta, c_2=-8 K \\sin ^2 \\theta, c_3=2 K \\sin ^2 \\theta-\\frac{1}{2} \\tan ^2 \\theta, K=\\left(\\frac{V_S}{V_P}\\right)^2, \\\\ R_P\\left(0^{\\circ}\\right)=\\frac{1}{2}\\left[\\frac{\\Delta V_P}{V_P}+\\frac{\\Delta \\rho}{\\rho}\\right], R_S\\left(0^{\\circ}\\right)=\\frac{1}{2}\\left[\\frac{\\Delta V_S}{V_S}+\\frac{\\Delta \\rho}{\\rho}\\right], \\text { and } R_D=\\frac{\\Delta \\rho}{\\rho} . \\end{gathered} \u6ce8\u610f\u5230\u4e0a\u9762\u7684 R_p(0^\\circ) R_p(0^\\circ) \u9879\u548c\u524d\u9762\u65b9\u7a0b\u4e2d\u7684 A \u9879\u662f\u76f8\u540c\u7684\uff0c\u5e76\u4e14\u524d\u9762\u4e24\u9879\u7684\u7cfb\u6570\u548c\u539f\u65b9\u7a0b\u662f\u76f8\u540c\u7684\u3002","title":"Aki-Richards\u65b9\u7a0b\u7684Fatti\u5f62\u5f0f"},{"location":"SeismicInversion/Util/#aki-richards_1","text":"\u65b9\u7a0b\u540d\u79f0 \u6743\u7cfb\u6570 \u5f39\u6027\u53c2\u6570 Aki-Richards a,b,c a,b,c \\frac{\\Delta V_P}{2 V_P}, \\frac{\\Delta V_S}{2 V_S}, \\frac{\\Delta \\rho}{2 \\rho} \\frac{\\Delta V_P}{2 V_P}, \\frac{\\Delta V_S}{2 V_S}, \\frac{\\Delta \\rho}{2 \\rho} Wiggins et al 1,\\sin^2(\\theta),\\tan^2(\\theta)\\sin^2(\\theta) 1,\\sin^2(\\theta),\\tan^2(\\theta)\\sin^2(\\theta) A,B,C A,B,C Fatti et al c_1,c_2,c_3 c_1,c_2,c_3 R_P\\left(0^{\\circ}\\right), R_S\\left(0^{\\circ}\\right) R_D R_P\\left(0^{\\circ}\\right), R_S\\left(0^{\\circ}\\right) R_D \u6ce8\u610f\u5230\u6743\u7cfb\u6570 b, c \u548c c2, c3 \u5305\u542b\u7740 VS/VP \u6bd4\u7684\u5e73\u65b9\u4ee5\u53ca \\theta \\theta \u7684\u4e09\u89d2\u51fd\u6570. \u4f46\u662f, \u5728Wiggins\u7b49\u4eba\u7684\u65b9\u7a0b\u4e2d, \u8fd9\u4e2a\u9879\u5305\u542b\u5728\u5f39\u6027\u53c2\u6570 B \u4e2d \u4e0b\u9762\u662f\u5bf9\u4e8e\u4e09\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u5b66\u89e3\u91ca: - \u56e0\u4e3a\u5730\u9707\u9053\u5305\u542b\u7740\u6ce2\u963b\u6297\u7684\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u53ea\u968f\u901f\u5ea6\u6216\u8005\u53ea\u968f\u5bc6\u5ea6\u800c\u53d8\u5316\uff0c\u6240\u4ee5Aki-Richards\u65b9\u7a0b\u7684\u539f\u59cb\u5f62\u5f0f\u5f88\u5c11\u88ab\u4f7f\u7528 - Aki-Richards\u65b9\u7a0b\u7684A, B, C\u9879\u5bf9\u4e8e\u63d0\u53d6\u6709\u5173 AVO \u6548\u5e94\u7684\u7ecf\u9a8c\u4fe1\u606f (\u6bd4\u5982 A, \u88ab\u79f0\u4e3a\u622a\u8ddd, B, \u88ab\u79f0\u4e3a\u68af\u5ea6, \u4ee5\u53ca C, \u88ab\u79f0\u4e3a\u66f2\u7387)\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u8fd9\u4e9b\u7ecf\u9a8c\u4fe1\u606f\u53ef\u4ee5\u88ab\u5355\u72ec\u663e\u793a\u5206\u6790\u6216\u8005\u8fdb\u884c\u4ea4\u4f1a\u5206\u6790\u3002\u6743\u7cfb\u6570\u5e76\u4e0d\u9700\u8981\u6709\u5173VP/VS \u6bd4\u7684\u660e\u786e\u4fe1\u606f - Fatti \u7b49\u4eba\u53d1\u5c55\u7684\u65b9\u7a0b\u8ba9\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u6709\u5173 P \u548c S \u53cd\u5c04\u7387\u7684\u5b9a\u91cf\u4fe1\u606f\uff0c\u8fd9\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u53e0\u524d\u53cd\u6f14\u3002RP0 \u548c RS0 \u662f\u7ebf\u6027\u5316\u540e\u7684\u96f6\u89d2\u5ea6 P\u548c S \u6ce2\u53cd\u5c04\u7cfb\u6570","title":"\u5bf9\u4e8eAki-Richards\u65b9\u7a0b\u5c0f\u7ed3"},{"location":"SeismicInversion/Util/#shueyavo","text":"Shuey (1985) \u4f7f\u7528VP, \\rho \\rho \u548c \\sigma \\sigma \u91cd\u5199\u4e86ABC\u65b9\u7a0b. \u4ec5\u4ec5\u68af\u5ea6\u548cABC \u65b9\u7a0b\u6709\u6240\u4e0d\u540c: B=A\\left[D-2(1+D)\\frac{1-2\\sigma}{1-\\sigma}\\right]+\\frac{\\Delta\\sigma}{(1-\\sigma)^2} B=A\\left[D-2(1+D)\\frac{1-2\\sigma}{1-\\sigma}\\right]+\\frac{\\Delta\\sigma}{(1-\\sigma)^2} where: D=\\frac{\\Delta V_p /V_p}{\\Delta V_p /V_p+\\Delta \\rho /\\rho}, \\sigma = \\frac{\\sigma_1+\\sigma_2}{2}, \\Delta\\sigma = \\sigma_2-\\sigma_1 D=\\frac{\\Delta V_p /V_p}{\\Delta V_p /V_p+\\Delta \\rho /\\rho}, \\sigma = \\frac{\\sigma_1+\\sigma_2}{2}, \\Delta\\sigma = \\sigma_2-\\sigma_1 \u4e0a\u9762\u7684\u65b9\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u662f\u901a\u8fc7\u5047\u8bbe \\sigma \\sigma = \u2153 (\u5373Vp/Vs=2)\uff0c\u53ef\u4ee5\u88ab\u6781\u5927\u5730\u7b80\u5316\u6210 \u4ee5\u4e0b\u5f62\u5f0f: B=A\\left[D-2(1+D)\\frac{1}{2}\\right]+\\frac{9\\Delta\\sigma}{4}=2.25\\Delta\\sigma-A B=A\\left[D-2(1+D)\\frac{1}{2}\\right]+\\frac{9\\Delta\\sigma}{4}=2.25\\Delta\\sigma-A \u8fd9\u53ef\u4ee5\u5f88\u76f4\u89c2\u5730\u5199\u6210\u4e24\u9879AVO\u65b9\u7a0b: R_p(\\theta) = A + (2.25\\Delta\\sigma-A)\\sin^2\\theta R_p(\\theta) = A + (2.25\\Delta\\sigma-A)\\sin^2\\theta","title":"Shuey\u4e24\u9879AVO\u65b9\u7a0b"},{"location":"SeismicInversion/Util/#avo_1","text":"","title":"AVO\u5206\u6790\uff08\u4f30\u8ba1\u622a\u8ddd\u4e0e\u68af\u5ea6\uff09"},{"location":"SeismicInversion/Util/#_5","text":"\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5c06\u504f\u79fb\u8ddd\u9053\u96c6\u8f6c\u6362\u5230\u89d2\u5ea6\u9053\u96c6: TODO\u4ee3\u7801\u5b9e\u73b0 \u76f4\u5c04\u7ebf\u5047\u8bbe (\u5e38\u901f\u5ea6) \u5c04\u7ebf\u53c2\u6570\u5047\u8bbe (\u53d8\u901f\u5ea6\u5047\u8bbe) \u5c04\u7ebf\u8ffd\u8e2a (\u53d8\u901f\u5ea6) GPT\u7684\u56de\u7b54?? \u8bfb\u53d6\u5730\u9707\u6570\u636e \u4f7f\u7528NumPy\u7684loadtxt\u51fd\u6570\u8bfb\u53d6\u5730\u9707\u6570\u636e\uff0c\u6570\u636e\u5e94\u8be5\u4ee5\u6587\u672c\u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u50a8\u3002 \u5c06\u5730\u9707\u6570\u636e\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u6570\u7ec4 \u5c06\u8bfb\u53d6\u7684\u6587\u672c\u6570\u636e\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u9053\u96c6\u3002 \u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362 \u4f7f\u7528NumPy\u7684fft\u51fd\u6570\u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\u3002 \u8ba1\u7b97\u6bcf\u4e2a\u9053\u96c6\u7684\u504f\u79fb\u8ddd \u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u504f\u79fb\u8ddd\u8ba1\u7b97\uff0c\u5c06\u504f\u79fb\u8ddd\u4f5c\u4e3a\u6570\u7ec4\u7684\u7b2c\u4e00\u7ef4\uff0c\u9053\u6570\u4f5c\u4e3a\u6570\u7ec4\u7684\u7b2c\u4e8c\u7ef4\uff0c\u91cd\u65b0\u7ec4\u7ec7\u6570\u7ec4\u3002 \u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u53cd\u5085\u91cc\u53f6\u53d8\u6362 \u4f7f\u7528NumPy\u7684ifft\u51fd\u6570\u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884c\u53cd\u5085\u91cc\u53f6\u53d8\u6362\u3002 \u5c06\u6bcf\u4e2a\u9053\u96c6\u8f6c\u6362\u4e3a\u89d2\u5ea6\u57df \u5bf9\u6bcf\u4e2a\u9053\u96c6\u8fdb\u884cHilbert\u53d8\u6362\uff0c\u7136\u540e\u8ba1\u7b97\u76f8\u4f4d\u89d2\u5ea6\u3002 \u5c06\u6bcf\u4e2a\u9053\u96c6\u8f6c\u6362\u4e3a\u89d2\u5ea6\u9053\u96c6 \u5c06\u6bcf\u4e2a\u9053\u96c6\u6309\u7167\u89d2\u5ea6\u503c\u91cd\u65b0\u6392\u5217\uff0c\u5373\u53ef\u5f97\u5230\u89d2\u5ea6\u9053\u96c6\u3002","title":"\u4ece\u504f\u79fb\u8ddd\u9053\u96c6\u6570\u636e\u8f6c\u6362\u5230\u89d2\u5ea6\u9053\u96c6\u6570\u636e"},{"location":"SeismicInversion/Util/#_6","text":"\u5c5e\u6027A\u548cB\u5f88\u5c11\u76f4\u63a5\u88ab\u5229\u7528\u3002\u901a\u5e38\uff0c\u5229\u7528\u7684\u662f\u4ece\u8fd9\u4e24\u4e2a\u5c5e\u6027\u4e2d\u8ba1\u7b97\u51fa\u5176\u4ed6\u7684 AVO \u5c5e \u6027\u3002 AVO\u79ef\uff1aA*B \u7684\u5256\u9762\u663e\u793a\u4e86\u5728\u6c14\u85cf\u4f4d\u7f6e\u7684\u9876\u5e95\u90fd\u4e3a\u6b63\u7684\u53cd\u5c04\u7279\u5f81 \u653e\u5927\u7684\u6cca\u677e\u6bd4\u53d8\u5316: A+B \u6b63\u6bd4\u4e8e\u6cca\u677e\u6bd4\u7684\u53d8\u5316 \u526a\u5207\u53cd\u5c04\u7387: A-B \u6b63\u6bd4\u4e8e\u526a\u5207\u53cd\u5c04\u7387 \u6d41\u4f53\u56e0\u5b50","title":"\u62df\u5408\u4e00\u4e2a\u56de\u5f52\u66f2\u7ebf\u6765\u5339\u914d\u632f\u5e45\u62fe\u53d6\u503c\uff0c\u8fd9\u662f\u4e00\u4e2a\u89d2\u5ea6\u5e73\u65b9\u7684\u6b63\u5f26\u51fd\u6570\u5173\u7cfb."},{"location":"SeismicInversion/Util/#_7","text":"","title":"\u6b63\u6f14\u76f8\u5173\u4ee3\u7801"},{"location":"SeismicInversion/Util/#aki-richards_2","text":"R_{pp}=\\zeta(\\theta)\\varDelta\\ln(\\alpha)+\\eta(\\theta)\\varDelta\\ln(\\beta)+\\xi(\\theta)\\varDelta\\ln(\\rho) R_{pp}=\\zeta(\\theta)\\varDelta\\ln(\\alpha)+\\eta(\\theta)\\varDelta\\ln(\\beta)+\\xi(\\theta)\\varDelta\\ln(\\rho) \u5176\u4e2d \\zeta(\\theta)=\\frac{1}{\\cos ^2 \\theta}, b=-8 K \\sin ^2 \\theta,c=1-4 K \\sin ^2 \\theta \\\\ \u5176\u4e2d K=\\frac12\\left(\\frac{\\beta_1^2}{\\alpha_1^2}+\\frac{\\beta_2^2}{\\alpha_2^2}\\right)\\approx\\frac{\\beta^2}{\\alpha^2}=\\left(\\frac{V_S}{V_P}\\right)^2 \\zeta(\\theta)=\\frac{1}{\\cos ^2 \\theta}, b=-8 K \\sin ^2 \\theta,c=1-4 K \\sin ^2 \\theta \\\\ \u5176\u4e2d K=\\frac12\\left(\\frac{\\beta_1^2}{\\alpha_1^2}+\\frac{\\beta_2^2}{\\alpha_2^2}\\right)\\approx\\frac{\\beta^2}{\\alpha^2}=\\left(\\frac{V_S}{V_P}\\right)^2 def createOp ( self , theta ): \"\"\" Args: theta: \u5165\u5c04\u89d2 Returns: np.array([G1, G2, G3]): aki-richards\u65b9\u7a0b\u7684\u7cfb\u6570 \"\"\" theta = np . deg2rad ( theta ) theta = theta [:, np . newaxis ] if self . vsvp . size > 1 else theta vsvp = self . vsvp [:, np . newaxis ] . T if self . vsvp . size > 1 else self . vsvp G1 = 1.0 / ( 2.0 * cos ( theta ) ** 2 ) + 0 * vsvp G2 = - 4.0 * vsvp ** 2 * np . sin ( theta ) ** 2 G3 = 0.5 - 2.0 * vsvp ** 2 * sin ( theta ) ** 2 return np . array ([ G1 , G2 , G3 ]) def forward ( self , wav_mtx , theta , nt0 , show = False , t0 = None ): \"\"\" Args: wav_mtx: \u5b50\u6ce2\u77e9\u9635 theta: \u5165\u5c04\u89d2 nt0: \u91c7\u6837\u70b9 show: \u662f\u5426\u663e\u793a\u5408\u6210\u540e\u7684\u5730\u9707\u6570\u636e t0: \u91c7\u6837\u65f6\u95f4 Returns: cal_data: \u6b63\u6f14\u5f97\u5230\u7684\u5730\u9707\u6570\u636e \"\"\" # \u5355\u9053\u6b63\u6f14 if self . ntrace == 1 : m = self . m . T . ravel () # \u6ce8\u610f\u662f\u6309\u884c\u5c55\u5e73\u5316\uff0c\u6240\u4ee5\u8981\u5148\u8fdb\u884c\u8f6c\u7f6e ntheta = len ( theta ) G = self . createOp ( theta ) # G= np.hstack([Gi for Gi in G]) D = np . diag ( np . ones ( nt0 - 1 ), k = 1 ) - np . diag ( np . ones ( nt0 ), k = 0 ) # \u5dee\u5206\u77e9\u9635 D [ - 1 ] = 0 D = block_diag ( * [ D for i in range ( 3 )]) # \u7528\u5217\u8868\u6279\u91cf\u5316diag G = np . vstack ( np . hstack ([ np . diag ( G_ [ itheta ] * np . ones ( nt0 )) for G_ in G ]) for itheta in range ( ntheta )) # \u751f\u6210\u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u4e58\u6cd5\u8fdb\u884c\u5377\u79ef\u7684\u77e9\u9635 self . W = block_diag ( * [ wav_mtx for _ in range ( ntheta )]) # \u5b50\u6ce2\u77e9\u9635, * \u8868\u793a\u904d\u5386 self . G = G @ D # G in \"WGm = d\" self . D = D self . op = np . dot ( self . W , np . dot ( G , D )) # \u5f97\u5230\"Ax = b\"\u4e2d\u7684A self . obs_data = np . dot ( self . op , m ) # \u8ba1\u7b97\"Ax\"\u5f97\u5230\u5408\u6210\u5730\u9707\u6570\u636e/\u4eff\u771f\u89c2\u6d4b\u6570\u636e self . Rpp = np . dot ( np . dot ( G , D ), m ) # \u53cd\u5c04\u7cfb\u6570 cal_data = self . obs_data . reshape ( ntheta , - 1 ) . T # \u540c\u6837\u8981\u6ce8\u610frehsape\u7684\u6b21\u5e8f\uff0c\u6240\u4ee5\u8981\u5148reshpe\u518d\u8f6c\u7f6e\u800c\u4e0d\u80fd\u76f4\u63a5reshape\u6210\u6307\u5b9a\u7ef4\u5ea6 if show : plt . figure () plt . imshow ( cal_data , cmap = \"gray\" , extent = ( theta [ 0 ], theta [ - 1 ], t0 [ - 1 ], t0 [ 0 ]), vmin =- np . abs ( cal_data ) . max (), vmax = np . abs ( cal_data ) . max ()) plt . axis ( \"tight\" ) plt . xlabel ( 'incident angle' ) plt . ylabel ( 'time' ) plt . title ( 'seismic data from Aki-Ri' ) # \u591a\u9053\u6b63\u6f14 \u4ec5\u4ec5\u6bd4\u5355\u9053\u6b63\u6f14\u591a\u4e86\u4e00\u7ef4\uff0c\u9700\u8981stack else : m = np . vstack ([ self . m [ ... , i ] . T . ravel () for i in range ( self . ntrace )]) ntheta = len ( theta ) G = self . createOp ( theta ) # G= np.hstack([Gi for Gi in G]) D = np . diag ( np . ones ( nt0 - 1 ), k = 1 ) - np . diag ( np . ones ( nt0 ), k = 0 ) D [ - 1 ] = 0 D = block_diag ( * [ D for i in range ( 3 )]) # \u7528\u5217\u8868\u6279\u91cf\u5316diag Garray = [] for i in range ( self . ntrace ): Gi = np . vstack ( np . hstack ([ np . diag ( G_ [ i , itheta ] * np . ones ( nt0 )) for G_ in G ]) for itheta in range ( ntheta )) Garray . append ( Gi ) G = np . array ( Garray ) self . W = block_diag ( * [ wav_mtx for i in range ( ntheta )]) # * \u8868\u793a\u904d\u5386 self . G = np . stack ([ G_ @ D for G_ in G ]) self . D = D self . op = np . stack ([ self . W @ G_ for G_ in self . G ]) self . obs_data = np . stack ([ np . dot ( self . op [ i ], m [ i ]) for i in range ( self . ntrace )]) # self.Rpp = np.dot(np.dot(G, D), m) cal_data = np . stack ([ data . reshape ( ntheta , - 1 ) . T for data in self . obs_data ]) # \u540c\u6837\u8981\u6ce8\u610frehsape\u7684\u6b21\u5e8f\uff0c\u6240\u4ee5\u8981\u5148reshpe\u518d\u8f6c\u7f6e\u800c\u4e0d\u80fd\u76f4\u63a5reshape\u6210\u6307\u5b9a\u7ef4\u5ea6 if show : # \u53ea\u663e\u793a\u4e00\u4e2a\u5256\u9762 plt . figure () plt . imshow ( cal_data [ 1 ], cmap = \"gray\" , extent = ( theta [ 0 ], theta [ - 1 ], t0 [ - 1 ], t0 [ 0 ]), vmin =- np . abs ( cal_data ) . max (), vmax = np . abs ( cal_data ) . max ()) plt . axis ( \"tight\" ) plt . xlabel ( 'incident angle' ) plt . ylabel ( 'time' ) plt . title ( 'seismic data from Aki-Ri' ) return cal_data","title":"Aki-Richards\u7ebf\u6027\u8fd1\u4f3c"},{"location":"SeismicInversion/Util/#zoeppritz","text":"\u7cbe\u786eZoeppritz\u65b9\u7a0b \\begin{align} \\left[\\begin{matrix} R_{pp}\\\\ R_{ps}\\\\ T_{pp}\\\\ T_{ps} \\end{matrix}\\right] =&\\left[ \\begin{matrix} \\cos(\\theta)&-\\sin(\\delta_r)&\\cos(\\theta_t)&\\sin(\\delta_t)\\\\ \\sin(\\theta)&\\cos(\\delta_r)&-\\sin(\\theta_t)&\\cos(\\delta_t)\\\\ -\\cos(2\\delta_r)&\\frac{\\beta_1}{\\alpha_1}\\sin(2\\delta_r)&\\frac{\\rho_2\\alpha_2}{\\rho_1\\alpha_1}\\cos(2\\delta_t)&\\frac{\\rho_2\\beta_2}{\\rho_1\\alpha_1}\\sin(2\\delta_t)\\\\ \\sin(2\\theta)&\\frac{\\alpha_1}{\\beta_1}\\cos(2\\delta_r)&\\frac{\\rho_2\\beta_2^2\\alpha_2}{\\rho_1\\beta_1^2\\alpha_1}\\sin(2\\theta_t)&-\\frac{\\rho_2\\beta_2\\alpha_1}{\\rho_1\\beta_1\\beta_1}\\cos(2\\delta_t) \\end{matrix}\\right]^{-1}\\times\\left[\\begin{matrix} \\cos(\\theta)\\\\ \\sin(\\theta)\\\\ \\cos(2\\delta_r)\\\\ \\sin(2\\theta) \\end{matrix}\\right]\\notag\\end{align} \\begin{align} \\left[\\begin{matrix} R_{pp}\\\\ R_{ps}\\\\ T_{pp}\\\\ T_{ps} \\end{matrix}\\right] =&\\left[ \\begin{matrix} \\cos(\\theta)&-\\sin(\\delta_r)&\\cos(\\theta_t)&\\sin(\\delta_t)\\\\ \\sin(\\theta)&\\cos(\\delta_r)&-\\sin(\\theta_t)&\\cos(\\delta_t)\\\\ -\\cos(2\\delta_r)&\\frac{\\beta_1}{\\alpha_1}\\sin(2\\delta_r)&\\frac{\\rho_2\\alpha_2}{\\rho_1\\alpha_1}\\cos(2\\delta_t)&\\frac{\\rho_2\\beta_2}{\\rho_1\\alpha_1}\\sin(2\\delta_t)\\\\ \\sin(2\\theta)&\\frac{\\alpha_1}{\\beta_1}\\cos(2\\delta_r)&\\frac{\\rho_2\\beta_2^2\\alpha_2}{\\rho_1\\beta_1^2\\alpha_1}\\sin(2\\theta_t)&-\\frac{\\rho_2\\beta_2\\alpha_1}{\\rho_1\\beta_1\\beta_1}\\cos(2\\delta_t) \\end{matrix}\\right]^{-1}\\times\\left[\\begin{matrix} \\cos(\\theta)\\\\ \\sin(\\theta)\\\\ \\cos(2\\delta_r)\\\\ \\sin(2\\theta) \\end{matrix}\\right]\\notag\\end{align} \u8fd9\u91cc\u6211\u4eec\u8ba1\u7b97\u53cd\u5c04\u7cfb\u6570\u53ea\u7528\u5230 R_{pp} R_{pp} \u4ee3\u7801\u5b9e\u73b0 def forward ( self , a1 , b1 , rho1 , a2 , b2 , rho2 , theta1 ): # \u5355\u5c42\u7684\u53cd\u5c04\u7cfb\u6570\u6b63\u6f14 \"\"\" Args: a1: vp1 b1: vs1 rho1: a2: vp2 b2: vs2 rho2: irfwav: ipol: theta1: \u5165\u5c04\u89d2\u5ea6\u96c6 Returns: \u5f53\u524d\u5c42\u53cd\u5c04\u7cfb\u6570 [ [\"PdPu\", \"SdPu\", \"PuPu\", \"SuPu\"], [\"PdSu\", \"SdSu\", \"PuSu\", \"SuSu\"], [\"PdPd\", \"SdPd\", \"PuPd\", \"SuPd\"], [\"PdSd\", \"SdSd\", \"PuSd\", \"SuSd\"], ] \"\"\" # Create theta1 array of angles in radiants theta1 = np . radians ( theta1 ) # \u8f6c\u5f27\u5ea6 p = np . sin ( theta1 ) / a1 theta2 = np . arcsin ( p * a2 ) # Trans. angle of P-wave phi1 = np . arcsin ( p * b1 ) # Refl. angle of converted S-wave phi2 = np . arcsin ( p * b2 ) # Trans. angle of converted S-wave # Matrix form of Zoeppritz equation M = np . array ( # shape:[4,4,theta] [ [ - sin ( theta1 ), - cos ( phi1 ), sin ( theta2 ), cos ( phi2 )], [ cos ( theta1 ), - sin ( phi1 ), cos ( theta2 ), - sin ( phi2 )], [ 2 * rho1 * b1 * sin ( phi1 ) * cos ( theta1 ), rho1 * b1 * ( 1 - 2 * sin ( phi1 ) ** 2 ), 2 * rho2 * b2 * sin ( phi2 ) * cos ( theta2 ), rho2 * b2 * ( 1 - 2 * sin ( phi2 ) ** 2 ), ], [ ( - rho1 ) * a1 * ( 1 - 2 * sin ( phi1 ) ** 2 ), rho1 * b1 * sin ( 2 * phi1 ), rho2 * a2 * ( 1 - 2 * sin ( phi2 ) ** 2 ), ( - rho2 ) * b2 * sin ( 2 * phi2 ), ], ], dtype = \"float\" , ) N = np . array ( # shape:[4,1,theta] [ [ sin ( theta1 ), cos ( phi1 ), - sin ( theta2 ), - cos ( phi2 )], [ cos ( theta1 ), - sin ( phi1 ), cos ( theta2 ), - sin ( phi2 )], [ 2 * rho1 * b1 * sin ( phi1 ) * cos ( theta1 ), rho1 * b1 * ( 1 - 2 * sin ( phi1 ) ** 2 ), 2 * rho2 * b2 * sin ( phi2 ) * cos ( theta2 ), rho2 * b2 * ( 1 - 2 * sin ( phi2 ) ** 2 ), ], [ ( rho1 ) * a1 * ( 1 - 2 * sin ( phi1 ) ** 2 ), - rho1 * b1 * sin ( 2 * phi1 ), - rho2 * a2 * ( 1 - 2 * sin ( phi2 ) ** 2 ), ( rho2 ) * b2 * sin ( 2 * phi2 ), ], ], dtype = \"float\" , ) # Create Zoeppritz coefficient for all angles coef = np . zeros (( 4 , 4 , M . shape [ - 1 ])) # [4,4,theta] for i in range ( M . shape [ - 1 ]): # \u6309\u89d2\u5ea6\u6570\u904d\u5386 Mi = M [ ... , i ] # \u7b2ci\u4e2a\u89d2\u5ea6\u7684\u6240\u6709 Ni = N [ ... , i ] icoef = np . dot ( np . linalg . inv ( Mi ), Ni ) # M^-1 \u70b9\u4e58 N coef [ ... , i ] = icoef return coef def forward_mutil ( self , x0 , element = \"PdPu\" , show = False ): # \u591a\u5c42\u53cd\u5c04\u7cfb\u6570\u6b63\u6f14 \"\"\" Args: x0: \u8f93\u5165\u4e09\u53c2\u6570\u6a21\u578b element: str [\"PdPu\", \"SdPu\", \"PuPu\", \"SuPu\"], [\"PdSu\", \"SdSu\", \"PuSu\", \"SuSu\"], [\"PdPd\", \"SdPd\", \"PuPd\", \"SuPd\"], [\"PdSd\", \"SdSd\", \"PuSd\", \"SuSd\"], layer: \u5c42\u6570\uff0c\u5373\u62bd\u6837\u70b9\u6570 Returns: \u6240\u6709\u5c42\u53cd\u5c04\u7cfb\u6570 \"\"\" theta1 = self . theta layer = self . layer vp = x0 [: layer + 1 ] vs = x0 [ layer + 1 : 2 * layer + 2 ] rho = x0 [ 2 * layer + 2 :] ntheta = len ( theta1 ) elements = np . array ( [ [ \"PdPu\" , \"SdPu\" , \"PuPu\" , \"SuPu\" ], [ \"PdSu\" , \"SdSu\" , \"PuSu\" , \"SuSu\" ], [ \"PdPd\" , \"SdPd\" , \"PuPd\" , \"SuPd\" ], [ \"PdSd\" , \"SdSd\" , \"PuSd\" , \"SuSd\" ], ] ) coef = np . zeros (( layer + 1 , ntheta )) for i in range ( layer ): a1 = vp [ i ] a2 = vp [ i + 1 ] b1 = vs [ i ] b2 = vs [ i + 1 ] rho1 = rho [ i ] rho2 = rho [ i + 1 ] icoef = self . forward ( a1 , b1 , rho1 , a2 , b2 , rho2 , theta1 ) index = np . where ( elements == element ) coef [ i , ... ] = np . squeeze ( icoef [ index ]) self . ref = coef return coef","title":"Zoeppritz\u65b9\u7a0b"},{"location":"SeismicInversion/Util/#aki-richards-equation","text":"\u516c\u5f0f\u89c1\u4e0a\u9762\u7684 aki-richards\u65b9\u7a0b def forward_single_layer ( self , vp1 , vp2 , vs1 , vs2 , rho1 , rho2 , Theta_r ): \"\"\" Args: Theta_r: \u5165\u5c04\u89d2 Returns: Rpp: \u5355\u5c42\u53cd\u5c04\u7cfb\u6570 Notes: \u901a\u8fc7\u5355\u5c42\u4e0a\u4e0b\u754c\u9762\u53c2\u6570\uff0c\u8ba1\u7b97\u5355\u5c42\u53cd\u5c04\u7cfb\u6570 \"\"\" # \u8ba1\u7b97\u5e73\u5747\u4e0e\u6b8b\u5dee vp = ( vp1 + vp2 ) / 2 vs = ( vs1 + vs2 ) / 2 rho = ( rho1 + rho2 ) / 2 dvp = vp2 - vp1 dvs = vs2 - vs1 drho = rho2 - rho1 # \u8ba1\u7b97\u5e73\u5747\u89d2 Const = np . sin ( Theta_r ) / vp1 # np\u4e2d\u7684\u4e09\u89d2\u51fd\u6570\u5fc5\u987b\u4e3a\u5f27\u5ea6\u5236\uff01 Theta_t = np . arcsin ( Const * vp2 ) theta = ( Theta_r + Theta_t ) / 2 # Aki-Richards\u65b9\u7a0b\u7684\u7cfb\u6570 G1 = ( 0.5 * (( 1 / np . cos ( theta )) ** 2 )) G2 = - ( 4 * ( vs / vp * np . sin ( theta )) ** 2 ) G3 = 0.5 * ( 1 - 4 * ( vs / vp * np . sin ( theta )) ** 2 ) G = np . stack (( G1 , G2 , G3 )) . T m = np . array ([ dvp / vp , dvs / vs , drho / rho ]) Rpp = G @ m return Rpp def forward ( self , wav_mtx , theta , nt0 , show = False , t0 = None ): # \u76ee\u524d\u53ea\u505a\u5355\u9053 \"\"\" Args: wav_mtx: \u5b50\u6ce2\u77e9\u9635 theta: \u5165\u5c04\u89d2\u96c6 nt0: \u91c7\u6837\u70b9 show: \u662f\u5426\u663e\u793a\u5408\u6210\u5730\u9707\u6570\u636e t0: \u91c7\u6837\u65f6\u95f4\uff0c\u7528\u6765\u9650\u5b9a\u6a2a\u5750\u6807 Returns: Rpp: \u6574\u9053\u53cd\u5c04\u7cfb\u6570 \"\"\" thetar = np . radians ( theta ) # \u8f6c\u5f27\u5ea6 Rpp = [] for i in range ( self . layer ): a1 = self . vp [ i ] a2 = self . vp [ i + 1 ] b1 = self . vs [ i ] b2 = self . vs [ i + 1 ] rho1 = self . rho [ i ] rho2 = self . rho [ i + 1 ] iRpp = self . forward_single_layer ( a1 , a2 , b1 , b2 , rho1 , rho2 , thetar ) Rpp . append ( iRpp ) Rpp = np . array ( Rpp ) Rpp = np . vstack (( Rpp , np . zeros ( Rpp . shape [ - 1 ]))) # \u6dfb\u52a0\u5168\u96f6\u884c\uff0c\u884c\u6570\u8865\u5230\u548c\u91c7\u6837\u70b9\u6570\u4e00\u6837 cal_data = wav_mtx @Rpp if show : plt . figure () plt . imshow ( cal_data , cmap = \"gray\" , extent = ( theta [ 0 ], theta [ - 1 ], t0 [ - 1 ], t0 [ 0 ]), vmin =- np . abs ( cal_data ) . max (), vmax = np . abs ( cal_data ) . max ()) plt . axis ( \"tight\" ) plt . xlabel ( 'incident angle' ) plt . ylabel ( 'time' ) plt . title ( 'seismic data from Aki-Ri-Nonliner' ) return Rpp","title":"Aki-Richards-equation\u975e\u7ebf\u6027\u8fd1\u4f3c"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/","text":"\u4e13\u680f\u4ecb\u7ecd \u00b6 \u672c\u680f\u8bb0\u5f55\u6bcf\u5929\u7684\u5b66\u4e60\uff0c\u79ef\u5c11\u6210\u591a~~ \u6211\u81ea\u5df1\u6bcf\u5929\u7684\u7b14\u8bb0\uff0c\u53ef\u80fd\u6709\u4e9b\u4e71\uff0c\u6211\u4f1a\u5b9a\u671f\u628a\u6bcf\u5929\u7684\u5185\u5bb9\u5206\u653e\u5230\u5bf9\u5e94\u4e13\u680f\u91cc\uff0c\u5927\u5bb6\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e2a\u4e13\u680f","title":"\u4e13\u680f\u4ecb\u7ecd"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/#_1","text":"\u672c\u680f\u8bb0\u5f55\u6bcf\u5929\u7684\u5b66\u4e60\uff0c\u79ef\u5c11\u6210\u591a~~ \u6211\u81ea\u5df1\u6bcf\u5929\u7684\u7b14\u8bb0\uff0c\u53ef\u80fd\u6709\u4e9b\u4e71\uff0c\u6211\u4f1a\u5b9a\u671f\u628a\u6bcf\u5929\u7684\u5185\u5bb9\u5206\u653e\u5230\u5bf9\u5e94\u4e13\u680f\u91cc\uff0c\u5927\u5bb6\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e2a\u4e13\u680f","title":"\u4e13\u680f\u4ecb\u7ecd"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/Daily%20Learning/","text":"Daily Learning \u00b6 9.5 \u00b6 \u642d\u5efa\u5b9e\u9a8c\u5e73\u53f0\uff0c\u6d4b\u8bd5\u76f8\u673a\u6210\u50cf 9.6 \u00b6 \u5b66\u4f1a\u56fe\u50cf\u5750\u6807\u7cfb\u5230\u4e16\u754c\u5750\u6807\u7cfb\u7684\u8f6c\u6362\uff0c\u516c\u5f0f\u7406\u89e3 \u901a\u8fc7Harris\u89d2\u70b9\u68c0\u6d4b\u627e\u5230\u5149\u6e90\u53cd\u5c04\u70b9\uff0c\u5229\u7528\u68af\u5ea6\u6c42\u5c40\u90e8\u6781\u503c 9.7 \u00b6 \u4f7f\u7528matlab\u5bf9\u76f8\u673a\u8fdb\u884c\u6807\u5b9a 4800\u62a5\u9500\u5b8c\u6bd5 \u5efa\u6a21\u5b66\u4e60 9.9~9.12\u53c2\u52a0\u6570\u5b66\u5efa\u6a21 9.15 \u00b6 Zero-Shot object detection \u00b6 Daily Knowledge \u00b6","title":"Daily Learning"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/Daily%20Learning/#daily-learning","text":"","title":"Daily Learning"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/Daily%20Learning/#95","text":"\u642d\u5efa\u5b9e\u9a8c\u5e73\u53f0\uff0c\u6d4b\u8bd5\u76f8\u673a\u6210\u50cf","title":"9.5"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/Daily%20Learning/#96","text":"\u5b66\u4f1a\u56fe\u50cf\u5750\u6807\u7cfb\u5230\u4e16\u754c\u5750\u6807\u7cfb\u7684\u8f6c\u6362\uff0c\u516c\u5f0f\u7406\u89e3 \u901a\u8fc7Harris\u89d2\u70b9\u68c0\u6d4b\u627e\u5230\u5149\u6e90\u53cd\u5c04\u70b9\uff0c\u5229\u7528\u68af\u5ea6\u6c42\u5c40\u90e8\u6781\u503c","title":"9.6"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/Daily%20Learning/#97","text":"\u4f7f\u7528matlab\u5bf9\u76f8\u673a\u8fdb\u884c\u6807\u5b9a 4800\u62a5\u9500\u5b8c\u6bd5 \u5efa\u6a21\u5b66\u4e60 9.9~9.12\u53c2\u52a0\u6570\u5b66\u5efa\u6a21","title":"9.7"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/Daily%20Learning/#915","text":"","title":"9.15"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/Daily%20Learning/#zero-shot-object-detection","text":"","title":"Zero-Shot object detection"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/Daily%20Learning/#daily-knowledge","text":"","title":"Daily Knowledge"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E6%9A%91%E5%81%87%E6%91%B8%E9%B1%BC/","text":"\u5b66\u4e60\u8bb0\u5f55 \u00b6 7.19 \u00b6 \u4e3b\u673a\u4e0atensorflow-gpu2.1.1\u603b\u662f\u8d85\u65f6\u5b89\u88c5\u4e0d\u4e0a\u6e05\u534e\u6e90\u4e5f\u662f,\u5230 pypi\u5b98\u7f51 \u4e0b\u8f7dwhl\u5230\u672c\u5730,\u5229\u7528pip install PATH/xxx.whl\u5b89\u88c5\u6210\u529f golang\u5b89\u88c5\u4e0e\u914d\u7f6e\uff0c \u5b98\u7f51 ,vscode\u914d\u7f6e\uff0cctrl+shift+x\u641c\u7d22go,\u4e0b\u8f7dgoogle\u7684\u7b2c\u4e00\u4e2ago, \u6253\u5f00\u6587\u4ef6\u5939\uff0cctrl+shift+`\u6253\u5f00\u7ec8\u7aef\u8f93\u5165go mod ..... \u65b0\u5efa\u6587\u4ef6\u590d\u5236\u4e00\u6bb5\u4ee3\u7801\uff0c\u4fdd\u5b58\u6309\u7167\u63d0\u9192\u4e0b\u8f7dtools,\u5982\u679c\u51fa\u73b0\u4e0b\u8f7d\u5931\u8d25\u5c31\u8bbe\u7f6e\u4ee3\u7406\uff0c\u5982\u4e0b go env - w GO111MODULE = on go env - w GOPROXY = https : //goproxy.io,direct 7.20 \u00b6 cmake \u5b66\u4e60 \u00b6 Linux\u5e73\u53f0\u4e0b\u4f7f\u7528CMake\u751f\u6210Makefile\u5e76\u7f16\u8bd1\u7684\u6d41\u7a0b\u5982\u4e0b \u7f16\u5199CMake\u914d\u7f6e\u6587\u4ef6CMakelists.txt \u6267\u884ccmake PATH \u6216\u8005 ccmake PATH \u751f\u6210Makefile(ccmake\u4f1a\u63d0\u4f9b\u4ea4\u4e92\u5f0f\u754c\u9762) \u4f7f\u7528make\u8fdb\u884c\u7f16\u8bd1 CMakelists.txt\u57fa\u672c\u8bed\u6cd5 # CMake \u6700\u4f4e\u7248\u672c\u53f7\u8981\u6c42 cmake_minimum_required ( VERSION 2.8 ) # \u9879\u76ee\u4fe1\u606f project ( Test_Demo1 ) # \u8bbe\u7f6ec++\u7684\u7248\u672c\u5e76\u6dfb\u52a0\u591a\u7ebf\u7a0b\u4f7f\u7528 set ( CMAKE_CXXFLAGS \"${CMKAE_CXX_FLAGS} -std=c++17 -pthread\" ) # \u6307\u5b9a\u751f\u6210\u76ee\u6807 add_executable ( Test_Demo1 main.cpp XXX.cpp ) # \u5982\u679c\u6e90\u6587\u4ef6\u5f88\u591a aux_source_directory(<dir> <variable>) \u67e5\u627edir\u4e0b\u6240\u6709\u6e90\u6587\u4ef6\uff0c\u5e76\u5c06\u540d\u79f0\u4fdd\u5b58\u5728variable\u53d8\u91cf\u4e2d aux_source_directory ( . DIR_SRCS ) add_executable ( Demo2 ${ DIR_SRCS } ) \u6848\u4f8b\u4e8c \u5bf9\u4e8e\u6839\u76ee\u5f55\u4e0b\u7531\u6240\u5c01\u88c5\u597d\u7684\u5305\u6587\u4ef6\u5939\uff08cpp\u4e0eh\uff09\u4ee5\u53ca\u9879\u76ee\u76ee\u5f55\uff08main.cpp)\uff0c \u9700\u8981\u5728\u6839\u76ee\u5f55\u4e0e\u9879\u76ee\u76ee\u5f55src\u548c\u5305\u6587\u4ef6\u5939\u4e0b\u5404\u7f16\u5199\u4e00\u4e2aCMakelists.txt\u6587\u4ef6 ## \u6839\u76ee\u5f55\u4e0b\u7684CMakelists cmake_minimum_required ( VERSION 2.8 ) project ( Test_Demo3 ) set ( CMAKE_CXXFLAGS \"${CMKAE_CXX_FLAGS} -std=c++17 -pthread\" ) aux_source_directory ( . DIR_SRCS ) # \u6dfb\u52a0\u5b50\u76ee\u5f55 add_subdirectory ( ./MyMath ) add_subdirectory ( ./src ) MyMath \u76ee\u5f55\u4e0b\u7684CMakelists aux_source_diretory ( . DIR_LIB_SRCS ) # \u8bbe\u7f6e\u8f93\u51fa\u8def\u5f84 SET ( LIBRARY_OUTPUT_PATH ${ PROJECT_BINARY_DIR } /lib ) # \u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93SHARED \u9759\u6001\u5e93STATIC add_library ( MathFunctions SHARED ${ DIR_LIB_SRCS } ) src\u5b50\u76ee\u5f55\u4e2dCMakelists.txt # \u5305\u542b\u7684\u6587\u4ef6\u8def\u5f84 INCLUDE_DIRECTORIES ( ${ PROJECT_SOURCE_DIR } /MyMath ) # \u8bbe\u7f6e\u8f93\u51fa\u6587\u4ef6\u7684\u8def\u5f84 set ( EXECUTABLE_OUTPUT_PATH ${ PROJECT_BINARY_DIR } /bin ) aux_source_directory ( . DIR_SRCS ) add_executable ( Demo3 main.cpp ) # \u6dfb\u52a0\u94fe\u63a5\u5e93 target_link_libraries ( Demo3 MathFunctions ) \u6848\u4f8b\u4e09\uff1a \u81ea\u5b9a\u4e49\u7f16\u8bd1\u9009\u9879 \u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u5c06MathFunction\u5e93\u8bbe\u4e3a\u4e00\u4e2a\u53ef\u9009\u7684\u5e93 set ( CMKAE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++17 -pthread\" ) set ( EXECUTABLE_OUTPUT_PATH ${ PROJECT_BINARY_DIR } /bin ) # \u52a0\u5165\u4e00\u4e2a\u914d\u7f6e\u5934\u6587\u4ef6\uff0c \u7528\u4e8e\u5904\u7406CMake\u5bf9\u6e90\u7801\u7684\u8bbe\u7f6e\uff08\u8f93\u5165\u8f93\u51fa\uff09 configure_file ( \"${PROJECT_SOURCE_DIR}/config/config.hpp.in\" \"${PROJECT_BINARY_DIR}/config/config.hpp\" ) # \u662f\u5426\u4f7f\u7528\u81ea\u5df1\u7684MathFunctions\u5e93 option ( USE_MYMATH \"Use provided math implementation\" ON ) # \u662f\u5426\u52a0\u5165MathFunction\u5e93 if ( USE_MYMATH include_directories \uff08 \"&{PROJECT_SOURCE_DIR}/MyMath\" ) endif ( USE_MYMATH ) aux_source_directory ( ./ DIR_SRCS ) add_executable ( Demo4 ${ DIR_SRCS } ) target_link_libraries ( Demo4 MathFunctions ) \u5176\u4e2d\uff1a configure_file \u547d\u4ee4\u7528\u4e8e\u52a0\u5165\u4e00\u4e2a\u914d\u7f6e\u5934\u6587\u4ef6 config.hpp\uff0c\u8fd9\u4e2a\u6587\u4ef6\u7531 CMake \u4ececonfig.hpp.in \u751f\u6210\uff0c\u901a\u8fc7\u8fd9\u6837\u7684\u673a\u5236\uff0c\u5c06\u53ef\u4ee5\u901a\u8fc7\u9884\u5b9a\u4e49\u4e00\u4e9b\u53c2\u6570\u548c\u53d8\u91cf\u6765\u63a7\u5236\u4ee3\u7801\u7684\u751f\u6210\u3002 option \u547d\u4ee4\u6dfb\u52a0\u4e86\u4e00\u4e2a USE_MYMATH \u9009\u9879\uff0c\u5e76\u4e14\u9ed8\u8ba4\u503c\u4e3a ON \u3002 USE_MYMATH\u53d8\u91cf\u7684\u503c\u6765\u51b3\u5b9a\u662f\u5426\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684 MathFunctions \u5e93\u3002 \u4e4b\u540e\u9700\u8981\u4fee\u6539main.cpp\uff0c\u8ba9\u5176\u6839\u636eUSE_MYMATH\u7684\u9884\u5b9a\u4e49\u503c\u6765\u51b3\u5b9a\u8c03\u7528\u6807\u51c6\u5e93\u8fd8\u662fMathFunctions #include <iostream> #include \"../config/config.hpp\" using namespace std ; // \u6761\u4ef6\u7f16\u8bd1\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u5e93 #ifdef USE_MYMATH #include \"../MyMath/MathFunctions.h\" #else #include <math.h> #endif int main ( int argc , char * argv []) { if ( argc < 3 ){ printf ( \"Usage: %s base exponent \\n \" , argv [ 0 ]); return 1 ; } double base = atof ( argv [ 1 ]); int exponent = atoi ( argv [ 2 ]); #ifdef USE_MYMATH printf ( \"Now we use our own Math library. \\n \" ); double result = power ( base , exponent ); #else printf ( \"Now we use the standard library. \\n \" ); double result = pow ( base , exponent ); #endif printf ( \"%g ^ %d is %g \\n \" , base , exponent , result ); return 0 ; } \u7f16\u5199config\u76ee\u5f55\u6587\u4ef6 \u4e3a\u4e86\u65b9\u4fbfCMakelist.txt\u4e2d\u5bfc\u5165\u914d\u7f6e\uff0c\u6211\u4eec\u7f16\u5199\u4e00\u4e2aconfig.hpp.in\u6587\u4ef6\uff0c\u8fd9\u6837CMake\u4f1a\u81ea\u52a8\u6839\u636eCMakelist\u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e\u81ea\u52a8\u751f\u6210config.hpp #cmakedefine USE_MYMATH \u6848\u4f8b\u56db\uff1a\u5b89\u88c5\u4e0e\u6d4b\u8bd5 \u6307\u5b9a\u5b89\u88c5\u89c4\u5219 \u5728\u6839\u76ee\u5f55\u7684CMakelists\u6587\u4ef6\u4e2d\u6dfb\u52a0 # \u6307\u5b9a\u5b89\u88c5\u8def\u5f84 \u9ed8\u8ba4\u5728/usr/local\u4e0b install ( TARGETS Demo5 DESTINATION /XXX/Test_Demo5/bin ) install ( FILES \"${PROJECT_BINARY_DIR}/config/config.hpp\" DESTINATION /XXX/Test_Demo5/include ) # \u6307\u5b9aMathFunctions\u5e93\u7684\u5b89\u88c5\u8def\u5f84 \u9ed8\u8ba4\u5728usr/local\u4e0b install ( TARGETS MathFunction DESTINATION /XXX/Test_Demo5/lib ) install ( FILES MathFunctions.h DESTINATION /XXX/Test_Demo5/include ) \u4e3a\u5de5\u7a0b\u6dfb\u52a0\u6d4b\u8bd5 # \u542f\u7528\u6d4b\u8bd5 enable_testing () # \u6d4b\u8bd5\u7a0b\u5e8f\u662f\u5426\u6210\u529f\u8fd0\u884c add_test ( test_run ./bin/Demo5 5 2 ) # \u6d4b\u8bd5\u5e2e\u52a9\u4fe1\u606f\u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u63d0\u793a add_test ( test_usage ./bin/Demo5 ) set_tests_properties ( test_usage PROPERTIES PASS_REGULAR_EXPRESSION \"Usage: .* base exponent\" ) # \u6d4b\u8bd5 5 \u7684\u5e73\u65b9 add_test ( test_5_2 ./bin/Demo5 5 2 ) set_tests_properties ( test_5_2 PROPERTIES PASS_REGULAR_EXPRESSION \"is 25\" ) # \u6d4b\u8bd5 10 \u7684 5 \u6b21\u65b9 add_test ( test_10_5 ./bin/Demo5 10 5 ) set_tests_properties ( test_10_5 PROPERTIES PASS_REGULAR_EXPRESSION \"is 100000\" ) # \u6d4b\u8bd5 2 \u7684 10 \u6b21\u65b9 add_test ( test_2_10 ./bin/Demo5 2 10 ) set_tests_properties ( test_2_10 PROPERTIES PASS_REGULAR_EXPRESSION \"is 1024\" ) \u7f16\u5199\u5b8f\u66f4\u65b9\u4fbf\u7684\u8fdb\u884c\u6d4b\u8bd5 # \u5b9a\u4e49\u4e00\u4e2a\u5b8f\uff0c\u7528\u6765\u7b80\u5316\u6d4b\u8bd5\u5de5\u4f5c macro ( do_test arg1 arg2 result ) add_test ( test_ ${ arg1 } _ ${ arg2 } ./bin/Demo5 ${ arg1 } ${ arg2 } ) set_tests_properties ( test_ ${ arg1 } _ ${ arg2 } PROPERTIES PASS_REGULAR_EXPRESSION ${ result } ) endmacro ( do_test ) # \u4f7f\u7528\u8be5\u5b8f\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u6570\u636e\u6d4b\u8bd5 do_test ( 5 2 \"is 25\" ) do_test ( 10 5 \"is 100000\" ) do_test ( 2 10 \"is 1024\" ) \u5173\u4e8e CTest \u7684\u66f4\u8be6\u7ec6\u7684\u7528\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 man 1 ctest \u547d\u4ee4\u53c2\u8003 CTest \u7684\u6587\u6863\u3002 \u652f\u6301 gdb \u8ba9 CMake \u652f\u6301 gdb \u7684\u8bbe\u7f6e\u4e5f\u5f88\u5bb9\u6613\uff0c\u53ea\u9700\u8981\u6307\u5b9a Debug \u6a21\u5f0f\u4e0b\u5f00\u542f -g \u9009\u9879\uff1a set ( CMAKE_BUILD_TYPE \"Debug\" ) set ( CMAKE_CXX_FLAGS_DEBUG \"$ENV{CXXFLAGS} -O0 -Wall -g -ggdb\" ) set ( CMAKE_CXX_FLAGS_RELEASE \"$ENV{CXXFLAGS} -O3 -Wall\" ) \u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u5bf9\u751f\u6210\u7684\u7a0b\u5e8f\u4f7f\u7528 gdb \u6765\u8c03\u8bd5\u3002 7.21 (ps:\u8fde\u7eed\u4e24\u5929\u5173\u95ed\u4e0d\u63d0\u9192\u4fdd\u5b58\uff0c\u5bfc\u81f4\u8fd9\u4e24\u5929\u7684\u914dcuda\u73af\u5883\u8e29\u5751\u6307\u5357\u5168\u51c9\u51c9) \u00b6 conda remove --name tensorflow --all \u4e4b\u540e\u65e0\u6cd5\u521b\u5efa\u73af\u5883\u62a5\u9519json.decoder.JSONDecodeError: Unterminated string starting at: line 651271 conda clean -i cant ffmpeg: conda install ffmpeg conda-forge 8.14 \u00b6 git\u52a0\u901f \u8bbe\u7f6e\u4ee3\u7406\uff1a\u67e5\u770bv2ray\u7684\u4ee3\u7406\u7aef\u53e3 \uff08\u6211\u662f10808\uff09 git config --global http.https://github.com.proxy socks5://127.0.0.1:10808 git config --global https.https://github.com.proxy socks5://127.0.0.1:10808","title":"\u5b66\u4e60\u8bb0\u5f55"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E6%9A%91%E5%81%87%E6%91%B8%E9%B1%BC/#_1","text":"","title":"\u5b66\u4e60\u8bb0\u5f55"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E6%9A%91%E5%81%87%E6%91%B8%E9%B1%BC/#719","text":"\u4e3b\u673a\u4e0atensorflow-gpu2.1.1\u603b\u662f\u8d85\u65f6\u5b89\u88c5\u4e0d\u4e0a\u6e05\u534e\u6e90\u4e5f\u662f,\u5230 pypi\u5b98\u7f51 \u4e0b\u8f7dwhl\u5230\u672c\u5730,\u5229\u7528pip install PATH/xxx.whl\u5b89\u88c5\u6210\u529f golang\u5b89\u88c5\u4e0e\u914d\u7f6e\uff0c \u5b98\u7f51 ,vscode\u914d\u7f6e\uff0cctrl+shift+x\u641c\u7d22go,\u4e0b\u8f7dgoogle\u7684\u7b2c\u4e00\u4e2ago, \u6253\u5f00\u6587\u4ef6\u5939\uff0cctrl+shift+`\u6253\u5f00\u7ec8\u7aef\u8f93\u5165go mod ..... \u65b0\u5efa\u6587\u4ef6\u590d\u5236\u4e00\u6bb5\u4ee3\u7801\uff0c\u4fdd\u5b58\u6309\u7167\u63d0\u9192\u4e0b\u8f7dtools,\u5982\u679c\u51fa\u73b0\u4e0b\u8f7d\u5931\u8d25\u5c31\u8bbe\u7f6e\u4ee3\u7406\uff0c\u5982\u4e0b go env - w GO111MODULE = on go env - w GOPROXY = https : //goproxy.io,direct","title":"7.19"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E6%9A%91%E5%81%87%E6%91%B8%E9%B1%BC/#720","text":"","title":"7.20"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E6%9A%91%E5%81%87%E6%91%B8%E9%B1%BC/#cmake","text":"Linux\u5e73\u53f0\u4e0b\u4f7f\u7528CMake\u751f\u6210Makefile\u5e76\u7f16\u8bd1\u7684\u6d41\u7a0b\u5982\u4e0b \u7f16\u5199CMake\u914d\u7f6e\u6587\u4ef6CMakelists.txt \u6267\u884ccmake PATH \u6216\u8005 ccmake PATH \u751f\u6210Makefile(ccmake\u4f1a\u63d0\u4f9b\u4ea4\u4e92\u5f0f\u754c\u9762) \u4f7f\u7528make\u8fdb\u884c\u7f16\u8bd1 CMakelists.txt\u57fa\u672c\u8bed\u6cd5 # CMake \u6700\u4f4e\u7248\u672c\u53f7\u8981\u6c42 cmake_minimum_required ( VERSION 2.8 ) # \u9879\u76ee\u4fe1\u606f project ( Test_Demo1 ) # \u8bbe\u7f6ec++\u7684\u7248\u672c\u5e76\u6dfb\u52a0\u591a\u7ebf\u7a0b\u4f7f\u7528 set ( CMAKE_CXXFLAGS \"${CMKAE_CXX_FLAGS} -std=c++17 -pthread\" ) # \u6307\u5b9a\u751f\u6210\u76ee\u6807 add_executable ( Test_Demo1 main.cpp XXX.cpp ) # \u5982\u679c\u6e90\u6587\u4ef6\u5f88\u591a aux_source_directory(<dir> <variable>) \u67e5\u627edir\u4e0b\u6240\u6709\u6e90\u6587\u4ef6\uff0c\u5e76\u5c06\u540d\u79f0\u4fdd\u5b58\u5728variable\u53d8\u91cf\u4e2d aux_source_directory ( . DIR_SRCS ) add_executable ( Demo2 ${ DIR_SRCS } ) \u6848\u4f8b\u4e8c \u5bf9\u4e8e\u6839\u76ee\u5f55\u4e0b\u7531\u6240\u5c01\u88c5\u597d\u7684\u5305\u6587\u4ef6\u5939\uff08cpp\u4e0eh\uff09\u4ee5\u53ca\u9879\u76ee\u76ee\u5f55\uff08main.cpp)\uff0c \u9700\u8981\u5728\u6839\u76ee\u5f55\u4e0e\u9879\u76ee\u76ee\u5f55src\u548c\u5305\u6587\u4ef6\u5939\u4e0b\u5404\u7f16\u5199\u4e00\u4e2aCMakelists.txt\u6587\u4ef6 ## \u6839\u76ee\u5f55\u4e0b\u7684CMakelists cmake_minimum_required ( VERSION 2.8 ) project ( Test_Demo3 ) set ( CMAKE_CXXFLAGS \"${CMKAE_CXX_FLAGS} -std=c++17 -pthread\" ) aux_source_directory ( . DIR_SRCS ) # \u6dfb\u52a0\u5b50\u76ee\u5f55 add_subdirectory ( ./MyMath ) add_subdirectory ( ./src ) MyMath \u76ee\u5f55\u4e0b\u7684CMakelists aux_source_diretory ( . DIR_LIB_SRCS ) # \u8bbe\u7f6e\u8f93\u51fa\u8def\u5f84 SET ( LIBRARY_OUTPUT_PATH ${ PROJECT_BINARY_DIR } /lib ) # \u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93SHARED \u9759\u6001\u5e93STATIC add_library ( MathFunctions SHARED ${ DIR_LIB_SRCS } ) src\u5b50\u76ee\u5f55\u4e2dCMakelists.txt # \u5305\u542b\u7684\u6587\u4ef6\u8def\u5f84 INCLUDE_DIRECTORIES ( ${ PROJECT_SOURCE_DIR } /MyMath ) # \u8bbe\u7f6e\u8f93\u51fa\u6587\u4ef6\u7684\u8def\u5f84 set ( EXECUTABLE_OUTPUT_PATH ${ PROJECT_BINARY_DIR } /bin ) aux_source_directory ( . DIR_SRCS ) add_executable ( Demo3 main.cpp ) # \u6dfb\u52a0\u94fe\u63a5\u5e93 target_link_libraries ( Demo3 MathFunctions ) \u6848\u4f8b\u4e09\uff1a \u81ea\u5b9a\u4e49\u7f16\u8bd1\u9009\u9879 \u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u5c06MathFunction\u5e93\u8bbe\u4e3a\u4e00\u4e2a\u53ef\u9009\u7684\u5e93 set ( CMKAE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++17 -pthread\" ) set ( EXECUTABLE_OUTPUT_PATH ${ PROJECT_BINARY_DIR } /bin ) # \u52a0\u5165\u4e00\u4e2a\u914d\u7f6e\u5934\u6587\u4ef6\uff0c \u7528\u4e8e\u5904\u7406CMake\u5bf9\u6e90\u7801\u7684\u8bbe\u7f6e\uff08\u8f93\u5165\u8f93\u51fa\uff09 configure_file ( \"${PROJECT_SOURCE_DIR}/config/config.hpp.in\" \"${PROJECT_BINARY_DIR}/config/config.hpp\" ) # \u662f\u5426\u4f7f\u7528\u81ea\u5df1\u7684MathFunctions\u5e93 option ( USE_MYMATH \"Use provided math implementation\" ON ) # \u662f\u5426\u52a0\u5165MathFunction\u5e93 if ( USE_MYMATH include_directories \uff08 \"&{PROJECT_SOURCE_DIR}/MyMath\" ) endif ( USE_MYMATH ) aux_source_directory ( ./ DIR_SRCS ) add_executable ( Demo4 ${ DIR_SRCS } ) target_link_libraries ( Demo4 MathFunctions ) \u5176\u4e2d\uff1a configure_file \u547d\u4ee4\u7528\u4e8e\u52a0\u5165\u4e00\u4e2a\u914d\u7f6e\u5934\u6587\u4ef6 config.hpp\uff0c\u8fd9\u4e2a\u6587\u4ef6\u7531 CMake \u4ececonfig.hpp.in \u751f\u6210\uff0c\u901a\u8fc7\u8fd9\u6837\u7684\u673a\u5236\uff0c\u5c06\u53ef\u4ee5\u901a\u8fc7\u9884\u5b9a\u4e49\u4e00\u4e9b\u53c2\u6570\u548c\u53d8\u91cf\u6765\u63a7\u5236\u4ee3\u7801\u7684\u751f\u6210\u3002 option \u547d\u4ee4\u6dfb\u52a0\u4e86\u4e00\u4e2a USE_MYMATH \u9009\u9879\uff0c\u5e76\u4e14\u9ed8\u8ba4\u503c\u4e3a ON \u3002 USE_MYMATH\u53d8\u91cf\u7684\u503c\u6765\u51b3\u5b9a\u662f\u5426\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684 MathFunctions \u5e93\u3002 \u4e4b\u540e\u9700\u8981\u4fee\u6539main.cpp\uff0c\u8ba9\u5176\u6839\u636eUSE_MYMATH\u7684\u9884\u5b9a\u4e49\u503c\u6765\u51b3\u5b9a\u8c03\u7528\u6807\u51c6\u5e93\u8fd8\u662fMathFunctions #include <iostream> #include \"../config/config.hpp\" using namespace std ; // \u6761\u4ef6\u7f16\u8bd1\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u5e93 #ifdef USE_MYMATH #include \"../MyMath/MathFunctions.h\" #else #include <math.h> #endif int main ( int argc , char * argv []) { if ( argc < 3 ){ printf ( \"Usage: %s base exponent \\n \" , argv [ 0 ]); return 1 ; } double base = atof ( argv [ 1 ]); int exponent = atoi ( argv [ 2 ]); #ifdef USE_MYMATH printf ( \"Now we use our own Math library. \\n \" ); double result = power ( base , exponent ); #else printf ( \"Now we use the standard library. \\n \" ); double result = pow ( base , exponent ); #endif printf ( \"%g ^ %d is %g \\n \" , base , exponent , result ); return 0 ; } \u7f16\u5199config\u76ee\u5f55\u6587\u4ef6 \u4e3a\u4e86\u65b9\u4fbfCMakelist.txt\u4e2d\u5bfc\u5165\u914d\u7f6e\uff0c\u6211\u4eec\u7f16\u5199\u4e00\u4e2aconfig.hpp.in\u6587\u4ef6\uff0c\u8fd9\u6837CMake\u4f1a\u81ea\u52a8\u6839\u636eCMakelist\u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e\u81ea\u52a8\u751f\u6210config.hpp #cmakedefine USE_MYMATH \u6848\u4f8b\u56db\uff1a\u5b89\u88c5\u4e0e\u6d4b\u8bd5 \u6307\u5b9a\u5b89\u88c5\u89c4\u5219 \u5728\u6839\u76ee\u5f55\u7684CMakelists\u6587\u4ef6\u4e2d\u6dfb\u52a0 # \u6307\u5b9a\u5b89\u88c5\u8def\u5f84 \u9ed8\u8ba4\u5728/usr/local\u4e0b install ( TARGETS Demo5 DESTINATION /XXX/Test_Demo5/bin ) install ( FILES \"${PROJECT_BINARY_DIR}/config/config.hpp\" DESTINATION /XXX/Test_Demo5/include ) # \u6307\u5b9aMathFunctions\u5e93\u7684\u5b89\u88c5\u8def\u5f84 \u9ed8\u8ba4\u5728usr/local\u4e0b install ( TARGETS MathFunction DESTINATION /XXX/Test_Demo5/lib ) install ( FILES MathFunctions.h DESTINATION /XXX/Test_Demo5/include ) \u4e3a\u5de5\u7a0b\u6dfb\u52a0\u6d4b\u8bd5 # \u542f\u7528\u6d4b\u8bd5 enable_testing () # \u6d4b\u8bd5\u7a0b\u5e8f\u662f\u5426\u6210\u529f\u8fd0\u884c add_test ( test_run ./bin/Demo5 5 2 ) # \u6d4b\u8bd5\u5e2e\u52a9\u4fe1\u606f\u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u63d0\u793a add_test ( test_usage ./bin/Demo5 ) set_tests_properties ( test_usage PROPERTIES PASS_REGULAR_EXPRESSION \"Usage: .* base exponent\" ) # \u6d4b\u8bd5 5 \u7684\u5e73\u65b9 add_test ( test_5_2 ./bin/Demo5 5 2 ) set_tests_properties ( test_5_2 PROPERTIES PASS_REGULAR_EXPRESSION \"is 25\" ) # \u6d4b\u8bd5 10 \u7684 5 \u6b21\u65b9 add_test ( test_10_5 ./bin/Demo5 10 5 ) set_tests_properties ( test_10_5 PROPERTIES PASS_REGULAR_EXPRESSION \"is 100000\" ) # \u6d4b\u8bd5 2 \u7684 10 \u6b21\u65b9 add_test ( test_2_10 ./bin/Demo5 2 10 ) set_tests_properties ( test_2_10 PROPERTIES PASS_REGULAR_EXPRESSION \"is 1024\" ) \u7f16\u5199\u5b8f\u66f4\u65b9\u4fbf\u7684\u8fdb\u884c\u6d4b\u8bd5 # \u5b9a\u4e49\u4e00\u4e2a\u5b8f\uff0c\u7528\u6765\u7b80\u5316\u6d4b\u8bd5\u5de5\u4f5c macro ( do_test arg1 arg2 result ) add_test ( test_ ${ arg1 } _ ${ arg2 } ./bin/Demo5 ${ arg1 } ${ arg2 } ) set_tests_properties ( test_ ${ arg1 } _ ${ arg2 } PROPERTIES PASS_REGULAR_EXPRESSION ${ result } ) endmacro ( do_test ) # \u4f7f\u7528\u8be5\u5b8f\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u6570\u636e\u6d4b\u8bd5 do_test ( 5 2 \"is 25\" ) do_test ( 10 5 \"is 100000\" ) do_test ( 2 10 \"is 1024\" ) \u5173\u4e8e CTest \u7684\u66f4\u8be6\u7ec6\u7684\u7528\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 man 1 ctest \u547d\u4ee4\u53c2\u8003 CTest \u7684\u6587\u6863\u3002 \u652f\u6301 gdb \u8ba9 CMake \u652f\u6301 gdb \u7684\u8bbe\u7f6e\u4e5f\u5f88\u5bb9\u6613\uff0c\u53ea\u9700\u8981\u6307\u5b9a Debug \u6a21\u5f0f\u4e0b\u5f00\u542f -g \u9009\u9879\uff1a set ( CMAKE_BUILD_TYPE \"Debug\" ) set ( CMAKE_CXX_FLAGS_DEBUG \"$ENV{CXXFLAGS} -O0 -Wall -g -ggdb\" ) set ( CMAKE_CXX_FLAGS_RELEASE \"$ENV{CXXFLAGS} -O3 -Wall\" ) \u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u5bf9\u751f\u6210\u7684\u7a0b\u5e8f\u4f7f\u7528 gdb \u6765\u8c03\u8bd5\u3002","title":"cmake \u5b66\u4e60"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E6%9A%91%E5%81%87%E6%91%B8%E9%B1%BC/#721-pscuda","text":"conda remove --name tensorflow --all \u4e4b\u540e\u65e0\u6cd5\u521b\u5efa\u73af\u5883\u62a5\u9519json.decoder.JSONDecodeError: Unterminated string starting at: line 651271 conda clean -i cant ffmpeg: conda install ffmpeg conda-forge","title":"7.21 (ps:\u8fde\u7eed\u4e24\u5929\u5173\u95ed\u4e0d\u63d0\u9192\u4fdd\u5b58\uff0c\u5bfc\u81f4\u8fd9\u4e24\u5929\u7684\u914dcuda\u73af\u5883\u8e29\u5751\u6307\u5357\u5168\u51c9\u51c9)"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E6%9A%91%E5%81%87%E6%91%B8%E9%B1%BC/#814","text":"git\u52a0\u901f \u8bbe\u7f6e\u4ee3\u7406\uff1a\u67e5\u770bv2ray\u7684\u4ee3\u7406\u7aef\u53e3 \uff08\u6211\u662f10808\uff09 git config --global http.https://github.com.proxy socks5://127.0.0.1:10808 git config --global https.https://github.com.proxy socks5://127.0.0.1:10808","title":"8.14"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/","text":"\u4e13\u680f\u4ecb\u7ecd \u00b6 \u6b64\u4e13\u680f\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9 \u6bd4\u8d5b\u5168\u6d41\u7a0b\u8bb0\u5f55\uff0c\u8c03\u53c2\u5fc3\u5f97 \u9879\u76ee\u5b9e\u64cd\u7684\u5168\u6d41\u7a0b\u8bb0\u5f55\uff0c\u5b9e\u9645\u95ee\u9898\u7684\u89e3\u51b3\u7b56\u7565 \u6a21\u5757\u5316\u5b66\u4e60\u7684\u8bb0\u5f55 \u81ea\u5df1\u7684\u5c0f\u9879\u76ee\u6559\u7a0b \u6709\u5199\u7684\u4e0d\u5bf9\u7684\u5730\u65b9\u6b22\u8fce\u5927\u5bb6\u591a\u591a\u6307\u5bfc","title":"\u4e13\u680f\u4ecb\u7ecd"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/#_1","text":"\u6b64\u4e13\u680f\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9 \u6bd4\u8d5b\u5168\u6d41\u7a0b\u8bb0\u5f55\uff0c\u8c03\u53c2\u5fc3\u5f97 \u9879\u76ee\u5b9e\u64cd\u7684\u5168\u6d41\u7a0b\u8bb0\u5f55\uff0c\u5b9e\u9645\u95ee\u9898\u7684\u89e3\u51b3\u7b56\u7565 \u6a21\u5757\u5316\u5b66\u4e60\u7684\u8bb0\u5f55 \u81ea\u5df1\u7684\u5c0f\u9879\u76ee\u6559\u7a0b \u6709\u5199\u7684\u4e0d\u5bf9\u7684\u5730\u65b9\u6b22\u8fce\u5927\u5bb6\u591a\u591a\u6307\u5bfc","title":"\u4e13\u680f\u4ecb\u7ecd"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/JLU%20Captcha/","text":"\u5409\u6797\u5927\u5b66\u6559\u52a1\u7cfb\u7edf\u9a8c\u8bc1\u7801\u8bc6\u522b\u65b9\u6848 \u00b6 verification code classification \u4ee3\u7801\u94fe\u63a5\uff1a https://gitee.com/cocoon-storage/jlu_-captcha \u524d\u8a00 \u00b6 \u6bcf\u6b21\u767b\u5f55\u5409\u6797\u5927\u5b66\u6559\u52a1\u7cfb\u7edf\u65f6\uff0c\u8c37\u6b4c\u6d4f\u89c8\u5668\u53ef\u4ee5\u4fdd\u5b58\u8d26\u53f7\u5bc6\u7801\u4e0d\u7528\u518d\u6b21\u8f93\u5165\uff0c\u53ef\u662f\u9a8c\u8bc1\u7801\u5374\u6bcf\u6b21\u90fd\u8981\u8f93\u5165\u4e00\u6b21\uff0c\u5f88\u9ebb\u70e6\uff0c\u8fd9\u6211\u67d0\u4e2a\u5927\u4f6c\u5b66\u957f\u7f51\u7ad9\u7684\u9700\u6c42\uff0c\u6211\u6b63\u597d\u5f53\u65f6\u4e5f\u5728\u505a\u89c6\u89c9,\u5c31\u60f3\u7740\u80fd\u4e0d\u80fd\u505a\u4e00\u4e2a\u51fa\u6765\uff0c\u7136\u540e\u4ed6\u628a\u6570\u636e\u96c6\u53d1\u7ed9\u6211\uff0c\u6211\u5f00\u59cb\u4e86\u5c1d\u8bd5 \u56fe\u50cf\u5206\u6790 \u00b6 \u9996\u5148\u89c2\u5bdf\u56fe\u50cf\u7279\u5f81\uff1a \u6bcf\u4e2a\u6570\u5b57\u7684\u9ad8\u5ea6\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4e14\u65e0\u5f62\u53d8\u3002(\u5f88\u91cd\u8981\uff01\uff01) \u6bcf\u4e2a\u6570\u5b57\u989c\u8272\u90fd\u4e00\u6837 \u80cc\u666f\u566a\u58f0\u65e0\u5e8f\uff0c\u653e\u5927\u89c2\u5bdf\u540e\u4e25\u91cd\u5e72\u6270\u6570\u5b57\u7684\u6574\u4f53\u6027 \u601d\u8def \u00b6 \u8e29\u5751\u601d\u8def \u00b6 \u501f\u9274\u4e4b\u524d\u5b66\u4e60opencv\u65f6\u7684\u8f66\u724c\u8bc6\u522b\u601d\u8def\uff1a\u5373\u5c06\u56fe\u50cf\u8fdb\u884c\u4e8c\u503c\u5316->\u8fdb\u884c\u8150\u8680\uff0c\u76f4\u5230\u56db\u4e2a\u6570\u5b57\u5408\u5e76\u5230\u4e00\u4e2a\u8fde\u901a\u57df\u4e2d\uff0c\u7136\u540e\u5728\u539f\u56fe\u7b49\u95f4\u9694\u5206\u5272\u51fa\u6765\uff0c\u8fdb\u884c\u6ee4\u6ce2\u53bb\u566a\uff0c\u6700\u540e\u904d\u5386\u6a21\u677f\u5339\u914d\u5f97\u5230\u6570\u5b57 \u7f3a\u70b9 \u6570\u5b57\u4ec5\u4ec5\u9ad8\u5ea6\u76f8\u540c\uff0c\u5bbd\u5ea6\u5374\u4e0d\u76f8\u540c\uff0c\u5206\u5272\u540e\u7684\u6570\u5b57\u8fd8\u4f1a\u6709\u5f88\u591a\u566a\u58f0\u4f1a\u5bfc\u81f4\u6a21\u677f\u5339\u914d\u6b63\u786e\u7387\u4e0b\u964d\uff0c\u8fd9\u91cc\u53ef\u80fd\u91c7\u53d6\u673a\u5668\u5b66\u4e60\u4f1a\u66f4\u597d\uff0c\u4f46\u662f\u6700\u9ebb\u70e6\u7684\u662f\u6807\u6ce8\uff0c\u5b66\u957f\u7ed9\u6211\u7684\u6570\u636e\u96c6\u90fd\u662f\u6ca1\u6709\u6807\u6ce8\u8fc7\u7684,\u6240\u4ee5\u6211\u5e72\u8106\u653e\u5f03\u4e86\u8fd9\u4e2a\u65b9\u6848 \u6700\u7ec8\u65b9\u6848 \u00b6 \u65e2\u7136\u6807\u6ce8\u4e0d\u73b0\u5b9e\uff0c\u6211\u4e5f\u5c31\u653e\u5f03\u4e86\u6df1\u5ea6\u5b66\u4e60\u8fd9\u4e2a\u65b9\u6848\uff0c\u8fd9\u65f6\u5019\u6211\u53d1\u73b0\u4e86\u8fd9\u4e9b\u6570\u5b57\u7684\u5b57\u5f62\u662f\u4e0d\u53d8\u7684\uff01\uff01\u4e5f\u5c31\u662f\u8bf4\u6211\u4e0d\u9700\u8981\u7535\u8111\u81ea\u5df1\u53bb\u5b66\u4e60\u8fd9\u4e2a\u6a21\u578b\uff0c\u6211\u53ef\u4ee5\u81ea\u5df1\u628a\u8fd9\u4e2a\u6570\u5b57\u7684\u6a21\u677f\u6784\u5efa\u51fa\u6765\uff0c\u4e4b\u540e\u904d\u5386\u8fdb\u884c\u5339\u914d\u5c31\u53ef\u4ee5\u7684\uff0c\u6211\u770b \u4f7f\u7528opencv\u81ea\u5e26\u7684\u9f20\u6807\u56de\u8c03\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u6784\u5efa\u6a21\u677f\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u7ed8\u753b\u73af\u8282 void mark () //\u62a0\u56fe\uff0c\u5de6\u952e\u53d8\u767d\u53f3\u952e\u53d8\u9ed1 { void onMouseCallBack ( int event , int x , int y , int flags , void * pUserData ); while ( 1 ) { namedWindow ( windowName , WINDOW_NORMAL ); imshow ( windowName , src ); cv :: setMouseCallback ( windowName , onMouseCallBack , reinterpret_cast < void *> ( & src )); char q = waitKey ( 0 ); if ( q == 27 ) { cv :: destroyWindow ( windowName ); imwrite ( \"H: \\\\ \u6df1\u5ea6\u5b66\u4e60\u6e90\u7801\u5b66\u4e60 \\\\ moban \\\\ 8.jpg\" , src ); //\u4fdd\u5b58\u62a0\u56fe\u5b8c\u6210\u7684\u6a21\u677f } if ( q == 'q' ) { cv :: destroyWindow ( windowName ); //\u4e0d\u4fdd\u5b58\u9000\u51fa break ; } } } void onMouseCallBack ( int event , int x , int y , int flags , void * pUserData ) //\u9f20\u6807\u4e8b\u4ef6\u56de\u8c03 { //\u521b\u5efa\u4fdd\u5b58\u50cf\u7d20\u503c\u76843\u5b57\u8282\u5bb9\u5668 cv :: Vec3b pixel ; //\u7a7a\u6307\u9488\u5f3a\u5236\u7c7b\u578b\u88c5\u6362\u6210\u56fe\u7247\u6307\u9488pMat cv :: Mat * pMat = reinterpret_cast < cv :: Mat *> ( pUserData ); //\u9f20\u6807\u5de6\u952e\u6309\u4e0b\u65f6\uff0c\u8fd4\u56de\u5750\u6807\u548cRGB\u503c\uff0c\u5c06\u5176\u53d8\u767d if ( event == CV_EVENT_LBUTTONDOWN ) { if ( src . channels () == 1 ) { int pixel1 ; //\u83b7\u53d6\u50cf\u7d20\u503c pixel1 = pMat -> at < uchar > ( y , x ); //y\u662frow\uff0cx\u662fcol //\u8f93\u51fa\u50cf\u7d20\u503c\u7684\uff08R\uff0cG\uff0cB\uff09 //cv\u91cd\u8f7d\u4e86<<\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u8f93\u51faVec3b\u7c7b\u578b\uff0c\u4f46\u662f\u6309B,G,R\u8f93\u51fa cout << \"at(\" << x << \",\" << y << \")-->pixel(1)=\" << pixel1 << endl ; src . at < uchar > ( y , x ) = 255 ; } } //\u9f20\u6807\u53f3\u952e\u6309\u4e0b\u65f6\uff0c\u8fd4\u56de\u5750\u6807\u548cRGB\u503c\uff0c\u5c06\u5176\u53d8\u9ed1 if ( event == CV_EVENT_RBUTTONDOWN ) { if ( src . channels () == 1 ) { int pixel1 ; //\u83b7\u53d6\u50cf\u7d20\u503c pixel1 = pMat -> at < uchar > ( y , x ); //y\u662frow\uff0cx\u662fcol //\u8f93\u51fa\u50cf\u7d20\u503c\u7684\uff08R\uff0cG\uff0cB\uff09 //cv\u91cd\u8f7d\u4e86<<\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u8f93\u51faVec3b\u7c7b\u578b\uff0c\u4f46\u662f\u6309B,G,R\u8f93\u51fa cout << \"at(\" << x << \",\" << y << \")-->pixel(1)=\" << pixel1 << endl ; src . at < uchar > ( y , x ) = 0 ; } } } \u62a0\u56fe\u7ed3\u675f\u540e\u5f97\u52309\u4e2a\u6a21\u677f \u4e4b\u540e\u5c31\u662fdebug\u73af\u8282 \u8fc7\u7a0b\u4e2d\u6211\u53d1\u73b0\u4e86\u6570\u5b57\u7684\u9ad8\u5ea6\u662f\u4e00\u6837\u7684\uff0c\u800c\u4e14\u5728\u56fe\u50cf\u4e2d\u7684\u9ad8\u5ea6\u4f4d\u7f6e\u4e5f\u662f\u56fa\u5b9a\u7684\uff0c\u800c\u4e14\u6bcf\u4e2a\u6570\u5b57\u4e5f\u670910\u50cf\u7d20\u5de6\u53f3\u7684\u5bbd\u5ea6\uff0c\u6240\u4ee5\u6211\u7f29\u5c0f\u4e86\u5faa\u73af\u8303\u56f4\uff0c\u53ea\u5728\u76f8\u540c\u9ad8\u5ea6\u8fdb\u884c\u904d\u5386\uff0c\u4e14\u8bc6\u522b\u5230\u4e00\u4e2a\u6570\u5b57\u4e4b\u540e\u8df3\u8dc38\u4e2a\u50cf\u7d20\u8bc6\u522b\u4e0b\u4e00\u4e2a\u6570\u5b57 \u5339\u914d\u601d\u8def\u4e3a\uff1a \u5c06\u56fe\u50cf\u8fdb\u884c\u7070\u5ea6\u5904\u7406\uff0c\u7531\u4e8e \u6bcf\u4e2a\u6570\u5b57\u989c\u8272\u90fd\u662f\u4e00\u6837\u7684 \uff0c\u6240\u4ee5\u5728\u7070\u5ea6\u56fe\u50cf\u4e2d\u7070\u5ea6\u7ea7\u662f\u8fde\u7eed\u7684 \u904d\u5386\u5957\u7528\u6a21\u677f\uff0c\u6c42\u5728\u6a21\u677f\u7684\u4f4d\u7f6e\u50cf\u7d20\u7684\u65b9\u5dee\u4e0e\u6781\u5dee\uff0c\u5e76\u4ee5\u5176\u4f5c\u4e3a\u9608\u503c\u8fdb\u884c\u7b5b\u9009\uff0c\u6781\u5dee\u4f4e\u4e8e\u9608\u503c\u5c31\u5224\u5b9a\u4e3a\u8be5\u6a21\u677f\u6240\u4ee3\u8868\u7684\u6570\u5b57\uff0c\u6781\u5dee\u9ad8\u4e8e\u9608\u503c\u5219\u7ee7\u7eed\u904d\u5386 \u8fdb\u8fc720\u5f20\u56fe\u5de6\u53f3\u7684debug\uff0c\u5bf9\u6a21\u677f\u6a21\u677f\u8fdb\u884c\u4e86\u4e00\u4e9b\u6539\u52a8 \u4ee5\u4e0b\u4e3a\u65b0\u76849\u4e2a\u6a21\u677f \u4e4b\u540e\u5c31\u662f\u9a8c\u8bc1\u73af\u8282\uff0c\u5bf9\u6570\u636e\u96c6\u4e00\u4e00\u9a8c\u8bc1\uff0c\u5982\u679c\u9047\u5230\u95ee\u9898\u5c31\u62ff\u56fe\u8fdb\u884cdebug\uff0c\u57fa\u672c\u6ca1\u4ec0\u4e48\u5927\u95ee\u9898 \u503c\u5f97\u6ce8\u610f\u7684\u662f 3 \u548c 8 \u5b57\u5f62\u6709\u4e00\u534a\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u6211\u7684\u904d\u5386\u987a\u5e8f\u662f1-2-3-4-5-6-7-8-9-0\uff0c\u6240\u4ee5\u5982\u679c\u5148\u62ff3\u7684\u6a21\u677f\u53bb\u5339\u914d8\u8fd9\u4e2a\u6570\u5b57\u7684\u8bdd\uff0c\u5f88\u5bb9\u6613\u4f1a\u8bef\u8bc6\u522b\uff0c\u6211\u5c06\u6a21\u677f\u7684\u904d\u5386\u987a\u5e8f\u53cd\u8f6c\uff0c\u4ee5\u53ca\u5c31\u662f\u5148\u8fdb\u884c8\u7684\u8bc6\u522b\uff0c\u5982\u679c\u5339\u914d\u5c31\u8ba4\u4e3a\u8be5\u6570\u5b57\u662f8\uff0c\u4e0d\u5339\u914d\u7684\u8bdd\u518d\u8fdb\u884c3\u7684\u5339\u914d \u6700\u7ec8\u5927\u529f\u544a\u6210\uff0c\u6570\u636e\u96c6\u8fdb\u884c\u4e862000\u5f20\u9a8c\u8bc1\u90fd\u6ca1\u6709\u8bef\u8bc6\u522b\u6216\u9519\u8bc6\u522b\u7684\u60c5\u51b5\uff0c\u6211\u5c06\u6e90\u4ee3\u7801\u53d1\u7ed9\u5b66\u957f\uff0c\u5b66\u957f\u6574\u5408\u4e86\u7f51\u7ad9\u4e0a\u83b7\u5f97\u4e86\u5f88\u4e1d\u6ed1\u7684\u6548\u679c\uff01\uff01 \u6700\u7ec8\u6548\u679c \u00b6","title":"\u5409\u6797\u5927\u5b66\u6559\u52a1\u7ba1\u7406\u7cfb\u7edf\u9a8c\u8bc1\u7801\u8bc6\u522b"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/JLU%20Captcha/#_1","text":"verification code classification \u4ee3\u7801\u94fe\u63a5\uff1a https://gitee.com/cocoon-storage/jlu_-captcha","title":"\u5409\u6797\u5927\u5b66\u6559\u52a1\u7cfb\u7edf\u9a8c\u8bc1\u7801\u8bc6\u522b\u65b9\u6848"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/JLU%20Captcha/#_2","text":"\u6bcf\u6b21\u767b\u5f55\u5409\u6797\u5927\u5b66\u6559\u52a1\u7cfb\u7edf\u65f6\uff0c\u8c37\u6b4c\u6d4f\u89c8\u5668\u53ef\u4ee5\u4fdd\u5b58\u8d26\u53f7\u5bc6\u7801\u4e0d\u7528\u518d\u6b21\u8f93\u5165\uff0c\u53ef\u662f\u9a8c\u8bc1\u7801\u5374\u6bcf\u6b21\u90fd\u8981\u8f93\u5165\u4e00\u6b21\uff0c\u5f88\u9ebb\u70e6\uff0c\u8fd9\u6211\u67d0\u4e2a\u5927\u4f6c\u5b66\u957f\u7f51\u7ad9\u7684\u9700\u6c42\uff0c\u6211\u6b63\u597d\u5f53\u65f6\u4e5f\u5728\u505a\u89c6\u89c9,\u5c31\u60f3\u7740\u80fd\u4e0d\u80fd\u505a\u4e00\u4e2a\u51fa\u6765\uff0c\u7136\u540e\u4ed6\u628a\u6570\u636e\u96c6\u53d1\u7ed9\u6211\uff0c\u6211\u5f00\u59cb\u4e86\u5c1d\u8bd5","title":"\u524d\u8a00"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/JLU%20Captcha/#_3","text":"\u9996\u5148\u89c2\u5bdf\u56fe\u50cf\u7279\u5f81\uff1a \u6bcf\u4e2a\u6570\u5b57\u7684\u9ad8\u5ea6\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4e14\u65e0\u5f62\u53d8\u3002(\u5f88\u91cd\u8981\uff01\uff01) \u6bcf\u4e2a\u6570\u5b57\u989c\u8272\u90fd\u4e00\u6837 \u80cc\u666f\u566a\u58f0\u65e0\u5e8f\uff0c\u653e\u5927\u89c2\u5bdf\u540e\u4e25\u91cd\u5e72\u6270\u6570\u5b57\u7684\u6574\u4f53\u6027","title":"\u56fe\u50cf\u5206\u6790"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/JLU%20Captcha/#_4","text":"","title":"\u601d\u8def"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/JLU%20Captcha/#_5","text":"\u501f\u9274\u4e4b\u524d\u5b66\u4e60opencv\u65f6\u7684\u8f66\u724c\u8bc6\u522b\u601d\u8def\uff1a\u5373\u5c06\u56fe\u50cf\u8fdb\u884c\u4e8c\u503c\u5316->\u8fdb\u884c\u8150\u8680\uff0c\u76f4\u5230\u56db\u4e2a\u6570\u5b57\u5408\u5e76\u5230\u4e00\u4e2a\u8fde\u901a\u57df\u4e2d\uff0c\u7136\u540e\u5728\u539f\u56fe\u7b49\u95f4\u9694\u5206\u5272\u51fa\u6765\uff0c\u8fdb\u884c\u6ee4\u6ce2\u53bb\u566a\uff0c\u6700\u540e\u904d\u5386\u6a21\u677f\u5339\u914d\u5f97\u5230\u6570\u5b57 \u7f3a\u70b9 \u6570\u5b57\u4ec5\u4ec5\u9ad8\u5ea6\u76f8\u540c\uff0c\u5bbd\u5ea6\u5374\u4e0d\u76f8\u540c\uff0c\u5206\u5272\u540e\u7684\u6570\u5b57\u8fd8\u4f1a\u6709\u5f88\u591a\u566a\u58f0\u4f1a\u5bfc\u81f4\u6a21\u677f\u5339\u914d\u6b63\u786e\u7387\u4e0b\u964d\uff0c\u8fd9\u91cc\u53ef\u80fd\u91c7\u53d6\u673a\u5668\u5b66\u4e60\u4f1a\u66f4\u597d\uff0c\u4f46\u662f\u6700\u9ebb\u70e6\u7684\u662f\u6807\u6ce8\uff0c\u5b66\u957f\u7ed9\u6211\u7684\u6570\u636e\u96c6\u90fd\u662f\u6ca1\u6709\u6807\u6ce8\u8fc7\u7684,\u6240\u4ee5\u6211\u5e72\u8106\u653e\u5f03\u4e86\u8fd9\u4e2a\u65b9\u6848","title":"\u8e29\u5751\u601d\u8def"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/JLU%20Captcha/#_6","text":"\u65e2\u7136\u6807\u6ce8\u4e0d\u73b0\u5b9e\uff0c\u6211\u4e5f\u5c31\u653e\u5f03\u4e86\u6df1\u5ea6\u5b66\u4e60\u8fd9\u4e2a\u65b9\u6848\uff0c\u8fd9\u65f6\u5019\u6211\u53d1\u73b0\u4e86\u8fd9\u4e9b\u6570\u5b57\u7684\u5b57\u5f62\u662f\u4e0d\u53d8\u7684\uff01\uff01\u4e5f\u5c31\u662f\u8bf4\u6211\u4e0d\u9700\u8981\u7535\u8111\u81ea\u5df1\u53bb\u5b66\u4e60\u8fd9\u4e2a\u6a21\u578b\uff0c\u6211\u53ef\u4ee5\u81ea\u5df1\u628a\u8fd9\u4e2a\u6570\u5b57\u7684\u6a21\u677f\u6784\u5efa\u51fa\u6765\uff0c\u4e4b\u540e\u904d\u5386\u8fdb\u884c\u5339\u914d\u5c31\u53ef\u4ee5\u7684\uff0c\u6211\u770b \u4f7f\u7528opencv\u81ea\u5e26\u7684\u9f20\u6807\u56de\u8c03\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u6784\u5efa\u6a21\u677f\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u7ed8\u753b\u73af\u8282 void mark () //\u62a0\u56fe\uff0c\u5de6\u952e\u53d8\u767d\u53f3\u952e\u53d8\u9ed1 { void onMouseCallBack ( int event , int x , int y , int flags , void * pUserData ); while ( 1 ) { namedWindow ( windowName , WINDOW_NORMAL ); imshow ( windowName , src ); cv :: setMouseCallback ( windowName , onMouseCallBack , reinterpret_cast < void *> ( & src )); char q = waitKey ( 0 ); if ( q == 27 ) { cv :: destroyWindow ( windowName ); imwrite ( \"H: \\\\ \u6df1\u5ea6\u5b66\u4e60\u6e90\u7801\u5b66\u4e60 \\\\ moban \\\\ 8.jpg\" , src ); //\u4fdd\u5b58\u62a0\u56fe\u5b8c\u6210\u7684\u6a21\u677f } if ( q == 'q' ) { cv :: destroyWindow ( windowName ); //\u4e0d\u4fdd\u5b58\u9000\u51fa break ; } } } void onMouseCallBack ( int event , int x , int y , int flags , void * pUserData ) //\u9f20\u6807\u4e8b\u4ef6\u56de\u8c03 { //\u521b\u5efa\u4fdd\u5b58\u50cf\u7d20\u503c\u76843\u5b57\u8282\u5bb9\u5668 cv :: Vec3b pixel ; //\u7a7a\u6307\u9488\u5f3a\u5236\u7c7b\u578b\u88c5\u6362\u6210\u56fe\u7247\u6307\u9488pMat cv :: Mat * pMat = reinterpret_cast < cv :: Mat *> ( pUserData ); //\u9f20\u6807\u5de6\u952e\u6309\u4e0b\u65f6\uff0c\u8fd4\u56de\u5750\u6807\u548cRGB\u503c\uff0c\u5c06\u5176\u53d8\u767d if ( event == CV_EVENT_LBUTTONDOWN ) { if ( src . channels () == 1 ) { int pixel1 ; //\u83b7\u53d6\u50cf\u7d20\u503c pixel1 = pMat -> at < uchar > ( y , x ); //y\u662frow\uff0cx\u662fcol //\u8f93\u51fa\u50cf\u7d20\u503c\u7684\uff08R\uff0cG\uff0cB\uff09 //cv\u91cd\u8f7d\u4e86<<\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u8f93\u51faVec3b\u7c7b\u578b\uff0c\u4f46\u662f\u6309B,G,R\u8f93\u51fa cout << \"at(\" << x << \",\" << y << \")-->pixel(1)=\" << pixel1 << endl ; src . at < uchar > ( y , x ) = 255 ; } } //\u9f20\u6807\u53f3\u952e\u6309\u4e0b\u65f6\uff0c\u8fd4\u56de\u5750\u6807\u548cRGB\u503c\uff0c\u5c06\u5176\u53d8\u9ed1 if ( event == CV_EVENT_RBUTTONDOWN ) { if ( src . channels () == 1 ) { int pixel1 ; //\u83b7\u53d6\u50cf\u7d20\u503c pixel1 = pMat -> at < uchar > ( y , x ); //y\u662frow\uff0cx\u662fcol //\u8f93\u51fa\u50cf\u7d20\u503c\u7684\uff08R\uff0cG\uff0cB\uff09 //cv\u91cd\u8f7d\u4e86<<\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u8f93\u51faVec3b\u7c7b\u578b\uff0c\u4f46\u662f\u6309B,G,R\u8f93\u51fa cout << \"at(\" << x << \",\" << y << \")-->pixel(1)=\" << pixel1 << endl ; src . at < uchar > ( y , x ) = 0 ; } } } \u62a0\u56fe\u7ed3\u675f\u540e\u5f97\u52309\u4e2a\u6a21\u677f \u4e4b\u540e\u5c31\u662fdebug\u73af\u8282 \u8fc7\u7a0b\u4e2d\u6211\u53d1\u73b0\u4e86\u6570\u5b57\u7684\u9ad8\u5ea6\u662f\u4e00\u6837\u7684\uff0c\u800c\u4e14\u5728\u56fe\u50cf\u4e2d\u7684\u9ad8\u5ea6\u4f4d\u7f6e\u4e5f\u662f\u56fa\u5b9a\u7684\uff0c\u800c\u4e14\u6bcf\u4e2a\u6570\u5b57\u4e5f\u670910\u50cf\u7d20\u5de6\u53f3\u7684\u5bbd\u5ea6\uff0c\u6240\u4ee5\u6211\u7f29\u5c0f\u4e86\u5faa\u73af\u8303\u56f4\uff0c\u53ea\u5728\u76f8\u540c\u9ad8\u5ea6\u8fdb\u884c\u904d\u5386\uff0c\u4e14\u8bc6\u522b\u5230\u4e00\u4e2a\u6570\u5b57\u4e4b\u540e\u8df3\u8dc38\u4e2a\u50cf\u7d20\u8bc6\u522b\u4e0b\u4e00\u4e2a\u6570\u5b57 \u5339\u914d\u601d\u8def\u4e3a\uff1a \u5c06\u56fe\u50cf\u8fdb\u884c\u7070\u5ea6\u5904\u7406\uff0c\u7531\u4e8e \u6bcf\u4e2a\u6570\u5b57\u989c\u8272\u90fd\u662f\u4e00\u6837\u7684 \uff0c\u6240\u4ee5\u5728\u7070\u5ea6\u56fe\u50cf\u4e2d\u7070\u5ea6\u7ea7\u662f\u8fde\u7eed\u7684 \u904d\u5386\u5957\u7528\u6a21\u677f\uff0c\u6c42\u5728\u6a21\u677f\u7684\u4f4d\u7f6e\u50cf\u7d20\u7684\u65b9\u5dee\u4e0e\u6781\u5dee\uff0c\u5e76\u4ee5\u5176\u4f5c\u4e3a\u9608\u503c\u8fdb\u884c\u7b5b\u9009\uff0c\u6781\u5dee\u4f4e\u4e8e\u9608\u503c\u5c31\u5224\u5b9a\u4e3a\u8be5\u6a21\u677f\u6240\u4ee3\u8868\u7684\u6570\u5b57\uff0c\u6781\u5dee\u9ad8\u4e8e\u9608\u503c\u5219\u7ee7\u7eed\u904d\u5386 \u8fdb\u8fc720\u5f20\u56fe\u5de6\u53f3\u7684debug\uff0c\u5bf9\u6a21\u677f\u6a21\u677f\u8fdb\u884c\u4e86\u4e00\u4e9b\u6539\u52a8 \u4ee5\u4e0b\u4e3a\u65b0\u76849\u4e2a\u6a21\u677f \u4e4b\u540e\u5c31\u662f\u9a8c\u8bc1\u73af\u8282\uff0c\u5bf9\u6570\u636e\u96c6\u4e00\u4e00\u9a8c\u8bc1\uff0c\u5982\u679c\u9047\u5230\u95ee\u9898\u5c31\u62ff\u56fe\u8fdb\u884cdebug\uff0c\u57fa\u672c\u6ca1\u4ec0\u4e48\u5927\u95ee\u9898 \u503c\u5f97\u6ce8\u610f\u7684\u662f 3 \u548c 8 \u5b57\u5f62\u6709\u4e00\u534a\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u6211\u7684\u904d\u5386\u987a\u5e8f\u662f1-2-3-4-5-6-7-8-9-0\uff0c\u6240\u4ee5\u5982\u679c\u5148\u62ff3\u7684\u6a21\u677f\u53bb\u5339\u914d8\u8fd9\u4e2a\u6570\u5b57\u7684\u8bdd\uff0c\u5f88\u5bb9\u6613\u4f1a\u8bef\u8bc6\u522b\uff0c\u6211\u5c06\u6a21\u677f\u7684\u904d\u5386\u987a\u5e8f\u53cd\u8f6c\uff0c\u4ee5\u53ca\u5c31\u662f\u5148\u8fdb\u884c8\u7684\u8bc6\u522b\uff0c\u5982\u679c\u5339\u914d\u5c31\u8ba4\u4e3a\u8be5\u6570\u5b57\u662f8\uff0c\u4e0d\u5339\u914d\u7684\u8bdd\u518d\u8fdb\u884c3\u7684\u5339\u914d \u6700\u7ec8\u5927\u529f\u544a\u6210\uff0c\u6570\u636e\u96c6\u8fdb\u884c\u4e862000\u5f20\u9a8c\u8bc1\u90fd\u6ca1\u6709\u8bef\u8bc6\u522b\u6216\u9519\u8bc6\u522b\u7684\u60c5\u51b5\uff0c\u6211\u5c06\u6e90\u4ee3\u7801\u53d1\u7ed9\u5b66\u957f\uff0c\u5b66\u957f\u6574\u5408\u4e86\u7f51\u7ad9\u4e0a\u83b7\u5f97\u4e86\u5f88\u4e1d\u6ed1\u7684\u6548\u679c\uff01\uff01","title":"\u6700\u7ec8\u65b9\u6848"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/JLU%20Captcha/#_7","text":"","title":"\u6700\u7ec8\u6548\u679c"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/","text":"robomaster\u5de5\u7a0b\u8f66\u77ff\u77f3\u8bc6\u522b \u00b6 \u4ee3\u7801\u94fe\u63a5\uff1a https://github.com/pesionzhao/Engineer_Vision \u89c6\u89c9\u8bc6\u522b \u00b6 \u524d\u8a00 \u00b6 \u8fd0\u884c\u73af\u5883 \u00b6 \u64cd\u4f5c\u7cfb\u7edf \u8fd0\u7b97\u5e73\u53f0 \u76f8\u673a\u578b\u53f7 Ubuntu 18.04 Jeston Nano b02 \u5927\u6052\u76f8\u673a \u4ee3\u7801\u53ef\u5728\u5206\u8fa8\u7387\u4e3a640*480\u5e27\u7387\u8fbe\u523060fps \u5de5\u7a0b\u8f66\u4e3b\u8981\u8d1f\u8d23\u5151\u6362\u5f39\u4e38\u4e0e\u6551\u63f4\uff0c\u5728\u6bd4\u8d5b\u4e2d\uff0c\u5de5\u7a0b\u673a\u5668\u4eba\u9700\u8981\u5230\u8fbe\u77ff\u77f3\u6389\u843d\u70b9\u5939\u53d6\u77ff\u77f3\uff0c\u524d\u5f80\u5151\u6362\u70b9\u4f7f\u5176\u6761\u7801\u9762\u671d\u4e0b\u901a\u8fc7\u626b\u9762\u5e76\u63a8\u5165\u5151\u6362\u4ed3\u5e93\u5373\u5151\u6362\u6210\u529f \u6b64\u4ee3\u7801\u4e3a\u5939\u53d6\u77ff\u77f3\u7684\u89c6\u89c9\u8f85\u52a9\u5bf9\u6b63\uff0c\u5e76\u5728\u6bd4\u8d5b\u4e2d\u53d6\u5f97\u4e0d\u9519\u7684\u6548\u679c\u3002 \u7b97\u6cd5\u4e3b\u4f53\u903b\u8f91 \u00b6 \u5148\u5c06\u91c7\u96c6\u5230\u7684\u56fe\u8f6c\u5230HSV,\u7531\u6b64\u6839\u636e\u9608\u503c\u627e\u51fa\u77ff\u77f3\u7591\u4f3c\u533a\u57df\uff0c\u4e4b\u540e\u6839\u636e\u9762\u79ef\uff0c\u5bbd\u9ad8\u6bd4\u7b49\u5224\u65ad\u6761\u4ef6\u627e\u51fa\u77ff\u77f3\u8fd1\u4f3c\u533a\u57df\uff0c\u5e76\u4ee5\u6b64\u533a\u57df\u4f5c\u4e3aROI\u7528\u4e8e\u540e\u7eed\u7684\u68c0\u6d4b\uff0c\u5728\u6b64\u533a\u57df\u8fdb\u884c\u89c6\u89c9\u6807\u7b7e\u7684\u68c0\u6d4b\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u56fe\u50cf\u5904\u7406\u4e0e\u9608\u503c\u5224\u65ad\u8bc6\u522b\u51fa\u5de6\u6807\u7b7e\uff0c\u53f3\u6807\u7b7e\u4e0e\u5168\u9ed1\u6807\u7b7e\uff0c\u6839\u636e\u6b64\u4f4d\u7f6e\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\u5224\u65ad\u77ff\u77f3\u7684\u671d\u5411\u662f\u5426\u6b63\u786e\uff0c\u6839\u636e\u6807\u7b7e\u4e4b\u95f4\u7684\u50cf\u7d20\u8ddd\u79bb\u4e0e\u5b9e\u9645\u8ddd\u79bb\u8ba1\u7b97\u51fa\u76f8\u673a\u4e0e\u77ff\u77f3\u4e2d\u5fc3\u7684\u504f\u79fb\u8ddd\u79bb\uff0c\u5229\u7528\u5c0f\u5b54\u6210\u50cf\u539f\u7406\u8ba1\u7b97\u51fa\u76f8\u673a\u4e0e\u77ff\u77f3\u7684\u5782\u76f4\u8ddd\u79bb\u3002 \u89d2\u5ea6\u89e3\u7b97 \u00b6 \u7531\u4e8e\u76f8\u673a\u91c7\u96c6\u5230\u7684\u56fe\u7247\u53ea\u53ef\u5f97\u5230\u4e8c\u7ef4\u4fe1\u606f\uff0c\u5e76\u65e0\u6cd5\u611f\u77e5\u7269\u4f53\u7684\u6df1\u5ea6\u4fe1\u606f\uff0c\u4f46\u5982\u679c\u8fdb\u884c\u89c6\u89c9\u8f85\u52a9\u5bf9\u6b63\u7684\u8bdd\u9700\u8981\u5f97\u5230\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u6df1\u5ea6\u8ddd\u79bb\u4e0e\u5c0f\u8f66\u5de6\u53f3\u79fb\u52a8\u8ddd\u79bb\u3002 \u7126\u8ddd\u8ba1\u7b97 \u00b6 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5bbd\u5ea6\u4e3a W \u7684\u76ee\u6807\u6216\u8005\u7269\u4f53\u3002\u7136\u540e\u6211\u4eec\u5c06\u8fd9\u4e2a\u76ee\u6807\u653e\u5728\u8ddd\u79bb\u6211\u4eec\u7684\u76f8\u673a\u4e3a D \u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u7528\u76f8\u673a\u5bf9\u7269\u4f53\u8fdb\u884c\u62cd\u7167\u5e76\u4e14\u6d4b\u91cf\u7269\u4f53\u7684\u50cf\u7d20\u5bbd\u5ea6 P \u3002\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u51fa\u4e86\u76f8\u673a\u7126\u8ddd\u7684\u516c\u5f0f\uff1a F = (P x D) / W \u8ddd\u79bb\u8ba1\u7b97 \u00b6 \u5229\u7528\u76f8\u4f3c\u4e09\u89d2\u5f62\u5f97\u5230\u76f8\u673a\u8ddd\u79bb\u7269\u4f53\u7684\u8ddd\u79bb\u3002 \u6b64\u65f6\u7684\u8ddd\u79bb\uff1a D\u2019 = (W\u2019 x F ) / P\u2019\u3002 \u8fd9\u91cc\u6d4b\u91cf\u7684\u8ddd\u79bb\u662f\u76f8\u673a\u5230\u7269\u4f53\u7684\u5782\u76f4\u8ddd\u79bb\uff0c\u4ea7\u751f\u5939\u89d2\uff0c\u6d4b\u91cf\u7684\u7ed3\u679c\u5c31\u4e0d\u51c6\u786e\u4e86 \uff0c\u6545\u6bd4\u8d5b\u91c7\u53d6\u7684\u5148\u649e\u4e00\u4e0b\u8d44\u6e90\u5c9b\uff0c\u4f7f\u8f66\u4e0e\u77ff\u77f3\u4fdd\u6301\u5e73\u884c\u72b6\u6001 \u7ec6\u8282\u5904\u7406 \u00b6 \u5f53\u53ea\u51fa\u73b0\u4e00\u4e2a\u89c6\u89c9\u6807\u7b7e\u65f6\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u8ddd\u79bb\u89e3\u7b97 \u5f53\u77ff\u77f3\u4e0d\u89c4\u5219\u843d\u4e0b\uff0c\u53ef\u4ee5\u8bc6\u522b\u89c6\u89c9\u6807\u7b7e\u4f4d\u7f6e\uff0c\u5e76\u5728\u5151\u6362\u4e4b\u524d\u8fdb\u884c\u65cb\u8f6c \u4e32\u53e3\u901a\u4fe1 \u00b6 \u4e0a\u4f4d\u673a\u9700\u8981\u53d1\u9001\u5de6\u53f3\u8ddd\u79bb\u4e0e\u524d\u540e\u8ddd\u79bb\u7ed9\u4e0b\u4f4d\u673a \u4e0b\u4f4d\u673a\u9700\u8981\u53d1\u9001\u8bc6\u522b\u6a21\u5f0f(\u91d1\u77ff\u6216\u8005\u94f6\u77ff)\u7ed9\u4e0a\u4f4d\u673a \u5c06\u89d2\u5ea6\u89e3\u7b97\u5f97\u5230\u7684\u8ddd\u79bb\u4fe1\u606f\u901a\u8fc7\u4e32\u53e3\u53d1\u9001\u7ed9\u4e0b\u4f4d\u673a\uff0c\u4e0b\u4f4d\u673a\u5229\u7528pid\u901f\u5ea6\u73af\u63a7\u5236\u5c0f\u8f66\u79fb\u52a8\u4f7f\u5176\u8ddd\u79bb\u8fbe\u5230\u7406\u60f3\u503c\u6536\u655b \u6ce8\u610f - nano\u6709\u81ea\u5e26\u7684\u4e32\u53e3\u603b\u662f\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528USB\u8f6cTTL,\u66f4\u52a0\u7a33\u5b9a - \u4e0a\u4e0b\u673a\u7ea6\u5b9a\u597d\u5e27\u7ed3\u6784\uff0c\u5c06\u6240\u8981\u53d1\u7684\u6570\u636e\u6309\u7167\u6570\u7ec4\u65b9\u5f0f\u53d1\u9001 - \u4e0a\u573a\u4e4b\u524d\u9700\u8981\u5f00\u673a\u81ea\u542f\u52a8\uff0c\u5e76\u52a0\u5165\u770b\u95e8\u72d7\u9632\u6b62\u5d29\u6e83\u9000\u51fa \u4f46\u662fnano\u7684\u81ea\u542f\u52a8\u6709\u95ee\u9898\uff0c\u4e00\u65e6\u52a0\u5165\u81ea\u542f\u52a8\u5e27\u7387\u5c31\u76f4\u63a5\u964d\u52305\u5e27\uff0c\u4e00\u76f4\u6ca1\u6709\u60f3\u5230\u597d\u7684\u65b9\u6cd5\u89e3\u51b3\uff0c\u6bd4\u8d5b\u7528\u7684\u662f\u5f00\u673a\u624b\u52a8\u5f00\u542f \u6d41\u7a0b\u56fe\uff1a graph TD \u5165\u53e3-->\u4f20\u5165\u68c0\u6d4b\u6a21\u5f0f-->\u8f6cHSV-->|\u91d1\u77ff|\u7b5b\u9009\u77ff\u77f3\u533a\u57df-->\u89c6\u89c9\u6807\u7b7e\u68c0\u6d4b-->\u83b7\u5f97\u5b8c\u6574\u77ff\u77f3-->\u8ba1\u7b97\u5de6\u53f3\u504f\u5dee\u4e0e\u524d\u540e\u8ddd\u79bb-->\u6570\u636e\u4f20\u9001\u81f3\u4e0b\u4f4d\u673a \u8f6cHSV-->|\u94f6\u77ff| \u7b5b\u9009\u77ff\u77f3\u533a\u57df \u6700\u7ec8\u6548\u679c \u00b6","title":"robomaster\u5de5\u7a0b\u77ff\u77f3\u8bc6\u522b"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#robomaster","text":"\u4ee3\u7801\u94fe\u63a5\uff1a https://github.com/pesionzhao/Engineer_Vision","title":"robomaster\u5de5\u7a0b\u8f66\u77ff\u77f3\u8bc6\u522b"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_1","text":"","title":"\u89c6\u89c9\u8bc6\u522b"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_2","text":"","title":"\u524d\u8a00"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_3","text":"\u64cd\u4f5c\u7cfb\u7edf \u8fd0\u7b97\u5e73\u53f0 \u76f8\u673a\u578b\u53f7 Ubuntu 18.04 Jeston Nano b02 \u5927\u6052\u76f8\u673a \u4ee3\u7801\u53ef\u5728\u5206\u8fa8\u7387\u4e3a640*480\u5e27\u7387\u8fbe\u523060fps \u5de5\u7a0b\u8f66\u4e3b\u8981\u8d1f\u8d23\u5151\u6362\u5f39\u4e38\u4e0e\u6551\u63f4\uff0c\u5728\u6bd4\u8d5b\u4e2d\uff0c\u5de5\u7a0b\u673a\u5668\u4eba\u9700\u8981\u5230\u8fbe\u77ff\u77f3\u6389\u843d\u70b9\u5939\u53d6\u77ff\u77f3\uff0c\u524d\u5f80\u5151\u6362\u70b9\u4f7f\u5176\u6761\u7801\u9762\u671d\u4e0b\u901a\u8fc7\u626b\u9762\u5e76\u63a8\u5165\u5151\u6362\u4ed3\u5e93\u5373\u5151\u6362\u6210\u529f \u6b64\u4ee3\u7801\u4e3a\u5939\u53d6\u77ff\u77f3\u7684\u89c6\u89c9\u8f85\u52a9\u5bf9\u6b63\uff0c\u5e76\u5728\u6bd4\u8d5b\u4e2d\u53d6\u5f97\u4e0d\u9519\u7684\u6548\u679c\u3002","title":"\u8fd0\u884c\u73af\u5883"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_4","text":"\u5148\u5c06\u91c7\u96c6\u5230\u7684\u56fe\u8f6c\u5230HSV,\u7531\u6b64\u6839\u636e\u9608\u503c\u627e\u51fa\u77ff\u77f3\u7591\u4f3c\u533a\u57df\uff0c\u4e4b\u540e\u6839\u636e\u9762\u79ef\uff0c\u5bbd\u9ad8\u6bd4\u7b49\u5224\u65ad\u6761\u4ef6\u627e\u51fa\u77ff\u77f3\u8fd1\u4f3c\u533a\u57df\uff0c\u5e76\u4ee5\u6b64\u533a\u57df\u4f5c\u4e3aROI\u7528\u4e8e\u540e\u7eed\u7684\u68c0\u6d4b\uff0c\u5728\u6b64\u533a\u57df\u8fdb\u884c\u89c6\u89c9\u6807\u7b7e\u7684\u68c0\u6d4b\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u56fe\u50cf\u5904\u7406\u4e0e\u9608\u503c\u5224\u65ad\u8bc6\u522b\u51fa\u5de6\u6807\u7b7e\uff0c\u53f3\u6807\u7b7e\u4e0e\u5168\u9ed1\u6807\u7b7e\uff0c\u6839\u636e\u6b64\u4f4d\u7f6e\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\u5224\u65ad\u77ff\u77f3\u7684\u671d\u5411\u662f\u5426\u6b63\u786e\uff0c\u6839\u636e\u6807\u7b7e\u4e4b\u95f4\u7684\u50cf\u7d20\u8ddd\u79bb\u4e0e\u5b9e\u9645\u8ddd\u79bb\u8ba1\u7b97\u51fa\u76f8\u673a\u4e0e\u77ff\u77f3\u4e2d\u5fc3\u7684\u504f\u79fb\u8ddd\u79bb\uff0c\u5229\u7528\u5c0f\u5b54\u6210\u50cf\u539f\u7406\u8ba1\u7b97\u51fa\u76f8\u673a\u4e0e\u77ff\u77f3\u7684\u5782\u76f4\u8ddd\u79bb\u3002","title":"\u7b97\u6cd5\u4e3b\u4f53\u903b\u8f91"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_5","text":"\u7531\u4e8e\u76f8\u673a\u91c7\u96c6\u5230\u7684\u56fe\u7247\u53ea\u53ef\u5f97\u5230\u4e8c\u7ef4\u4fe1\u606f\uff0c\u5e76\u65e0\u6cd5\u611f\u77e5\u7269\u4f53\u7684\u6df1\u5ea6\u4fe1\u606f\uff0c\u4f46\u5982\u679c\u8fdb\u884c\u89c6\u89c9\u8f85\u52a9\u5bf9\u6b63\u7684\u8bdd\u9700\u8981\u5f97\u5230\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u6df1\u5ea6\u8ddd\u79bb\u4e0e\u5c0f\u8f66\u5de6\u53f3\u79fb\u52a8\u8ddd\u79bb\u3002","title":"\u89d2\u5ea6\u89e3\u7b97"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_6","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5bbd\u5ea6\u4e3a W \u7684\u76ee\u6807\u6216\u8005\u7269\u4f53\u3002\u7136\u540e\u6211\u4eec\u5c06\u8fd9\u4e2a\u76ee\u6807\u653e\u5728\u8ddd\u79bb\u6211\u4eec\u7684\u76f8\u673a\u4e3a D \u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u7528\u76f8\u673a\u5bf9\u7269\u4f53\u8fdb\u884c\u62cd\u7167\u5e76\u4e14\u6d4b\u91cf\u7269\u4f53\u7684\u50cf\u7d20\u5bbd\u5ea6 P \u3002\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u51fa\u4e86\u76f8\u673a\u7126\u8ddd\u7684\u516c\u5f0f\uff1a F = (P x D) / W","title":"\u7126\u8ddd\u8ba1\u7b97"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_7","text":"\u5229\u7528\u76f8\u4f3c\u4e09\u89d2\u5f62\u5f97\u5230\u76f8\u673a\u8ddd\u79bb\u7269\u4f53\u7684\u8ddd\u79bb\u3002 \u6b64\u65f6\u7684\u8ddd\u79bb\uff1a D\u2019 = (W\u2019 x F ) / P\u2019\u3002 \u8fd9\u91cc\u6d4b\u91cf\u7684\u8ddd\u79bb\u662f\u76f8\u673a\u5230\u7269\u4f53\u7684\u5782\u76f4\u8ddd\u79bb\uff0c\u4ea7\u751f\u5939\u89d2\uff0c\u6d4b\u91cf\u7684\u7ed3\u679c\u5c31\u4e0d\u51c6\u786e\u4e86 \uff0c\u6545\u6bd4\u8d5b\u91c7\u53d6\u7684\u5148\u649e\u4e00\u4e0b\u8d44\u6e90\u5c9b\uff0c\u4f7f\u8f66\u4e0e\u77ff\u77f3\u4fdd\u6301\u5e73\u884c\u72b6\u6001","title":"\u8ddd\u79bb\u8ba1\u7b97"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_8","text":"\u5f53\u53ea\u51fa\u73b0\u4e00\u4e2a\u89c6\u89c9\u6807\u7b7e\u65f6\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u8ddd\u79bb\u89e3\u7b97 \u5f53\u77ff\u77f3\u4e0d\u89c4\u5219\u843d\u4e0b\uff0c\u53ef\u4ee5\u8bc6\u522b\u89c6\u89c9\u6807\u7b7e\u4f4d\u7f6e\uff0c\u5e76\u5728\u5151\u6362\u4e4b\u524d\u8fdb\u884c\u65cb\u8f6c","title":"\u7ec6\u8282\u5904\u7406"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_9","text":"\u4e0a\u4f4d\u673a\u9700\u8981\u53d1\u9001\u5de6\u53f3\u8ddd\u79bb\u4e0e\u524d\u540e\u8ddd\u79bb\u7ed9\u4e0b\u4f4d\u673a \u4e0b\u4f4d\u673a\u9700\u8981\u53d1\u9001\u8bc6\u522b\u6a21\u5f0f(\u91d1\u77ff\u6216\u8005\u94f6\u77ff)\u7ed9\u4e0a\u4f4d\u673a \u5c06\u89d2\u5ea6\u89e3\u7b97\u5f97\u5230\u7684\u8ddd\u79bb\u4fe1\u606f\u901a\u8fc7\u4e32\u53e3\u53d1\u9001\u7ed9\u4e0b\u4f4d\u673a\uff0c\u4e0b\u4f4d\u673a\u5229\u7528pid\u901f\u5ea6\u73af\u63a7\u5236\u5c0f\u8f66\u79fb\u52a8\u4f7f\u5176\u8ddd\u79bb\u8fbe\u5230\u7406\u60f3\u503c\u6536\u655b \u6ce8\u610f - nano\u6709\u81ea\u5e26\u7684\u4e32\u53e3\u603b\u662f\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528USB\u8f6cTTL,\u66f4\u52a0\u7a33\u5b9a - \u4e0a\u4e0b\u673a\u7ea6\u5b9a\u597d\u5e27\u7ed3\u6784\uff0c\u5c06\u6240\u8981\u53d1\u7684\u6570\u636e\u6309\u7167\u6570\u7ec4\u65b9\u5f0f\u53d1\u9001 - \u4e0a\u573a\u4e4b\u524d\u9700\u8981\u5f00\u673a\u81ea\u542f\u52a8\uff0c\u5e76\u52a0\u5165\u770b\u95e8\u72d7\u9632\u6b62\u5d29\u6e83\u9000\u51fa \u4f46\u662fnano\u7684\u81ea\u542f\u52a8\u6709\u95ee\u9898\uff0c\u4e00\u65e6\u52a0\u5165\u81ea\u542f\u52a8\u5e27\u7387\u5c31\u76f4\u63a5\u964d\u52305\u5e27\uff0c\u4e00\u76f4\u6ca1\u6709\u60f3\u5230\u597d\u7684\u65b9\u6cd5\u89e3\u51b3\uff0c\u6bd4\u8d5b\u7528\u7684\u662f\u5f00\u673a\u624b\u52a8\u5f00\u542f \u6d41\u7a0b\u56fe\uff1a graph TD \u5165\u53e3-->\u4f20\u5165\u68c0\u6d4b\u6a21\u5f0f-->\u8f6cHSV-->|\u91d1\u77ff|\u7b5b\u9009\u77ff\u77f3\u533a\u57df-->\u89c6\u89c9\u6807\u7b7e\u68c0\u6d4b-->\u83b7\u5f97\u5b8c\u6574\u77ff\u77f3-->\u8ba1\u7b97\u5de6\u53f3\u504f\u5dee\u4e0e\u524d\u540e\u8ddd\u79bb-->\u6570\u636e\u4f20\u9001\u81f3\u4e0b\u4f4d\u673a \u8f6cHSV-->|\u94f6\u77ff| \u7b5b\u9009\u77ff\u77f3\u533a\u57df","title":"\u4e32\u53e3\u901a\u4fe1"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/robomaster%E5%B7%A5%E7%A8%8B%E7%9F%BF%E7%9F%B3%E8%AF%86%E5%88%AB/#_10","text":"","title":"\u6700\u7ec8\u6548\u679c"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/","text":"\u5355\u76f8\u673a\u53cc\u5149\u6e90\u7684\u5c4f\u5e55\u5f0f\u773c\u52a8\u4ea4\u4e92\u6280\u672f \u00b6 \u4ee3\u7801\u94fe\u63a5\uff1a https://gitee.com/cocoon-storage/gaze-estimate \u524d\u8a00 \u00b6 \u89c6\u7ebf\u4f30\u8ba1\u5c31\u662f\u901a\u8fc7\u8bbe\u5907\u91c7\u96c6\u5230\u7684\u773c\u90e8\u56fe\u50cf\uff0c\u7ecf\u8fc7\u8ba1\u7b97\uff0c\u9884\u6d4b\u89c6\u7ebf\u7684\u843d\u70b9\u3002 \u73b0\u9636\u6bb5\u4e3b\u6d41\u7684\u4e24\u79cd\u65b9\u6cd5\u4e3a\u57fa\u4e8e\u7279\u5f81\u4e0e\u57fa\u4e8e\u5916\u89c2\u4e24\u79cd\u65b9\u5f0f \u57fa\u4e8e\u7279\u5f81\uff1a\u5229\u7528\u9ad8\u5206\u8fa8\u76f8\u673a\u4e0e\u7279\u5b9a\u5149\u6e90\uff0c\u8ba1\u7b97\u7cbe\u7ec6\u773c\u90e8\u53c2\u6570\uff0c\u5229\u7528\u51e0\u4f55\u5149\u5b66\u539f\u7406\u8ba1\u7b97\u77b3\u5b54\u4e09\u7ef4\u65b9\u5411\u5411\u91cf \u57fa\u4e8e\u5916\u89c2\uff1a\u4e0d\u9700\u8981\u7279\u5b9a\u5149\u6e90\uff0c\u5229\u7528\u6570\u636e\u96c6\u4e0e\u6807\u7b7e\u901a\u8fc7\u7279\u5b9a\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u5f97\u5230\u6620\u5c04\u5173\u7cfb \u4e3a\u4e86\u8fdb\u884c\u9ad8\u5e27\u7387\u773c\u52a8\u4ea4\u4e92\uff0c\u672c\u6587\u91c7\u7528\u4e86\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u5355\u76f8\u673a\u53cc\u5149\u6e90\u8bc6\u522b\u65b9\u6cd5\uff0c\u7814\u7a76\u4e86\u53cd\u5c04\u5149\u6591\u4e0e\u89c6\u7ebf\u843d\u70b9\u7684\u5173\u7cfb\uff0c\u5f97\u5230\u4e86\u7531\u773c\u56fe\u5230\u89c6\u7ebf\u843d\u70b9\u7684\u6620\u5c04\u89c4\u5f8b\uff0c\u642d\u5efa\u4e86\u4e00\u5957\u5177\u6709\u773c\u52a8\u4ea4\u4e92\u529f\u80fd\u7684\u4eea\u5668\uff0c\u8bad\u7ec3\u51fa\u51c6\u786e\u7387\u8f83\u9ad8\u7684\u6a21\u578b\uff0c\u80fd\u591f\u8d77\u5230\u5b9e\u65f6\u8bc6\u522b\u7528\u6237\u89c6\u7ebf\u843d\u70b9\u5e76\u8fdb\u884c\u4ea4\u4e92\u7684\u529f\u80fd\uff0c\u89e3\u51b3\u4e86\u89c6\u7ebf\u4f30\u8ba1\u6570\u5b66\u6a21\u578b\u590d\u6742\uff0c\u8fd0\u7b97\u91cf\u5927\u7684\u95ee\u9898\uff0c\u5177\u6709\u5fc3\u7406\u5b66\u3001\u793e\u4f1a\u5b66\u7814\u7a76\uff0c\u5e7f\u544a\u8425\u9500\u3001\u6e38\u620f\u4ee5\u53ca\u865a\u62df\u73b0\u5b9e\u7b49\u5e94\u7528\u4ef7\u503c\u3002 \u8bbe\u5907\u642d\u5efa \u00b6 \u672c\u6587\u642d\u5efa\u7684\u7cfb\u7edf\u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210 \u91c7\u56fe\u8bbe\u5907\u4e3a\u5927\u6052\u76f8\u673aMER-131-210U3M\uff0c\u6700\u9ad8\u5206\u8fa8\u7387\u4e3a1280*1080\uff0c\u5e27\u7387\u4e3a500fps \u4e24\u4e2a\u6ce2\u957f\u4e3a850nm\u7684\u7ea2\u5916\u5149\u6e90\uff08\u578b\u53f7\uff09\uff0c\u4e0e\u76f8\u673a\u5171\u7ebf\u3002 850nm\u7684\u5e26\u901a\u6ee4\u6ce2\u5668\uff0c\u5c06\u53ef\u89c1\u5149\u5168\u90e8\u6ee4\u6389\uff0c\u662f\u76f8\u673a\u91c7\u5230\u7684\u56fe\u7247\u5149\u6e90\u53ea\u6709\u5b9e\u9a8c\u6240\u7528\u7684\u4e24\u4e2a\u5149\u6e90\uff0c\u907f\u514d\u81ea\u7136\u5149\u7684\u5e72\u6270\u3002 \u8fd0\u7b97\u5e73\u53f0\u4e3a\u53f0\u5f0f\u7535\u8111\u3002i7\uff0cGTX3090 \u6d4b\u8bd5\u8bbe\u5907\u4e5f\u4e3a\u8be5\u7535\u8111\u3002\u663e\u793a\u5668\u5206\u8fa8\u7387\u4e3a1920*1280 \u5934\u62d6\uff0c\u7528\u4e8e\u56fa\u5b9a\u5934\u90e8 \u786c\u4ef6\u8bbe\u5907\u5982\u4e0b\u56fe \u6d4b\u8bd5\u8bbe\u5907\u5982\u4e0b\u56fe \u6570\u636e\u96c6\u5236\u4f5c \u00b6 \u5229\u7528\u6570\u636e\u96c6\u8bad\u7ec3\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\uff0c\u7528\u6765\u68c0\u6d4b\u773c\u775b\u3002 \u76ee\u524d\u7684\u5f00\u6e90\u6570\u636e\u96c6\u50cf\u7d20\u5f88\u4f4e\uff0c\u4e14\u4e0d\u7b26\u5408\u672c\u6587\u6240\u7814\u7a76\u7684\u65b9\u6848\uff0c\u6545\u6211\u4eec\u9009\u62e9\u81ea\u884c\u62cd\u6444\u6570\u636e\u96c6 \u6211\u4eec\u5c06\u8bbe\u5907\u642d\u5efa\u5b8c\u6210\u4e4b\u540e\uff0c\u5728\u5b66\u6821\u9009\u53d6\u4e00\u90e8\u5206\u5fd7\u613f\u8005\u8fdb\u884c\u6570\u636e\u96c6\u7684\u62cd\u6444\uff0c\u6b65\u9aa4\u5982\u4e0b\uff0c\u5fd7\u613f\u8005\u5c06\u5934\u653e\u5230\u5934\u6258\u4e0a\uff0c\u8ddd\u79bb\u5c4f\u5e5560cm\uff0c\u4f7f\u7528\u9884\u5148\u7f16\u5199\u597d\u7684\u811a\u672c\uff0c\u7528\u6237\u773c\u775b\u6ce8\u89c6\u9f20\u6807\u7684\u4f4d\u7f6e\uff0c\u9f20\u6807\u53f3\u952e\u5355\u51fb\u89c6\u4e3a\u6807\u6ce8\u4e00\u5f20\u56fe\u7247\uff0c\u540e\u53f0\u81ea\u52a8\u5b58\u4e24\u53ea\u773c\u775b\u7684\u56fe\u50cf(image)\u81ea\u9002\u5e94\u7f29\u653e\u5230\u540c\u4e00\u5927\u5c0f\uff0c\u4ee5\u53ca\u843d\u70b9\u7684\u4f4d\u7f6e(json)\uff0c\u7531\u4e8e\u5fd7\u613f\u8005\u9700\u8981\u957f\u65f6\u95f4\u4e13\u6ce8\u4e8e\u5c4f\u5e55\uff0c\u6545\u6211\u4eec\u5c06\u5c4f\u5e55\u80cc\u666f\u8bbe\u4e3a\u6697\u7eff\u8272\uff0c\u8fd9\u6837\u65e2\u51cf\u7f13\u773c\u90e8\u75b2\u52b3\uff0c\u53c8\u53ef\u4ee5\u63d0\u9ad8\u6807\u6ce8\u6548\u7387\u3002\u6bcf\u4eba\u68071000\u5f20\uff0c\u5176\u6807\u6ce8\u70b9\u5747\u5300\u7684\u5206\u5e03\u5728\u5c4f\u5e55\u4e0a\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u6027\u3002 \u5229\u7528\u7f16\u5199\u597d\u7684\u811a\u672c\u91c7\u96c6\u6570\u636e\u96c6 \u6700\u7ec8\u5f97\u5230\u6570\u636e\u96c6\u5982\u4e0b\uff0c\u6807\u7b7e\u683c\u5f0f\u4e3a[x,y]\uff0c\u5373\u5c4f\u5e55\u843d\u70b9 \u6a21\u578b \u00b6 \u672c\u6587\u6240\u4ecb\u7ecd\u7684\u65b9\u6cd5\u6d89\u53ca\u5230\u4e24\u4e2a\u6a21\u578b\uff0c\u901a\u8fc7\u6a21\u578b\u4e32\u8054\u7684\u65b9\u5f0f\u8fdb\u884c\u773c\u52a8\u4ea4\u4e92\u3002 \u7b2c\u4e00\u4e2a\u6a21\u578b\u76ee\u6807\u4e3a\u68c0\u6d4b\u773c\u775b\uff0c\u8f93\u5165\u9ad8\u5206\u8fa8\u7387\u56fe\uff0c\u8f93\u51fa\u773c\u775b\u7684\u4f4d\u7f6e\uff08xyxy) \u7b2c\u4e8c\u4e2a\u6a21\u578b\u76ee\u6807\u4e3a\u89c6\u7ebf\u843d\u70b9\u4f30\u8ba1\uff0c\u8f93\u5165\u4e3a\u4e24\u5f20\u773c\u56fe\uff0c\u8f93\u51fa\u4e3a\u843d\u70b9\u7684\u4f4d\u7f6e(xy) model1 \u501f\u9274\u4e86yolov5s\u7684\u601d\u8def\uff0c\u5c06\u8ffd\u6c42\u901f\u5ea6\u7684\u540c\u65f6\u4fdd\u8bc1\u7cbe\u5ea6\uff0c\u7531\u4e8e\u4f7f\u7528\u573a\u666f\u5c06\u53ef\u89c1\u5149\u5168\u6ee4\u6389\uff0c\u80cc\u666f\u5355\u4e00\uff0c\u773c\u90e8\u7279\u5f81\u53c8\u8f83\u4e3a\u660e\u663e\uff0c\u91c7\u7528\u8de8\u9636\u6bb5\u7f51\u7edc\u4f5c\u4e3a\u4e3b\u5e72\u89e3\u51b3\u68af\u5ea6\u91cd\u590d\u95ee\u9898\uff0c\u51cf\u5c0f\u8ba1\u7b97\u5f00\u9500\uff0c\u7279\u5f81\u5c42\u591a\u5c3a\u5ea6\u878d\u5408\u63d0\u9ad8\u6a21\u578b\u7cbe\u5ea6\u3002 \u7ed3\u6784\u5982\u4e0b model2 \u501f\u9274\u4e86gazecapture\u7684\u601d\u8def\uff0c\u820d\u5f03\u4e86\u6a21\u578b\u8f93\u5165\u5206\u652f\u4e2d\u7684\u539f\u56fe\u4ee5\u53ca\u5934\u90e8\u6240\u5728\u4f4d\uff0c\u4ec5\u6709\u5de6\u53f3\u773c\u4e24\u4e2a\u56fe\u7247\u4f5c\u4e3a\u4e24\u4e2a\u8f93\u5165\uff0c\u7531\u4e8e\u62cd\u6444\u73af\u5883\u6ee4\u6389\u4e86\u6240\u6709\u7684\u53ef\u89c1\u5149\uff0c\u6574\u4f53\u5bf9\u6bd4\u5ea6\u504f\u4f4e\uff0c\u6545\u6211\u4eec\u5728\u9884\u5904\u7406\u65f6\u5bf9\u5176\u8fdb\u884c\u76f4\u65b9\u56fe\u5747\u8861\u5316\u5904\u7406\u589e\u5f3a\u5176\u5bf9\u6bd4\u5ea6\uff0c\u501f\u9274yolov5\u7684\u6280\u5de7\u5728\u8f93\u5165\u56fe\u50cf\u5927\u5c0f\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u5c06\u5176\u7edf\u4e00\u4e3a\u76f8\u540c\u5c3a\u5bf8\u4ee5\u4fdd\u8bc1\u51c6\u786e\u6027\uff0c\u6574\u4f53\u67b6\u6784\u501f\u9274resnet\uff0c\u5229\u7528\u7f51\u7edc\u524d\u5411\u8ba1\u7b97\u7684\u6b8b\u5dee\u4fe1\u606f\uff0c\u4ee5\u83b7\u5f97\u66f4\u5168\u9762\u7684\u7279\u5f81\u3002 \u7ed3\u6784\u5982\u4e0b \u8f93\u51fa\u6821\u6b63 \u00b6 \u5728\u6a21\u578b\u8bad\u7ec3\u597d\u540e\uff0c\u9700\u8981\u8fdb\u884c\u8f93\u51fa\u77eb\u6b63\u4ee5\u4fdd\u8bc1\u51c6\u786e\u6027\u4e0e\u5e73\u6ed1\u7a0b\u5ea6 \u7ebf\u6027\u6620\u5c04 \uff1a\u8bad\u7ec3\u7ed3\u679c\u4ec5\u5bf9\u539f\u672c\u5c4f\u5e55\u5206\u8fa8\u7387\u7684\u60c5\u51b5\u4f7f\u7528\uff0c\u82e5\u8981\u6c42\u6cdb\u6027\uff0c\u9700\u8981\u5728\u6bcf\u6b21\u66f4\u6362\u4f7f\u7528\u8005\u6216\u7535\u8111\u8bbe\u5907\u65f6\u5bf9\u5176\u8fdb\u884c\u7ebf\u6027\u6620\u5c04\uff0c\u5177\u4f53\u65b9\u6cd5\u4e3a\uff1a\u5bf9\u5e94\u5c4f\u5e55\u4e0a\u7684\u4e94\u4e2a\u56fa\u5b9a\u70b9\uff0c\u8981\u6c42\u7528\u6237\u4f9d\u6b21\u6ce8\u89c6\u8fd9\u4e94\u4e2a\u70b9\uff0c\u540e\u53f0\u81ea\u52a8\u8bb0\u5f55\u9884\u6d4b\u7ed3\u679c\uff0c\u901a\u8fc7\u8ba1\u7b97\u5c06\u9884\u6d4b\u7ed3\u679c\u8fdb\u884c\u7ebf\u6027\u6620\u5c04\u5230\u5c4f\u5e55\u8303\u56f4\u5185 \u805a\u7c7b \uff1a\u7531\u4e8e\u6bcf\u4e00\u5e27\u7684\u56fe\u7247\u7ec6\u8282\u90fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u4e9b\u7ec6\u5fae\u4fe1\u606f\u9001\u5165\u7f51\u7edc\u53ef\u80fd\u5f15\u8d77\u9884\u6d4b\u7684\u654f\u611f\u6ce2\u52a8\uff0c\u6545\u6211\u4eec\u91c7\u7528\u4e86\u805a\u7c7b\u7684\u65b9\u6cd5\uff0c\u5145\u5206\u5229\u7528\u8fc7\u53bb\u9884\u6d4b\u70b9\u7684\u4fe1\u606f\uff0c\u5e76\u5bf9\u5f53\u65f6\u7684\u9884\u6d4b\u505a\u51fa\u5e73\u5747\uff0c\u6211\u4eec\u5177\u4f53\u65b9\u6cd5\u4e3a\u5bf9\u524d\u4e94\u5e27\u7684\u9884\u6d4b\u70b9\u6c42\u5747\u503c\u5373\u4e3a\u5f53\u524d\u9884\u6d4b\u7ed3\u679c \u4eff\u771f\u5b9e\u9a8c\uff0c\u6570\u636e\u5bf9\u6bd4 \u00b6 \u6211\u4eec\u4f7f\u7528\u4e0d\u540c\u7684\u53d7\u8bd5\u8005\uff0c\u5728\u4f7f\u7528\u5934\u6258\u56fa\u5b9a\u5934\u90e8\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u5c4f\u5e559\u4e2a\u56fa\u5b9a\u70b9\u4f9d\u6b21\u8fdb\u884c\u6ce8\u89c6\uff0c\u540e\u53f0\u8bb0\u5f55\u9884\u6d4b\u7ed3\u679c\uff0c\u5229\u7528\u7a7a\u95f4\u51e0\u4f55\u5173\u7cfb\uff0c\u8ba1\u7b97\u51fa\u9884\u6d4b\u70b9\u4e0e\u771f\u5b9e\u70b9\u7684\u89d2\u5ea6\u504f\u5dee\uff0c\u8868\u683c6\u00b0 \u524d\u540e\u7aef\u878d\u5408 \u00b6 \u6211\u4eec\u5c06\u6b64\u6210\u679c\u4e0e\u524d\u7aef\u754c\u9762\u7ed3\u5408\uff0c\u878d\u5408\u6210\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u6237\u4f53\u9a8c\u4e0e\u6d88\u8d39\u7684\u4ea7\u54c1\uff0c\u5c06\u89c6\u7ebf\u4f30\u8ba1\u70b9\u91cf\u5316\u4e3a\u9f20\u6807\u4f4d\u7f6e\uff0c\u7528\u6237\u5373\u53ef\u901a\u8fc7\u773c\u52a8\u4ea4\u4e92\u6765\u63a7\u5236\u8ba1\u7b97\u673a\u8fdb\u884c\u64cd\u4f5c \u754c\u9762\u4ee5\u53ca\u529f\u80fd\u5982\u4e0b \u83dc\u5355 \u773c\u52a8\u952e\u76d8\u8f93\u5165 \u5927\u5e45\u5ea6\u56fe\u7247\u5207\u6362 \u603b\u7ed3 \u00b6 \u5728\u6211\u4eec\u7684\u5de5\u4f5c\u4e2d\uff0c\u4e3b\u8981\u5229\u7528\u4e86\u53cd\u5c04\u5149\u6591\u7684\u7279\u5f81\uff0c\u7ed3\u5408\u4f20\u7edf\u7b97\u6cd5\u4e0e\u6df1\u5ea6\u5b66\u4e60\uff0c\u5c06\u660e\u663e\u7279\u5f81\u9001\u5165\u7f51\u7edc\u5b66\u4e60\uff0c\u5373\u7701\u53bb\u4e86\u4f20\u7edf\u7b97\u6cd5\u6784\u5efa\u51e0\u4f55\u6a21\u578b\u7684\u56f0\u96be\uff0c\u53c8\u4e3a\u6df1\u5ea6\u5b66\u4e60\u63d0\u4f9b\u4e86\u660e\u663e\u7684\u7279\u5f81\u53bb\u6784\u5efa\u6a21\u578b\uff0c\u771f\u6b63\u505a\u5230\u4e86\u6613\u590d\u73b0\uff0c\u6613\u4f7f\u7528\u7b49\u4f18\u70b9\uff0c\u4e14\u8fbe\u5230\u4e8680\u7684\u5e27\u7387\u3002\u4f46\u662f\u8bbe\u5907\u4ecd\u6709\u4e0d\u6613\u5b89\u88c5\uff0c\u64cd\u4f5c\u590d\u6742\u7b49\u4e0d\u8db3\uff0c\u7cbe\u5ea6\u4e5f\u6709\u5f88\u5927\u63d0\u5347\u7a7a\u95f4\uff0c\u4ee5\u5728\u672a\u6765\u7684\u7814\u7a76\u4e2d\u505a\u8fdb\u4e00\u6b65\u4f18\u5316\u3002","title":"\u57fa\u4e8e\u5355\u76f8\u673a\u53cc\u5149\u6e90\u7684\u773c\u52a8\u4ea4\u4e92"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/#_1","text":"\u4ee3\u7801\u94fe\u63a5\uff1a https://gitee.com/cocoon-storage/gaze-estimate","title":"\u5355\u76f8\u673a\u53cc\u5149\u6e90\u7684\u5c4f\u5e55\u5f0f\u773c\u52a8\u4ea4\u4e92\u6280\u672f"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/#_2","text":"\u89c6\u7ebf\u4f30\u8ba1\u5c31\u662f\u901a\u8fc7\u8bbe\u5907\u91c7\u96c6\u5230\u7684\u773c\u90e8\u56fe\u50cf\uff0c\u7ecf\u8fc7\u8ba1\u7b97\uff0c\u9884\u6d4b\u89c6\u7ebf\u7684\u843d\u70b9\u3002 \u73b0\u9636\u6bb5\u4e3b\u6d41\u7684\u4e24\u79cd\u65b9\u6cd5\u4e3a\u57fa\u4e8e\u7279\u5f81\u4e0e\u57fa\u4e8e\u5916\u89c2\u4e24\u79cd\u65b9\u5f0f \u57fa\u4e8e\u7279\u5f81\uff1a\u5229\u7528\u9ad8\u5206\u8fa8\u76f8\u673a\u4e0e\u7279\u5b9a\u5149\u6e90\uff0c\u8ba1\u7b97\u7cbe\u7ec6\u773c\u90e8\u53c2\u6570\uff0c\u5229\u7528\u51e0\u4f55\u5149\u5b66\u539f\u7406\u8ba1\u7b97\u77b3\u5b54\u4e09\u7ef4\u65b9\u5411\u5411\u91cf \u57fa\u4e8e\u5916\u89c2\uff1a\u4e0d\u9700\u8981\u7279\u5b9a\u5149\u6e90\uff0c\u5229\u7528\u6570\u636e\u96c6\u4e0e\u6807\u7b7e\u901a\u8fc7\u7279\u5b9a\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u5f97\u5230\u6620\u5c04\u5173\u7cfb \u4e3a\u4e86\u8fdb\u884c\u9ad8\u5e27\u7387\u773c\u52a8\u4ea4\u4e92\uff0c\u672c\u6587\u91c7\u7528\u4e86\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u5355\u76f8\u673a\u53cc\u5149\u6e90\u8bc6\u522b\u65b9\u6cd5\uff0c\u7814\u7a76\u4e86\u53cd\u5c04\u5149\u6591\u4e0e\u89c6\u7ebf\u843d\u70b9\u7684\u5173\u7cfb\uff0c\u5f97\u5230\u4e86\u7531\u773c\u56fe\u5230\u89c6\u7ebf\u843d\u70b9\u7684\u6620\u5c04\u89c4\u5f8b\uff0c\u642d\u5efa\u4e86\u4e00\u5957\u5177\u6709\u773c\u52a8\u4ea4\u4e92\u529f\u80fd\u7684\u4eea\u5668\uff0c\u8bad\u7ec3\u51fa\u51c6\u786e\u7387\u8f83\u9ad8\u7684\u6a21\u578b\uff0c\u80fd\u591f\u8d77\u5230\u5b9e\u65f6\u8bc6\u522b\u7528\u6237\u89c6\u7ebf\u843d\u70b9\u5e76\u8fdb\u884c\u4ea4\u4e92\u7684\u529f\u80fd\uff0c\u89e3\u51b3\u4e86\u89c6\u7ebf\u4f30\u8ba1\u6570\u5b66\u6a21\u578b\u590d\u6742\uff0c\u8fd0\u7b97\u91cf\u5927\u7684\u95ee\u9898\uff0c\u5177\u6709\u5fc3\u7406\u5b66\u3001\u793e\u4f1a\u5b66\u7814\u7a76\uff0c\u5e7f\u544a\u8425\u9500\u3001\u6e38\u620f\u4ee5\u53ca\u865a\u62df\u73b0\u5b9e\u7b49\u5e94\u7528\u4ef7\u503c\u3002","title":"\u524d\u8a00"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/#_3","text":"\u672c\u6587\u642d\u5efa\u7684\u7cfb\u7edf\u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210 \u91c7\u56fe\u8bbe\u5907\u4e3a\u5927\u6052\u76f8\u673aMER-131-210U3M\uff0c\u6700\u9ad8\u5206\u8fa8\u7387\u4e3a1280*1080\uff0c\u5e27\u7387\u4e3a500fps \u4e24\u4e2a\u6ce2\u957f\u4e3a850nm\u7684\u7ea2\u5916\u5149\u6e90\uff08\u578b\u53f7\uff09\uff0c\u4e0e\u76f8\u673a\u5171\u7ebf\u3002 850nm\u7684\u5e26\u901a\u6ee4\u6ce2\u5668\uff0c\u5c06\u53ef\u89c1\u5149\u5168\u90e8\u6ee4\u6389\uff0c\u662f\u76f8\u673a\u91c7\u5230\u7684\u56fe\u7247\u5149\u6e90\u53ea\u6709\u5b9e\u9a8c\u6240\u7528\u7684\u4e24\u4e2a\u5149\u6e90\uff0c\u907f\u514d\u81ea\u7136\u5149\u7684\u5e72\u6270\u3002 \u8fd0\u7b97\u5e73\u53f0\u4e3a\u53f0\u5f0f\u7535\u8111\u3002i7\uff0cGTX3090 \u6d4b\u8bd5\u8bbe\u5907\u4e5f\u4e3a\u8be5\u7535\u8111\u3002\u663e\u793a\u5668\u5206\u8fa8\u7387\u4e3a1920*1280 \u5934\u62d6\uff0c\u7528\u4e8e\u56fa\u5b9a\u5934\u90e8 \u786c\u4ef6\u8bbe\u5907\u5982\u4e0b\u56fe \u6d4b\u8bd5\u8bbe\u5907\u5982\u4e0b\u56fe","title":"\u8bbe\u5907\u642d\u5efa"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/#_4","text":"\u5229\u7528\u6570\u636e\u96c6\u8bad\u7ec3\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\uff0c\u7528\u6765\u68c0\u6d4b\u773c\u775b\u3002 \u76ee\u524d\u7684\u5f00\u6e90\u6570\u636e\u96c6\u50cf\u7d20\u5f88\u4f4e\uff0c\u4e14\u4e0d\u7b26\u5408\u672c\u6587\u6240\u7814\u7a76\u7684\u65b9\u6848\uff0c\u6545\u6211\u4eec\u9009\u62e9\u81ea\u884c\u62cd\u6444\u6570\u636e\u96c6 \u6211\u4eec\u5c06\u8bbe\u5907\u642d\u5efa\u5b8c\u6210\u4e4b\u540e\uff0c\u5728\u5b66\u6821\u9009\u53d6\u4e00\u90e8\u5206\u5fd7\u613f\u8005\u8fdb\u884c\u6570\u636e\u96c6\u7684\u62cd\u6444\uff0c\u6b65\u9aa4\u5982\u4e0b\uff0c\u5fd7\u613f\u8005\u5c06\u5934\u653e\u5230\u5934\u6258\u4e0a\uff0c\u8ddd\u79bb\u5c4f\u5e5560cm\uff0c\u4f7f\u7528\u9884\u5148\u7f16\u5199\u597d\u7684\u811a\u672c\uff0c\u7528\u6237\u773c\u775b\u6ce8\u89c6\u9f20\u6807\u7684\u4f4d\u7f6e\uff0c\u9f20\u6807\u53f3\u952e\u5355\u51fb\u89c6\u4e3a\u6807\u6ce8\u4e00\u5f20\u56fe\u7247\uff0c\u540e\u53f0\u81ea\u52a8\u5b58\u4e24\u53ea\u773c\u775b\u7684\u56fe\u50cf(image)\u81ea\u9002\u5e94\u7f29\u653e\u5230\u540c\u4e00\u5927\u5c0f\uff0c\u4ee5\u53ca\u843d\u70b9\u7684\u4f4d\u7f6e(json)\uff0c\u7531\u4e8e\u5fd7\u613f\u8005\u9700\u8981\u957f\u65f6\u95f4\u4e13\u6ce8\u4e8e\u5c4f\u5e55\uff0c\u6545\u6211\u4eec\u5c06\u5c4f\u5e55\u80cc\u666f\u8bbe\u4e3a\u6697\u7eff\u8272\uff0c\u8fd9\u6837\u65e2\u51cf\u7f13\u773c\u90e8\u75b2\u52b3\uff0c\u53c8\u53ef\u4ee5\u63d0\u9ad8\u6807\u6ce8\u6548\u7387\u3002\u6bcf\u4eba\u68071000\u5f20\uff0c\u5176\u6807\u6ce8\u70b9\u5747\u5300\u7684\u5206\u5e03\u5728\u5c4f\u5e55\u4e0a\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u6027\u3002 \u5229\u7528\u7f16\u5199\u597d\u7684\u811a\u672c\u91c7\u96c6\u6570\u636e\u96c6 \u6700\u7ec8\u5f97\u5230\u6570\u636e\u96c6\u5982\u4e0b\uff0c\u6807\u7b7e\u683c\u5f0f\u4e3a[x,y]\uff0c\u5373\u5c4f\u5e55\u843d\u70b9","title":"\u6570\u636e\u96c6\u5236\u4f5c"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/#_5","text":"\u672c\u6587\u6240\u4ecb\u7ecd\u7684\u65b9\u6cd5\u6d89\u53ca\u5230\u4e24\u4e2a\u6a21\u578b\uff0c\u901a\u8fc7\u6a21\u578b\u4e32\u8054\u7684\u65b9\u5f0f\u8fdb\u884c\u773c\u52a8\u4ea4\u4e92\u3002 \u7b2c\u4e00\u4e2a\u6a21\u578b\u76ee\u6807\u4e3a\u68c0\u6d4b\u773c\u775b\uff0c\u8f93\u5165\u9ad8\u5206\u8fa8\u7387\u56fe\uff0c\u8f93\u51fa\u773c\u775b\u7684\u4f4d\u7f6e\uff08xyxy) \u7b2c\u4e8c\u4e2a\u6a21\u578b\u76ee\u6807\u4e3a\u89c6\u7ebf\u843d\u70b9\u4f30\u8ba1\uff0c\u8f93\u5165\u4e3a\u4e24\u5f20\u773c\u56fe\uff0c\u8f93\u51fa\u4e3a\u843d\u70b9\u7684\u4f4d\u7f6e(xy) model1 \u501f\u9274\u4e86yolov5s\u7684\u601d\u8def\uff0c\u5c06\u8ffd\u6c42\u901f\u5ea6\u7684\u540c\u65f6\u4fdd\u8bc1\u7cbe\u5ea6\uff0c\u7531\u4e8e\u4f7f\u7528\u573a\u666f\u5c06\u53ef\u89c1\u5149\u5168\u6ee4\u6389\uff0c\u80cc\u666f\u5355\u4e00\uff0c\u773c\u90e8\u7279\u5f81\u53c8\u8f83\u4e3a\u660e\u663e\uff0c\u91c7\u7528\u8de8\u9636\u6bb5\u7f51\u7edc\u4f5c\u4e3a\u4e3b\u5e72\u89e3\u51b3\u68af\u5ea6\u91cd\u590d\u95ee\u9898\uff0c\u51cf\u5c0f\u8ba1\u7b97\u5f00\u9500\uff0c\u7279\u5f81\u5c42\u591a\u5c3a\u5ea6\u878d\u5408\u63d0\u9ad8\u6a21\u578b\u7cbe\u5ea6\u3002 \u7ed3\u6784\u5982\u4e0b model2 \u501f\u9274\u4e86gazecapture\u7684\u601d\u8def\uff0c\u820d\u5f03\u4e86\u6a21\u578b\u8f93\u5165\u5206\u652f\u4e2d\u7684\u539f\u56fe\u4ee5\u53ca\u5934\u90e8\u6240\u5728\u4f4d\uff0c\u4ec5\u6709\u5de6\u53f3\u773c\u4e24\u4e2a\u56fe\u7247\u4f5c\u4e3a\u4e24\u4e2a\u8f93\u5165\uff0c\u7531\u4e8e\u62cd\u6444\u73af\u5883\u6ee4\u6389\u4e86\u6240\u6709\u7684\u53ef\u89c1\u5149\uff0c\u6574\u4f53\u5bf9\u6bd4\u5ea6\u504f\u4f4e\uff0c\u6545\u6211\u4eec\u5728\u9884\u5904\u7406\u65f6\u5bf9\u5176\u8fdb\u884c\u76f4\u65b9\u56fe\u5747\u8861\u5316\u5904\u7406\u589e\u5f3a\u5176\u5bf9\u6bd4\u5ea6\uff0c\u501f\u9274yolov5\u7684\u6280\u5de7\u5728\u8f93\u5165\u56fe\u50cf\u5927\u5c0f\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u5c06\u5176\u7edf\u4e00\u4e3a\u76f8\u540c\u5c3a\u5bf8\u4ee5\u4fdd\u8bc1\u51c6\u786e\u6027\uff0c\u6574\u4f53\u67b6\u6784\u501f\u9274resnet\uff0c\u5229\u7528\u7f51\u7edc\u524d\u5411\u8ba1\u7b97\u7684\u6b8b\u5dee\u4fe1\u606f\uff0c\u4ee5\u83b7\u5f97\u66f4\u5168\u9762\u7684\u7279\u5f81\u3002 \u7ed3\u6784\u5982\u4e0b","title":"\u6a21\u578b"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/#_6","text":"\u5728\u6a21\u578b\u8bad\u7ec3\u597d\u540e\uff0c\u9700\u8981\u8fdb\u884c\u8f93\u51fa\u77eb\u6b63\u4ee5\u4fdd\u8bc1\u51c6\u786e\u6027\u4e0e\u5e73\u6ed1\u7a0b\u5ea6 \u7ebf\u6027\u6620\u5c04 \uff1a\u8bad\u7ec3\u7ed3\u679c\u4ec5\u5bf9\u539f\u672c\u5c4f\u5e55\u5206\u8fa8\u7387\u7684\u60c5\u51b5\u4f7f\u7528\uff0c\u82e5\u8981\u6c42\u6cdb\u6027\uff0c\u9700\u8981\u5728\u6bcf\u6b21\u66f4\u6362\u4f7f\u7528\u8005\u6216\u7535\u8111\u8bbe\u5907\u65f6\u5bf9\u5176\u8fdb\u884c\u7ebf\u6027\u6620\u5c04\uff0c\u5177\u4f53\u65b9\u6cd5\u4e3a\uff1a\u5bf9\u5e94\u5c4f\u5e55\u4e0a\u7684\u4e94\u4e2a\u56fa\u5b9a\u70b9\uff0c\u8981\u6c42\u7528\u6237\u4f9d\u6b21\u6ce8\u89c6\u8fd9\u4e94\u4e2a\u70b9\uff0c\u540e\u53f0\u81ea\u52a8\u8bb0\u5f55\u9884\u6d4b\u7ed3\u679c\uff0c\u901a\u8fc7\u8ba1\u7b97\u5c06\u9884\u6d4b\u7ed3\u679c\u8fdb\u884c\u7ebf\u6027\u6620\u5c04\u5230\u5c4f\u5e55\u8303\u56f4\u5185 \u805a\u7c7b \uff1a\u7531\u4e8e\u6bcf\u4e00\u5e27\u7684\u56fe\u7247\u7ec6\u8282\u90fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u4e9b\u7ec6\u5fae\u4fe1\u606f\u9001\u5165\u7f51\u7edc\u53ef\u80fd\u5f15\u8d77\u9884\u6d4b\u7684\u654f\u611f\u6ce2\u52a8\uff0c\u6545\u6211\u4eec\u91c7\u7528\u4e86\u805a\u7c7b\u7684\u65b9\u6cd5\uff0c\u5145\u5206\u5229\u7528\u8fc7\u53bb\u9884\u6d4b\u70b9\u7684\u4fe1\u606f\uff0c\u5e76\u5bf9\u5f53\u65f6\u7684\u9884\u6d4b\u505a\u51fa\u5e73\u5747\uff0c\u6211\u4eec\u5177\u4f53\u65b9\u6cd5\u4e3a\u5bf9\u524d\u4e94\u5e27\u7684\u9884\u6d4b\u70b9\u6c42\u5747\u503c\u5373\u4e3a\u5f53\u524d\u9884\u6d4b\u7ed3\u679c","title":"\u8f93\u51fa\u6821\u6b63"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/#_7","text":"\u6211\u4eec\u4f7f\u7528\u4e0d\u540c\u7684\u53d7\u8bd5\u8005\uff0c\u5728\u4f7f\u7528\u5934\u6258\u56fa\u5b9a\u5934\u90e8\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u5c4f\u5e559\u4e2a\u56fa\u5b9a\u70b9\u4f9d\u6b21\u8fdb\u884c\u6ce8\u89c6\uff0c\u540e\u53f0\u8bb0\u5f55\u9884\u6d4b\u7ed3\u679c\uff0c\u5229\u7528\u7a7a\u95f4\u51e0\u4f55\u5173\u7cfb\uff0c\u8ba1\u7b97\u51fa\u9884\u6d4b\u70b9\u4e0e\u771f\u5b9e\u70b9\u7684\u89d2\u5ea6\u504f\u5dee\uff0c\u8868\u683c6\u00b0","title":"\u4eff\u771f\u5b9e\u9a8c\uff0c\u6570\u636e\u5bf9\u6bd4"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/#_8","text":"\u6211\u4eec\u5c06\u6b64\u6210\u679c\u4e0e\u524d\u7aef\u754c\u9762\u7ed3\u5408\uff0c\u878d\u5408\u6210\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u6237\u4f53\u9a8c\u4e0e\u6d88\u8d39\u7684\u4ea7\u54c1\uff0c\u5c06\u89c6\u7ebf\u4f30\u8ba1\u70b9\u91cf\u5316\u4e3a\u9f20\u6807\u4f4d\u7f6e\uff0c\u7528\u6237\u5373\u53ef\u901a\u8fc7\u773c\u52a8\u4ea4\u4e92\u6765\u63a7\u5236\u8ba1\u7b97\u673a\u8fdb\u884c\u64cd\u4f5c \u754c\u9762\u4ee5\u53ca\u529f\u80fd\u5982\u4e0b \u83dc\u5355 \u773c\u52a8\u952e\u76d8\u8f93\u5165 \u5927\u5e45\u5ea6\u56fe\u7247\u5207\u6362","title":"\u524d\u540e\u7aef\u878d\u5408"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%8D%95%E7%9B%B8%E6%9C%BA%E5%8F%8C%E5%85%89%E6%BA%90%E8%A7%86%E7%BA%BF%E4%BC%B0%E8%AE%A1/#_9","text":"\u5728\u6211\u4eec\u7684\u5de5\u4f5c\u4e2d\uff0c\u4e3b\u8981\u5229\u7528\u4e86\u53cd\u5c04\u5149\u6591\u7684\u7279\u5f81\uff0c\u7ed3\u5408\u4f20\u7edf\u7b97\u6cd5\u4e0e\u6df1\u5ea6\u5b66\u4e60\uff0c\u5c06\u660e\u663e\u7279\u5f81\u9001\u5165\u7f51\u7edc\u5b66\u4e60\uff0c\u5373\u7701\u53bb\u4e86\u4f20\u7edf\u7b97\u6cd5\u6784\u5efa\u51e0\u4f55\u6a21\u578b\u7684\u56f0\u96be\uff0c\u53c8\u4e3a\u6df1\u5ea6\u5b66\u4e60\u63d0\u4f9b\u4e86\u660e\u663e\u7684\u7279\u5f81\u53bb\u6784\u5efa\u6a21\u578b\uff0c\u771f\u6b63\u505a\u5230\u4e86\u6613\u590d\u73b0\uff0c\u6613\u4f7f\u7528\u7b49\u4f18\u70b9\uff0c\u4e14\u8fbe\u5230\u4e8680\u7684\u5e27\u7387\u3002\u4f46\u662f\u8bbe\u5907\u4ecd\u6709\u4e0d\u6613\u5b89\u88c5\uff0c\u64cd\u4f5c\u590d\u6742\u7b49\u4e0d\u8db3\uff0c\u7cbe\u5ea6\u4e5f\u6709\u5f88\u5927\u63d0\u5347\u7a7a\u95f4\uff0c\u4ee5\u5728\u672a\u6765\u7684\u7814\u7a76\u4e2d\u505a\u8fdb\u4e00\u6b65\u4f18\u5316\u3002","title":"\u603b\u7ed3"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%A4%B4%E9%83%A8%E5%A7%BF%E6%80%81%E4%BC%B0%E8%AE%A1/","text":"","title":"\u5934\u90e8\u59ff\u6001\u4f30\u8ba1"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/","text":"\u767e\u5ea6\u5927\u6570\u636e\u7ade\u8d5b\u5212\u6c34\u8bb0\u5f55 \u00b6 \u6240\u7528\u4ee3\u7801\u5747\u4e3a\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u67b6\u6784\uff0c\u53ea\u662f\u7b80\u5355\u8c03\u53c2\uff0c\u6545\u6ca1\u6709\u5f00\u6e90 \u8d5b\u9898\u4e3a\u8f66\u8f7d\u5f71\u50cf aistudio \u5e73\u53f0\uff0c\u6240\u4ee5\u6211\u6700\u5148\u4f7f\u7528paddle\u6846\u67b6\u8fdb\u884c\u5c1d\u8bd5\uff0cbaseline\u7ed9\u7684\u6a21\u578b\u4e3a ppyolo ,\u5c1d\u8bd5\u7684\u8dd1\u4e86\u4e00\u5929\uff0c\u7ed3\u679cap\u60ca\u4eba\u7684\u624d0.02\uff0c\u4ea4\u6d41\u7fa4\u91cc\u5f88\u591a\u4eba\u4e5f\u662f\u8fd9\u6837\uff0c\u6240\u4ee5\u6211\u679c\u65ad\u653e\u5f03\uff0c\u540e\u6765\u53d1\u73b0\u53ef\u80fd\u662f\u56e0\u4e3a\u951a\u6846\u7684\u5927\u5c0f\u9009\u53d6\u6709\u95ee\u9898\uff0c\u5148\u8fdb\u884c autoAnchor\u805a\u7c7b \u5f97\u5230\u6700\u4f73\u951a\u6846\u53ef\u80fd\u4f1a\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u6211\u6ca1\u6709\u8fdb\u884c\u5c1d\u8bd5 \u4e4b\u540e\u8f6c\u6218 faster-rcnn \u56e0\u4e3a\u63d0\u4ea4\u7ed3\u679c\u5bf9\u6a21\u578b\u7684\u5927\u5c0f\u6709\u9650\u5236\uff0c\u5fc5\u987b\u5728200m\u4ee5\u5185\uff0c\u800c\u6211\u8fd9\u4e2a\u8fd8\u5355\u5355\u53ea\u662f\u68c0\u6d4b\u7684\u6a21\u578b\uff0c\u6545\u6211\u9009\u7528 resnet-18 \u4f5c\u4e3a\u9aa8\u5e72\uff0chead\u4f7f\u7528 fpn \u63d0\u9ad8\u611f\u53d7\u91ce\uff0c\u9a8c\u8bc1\u96c6ap\u80fd\u8fbe\u52300.18\uff01\u6b64\u65f6\u63d0\u4ea4f=0.2\u77ac\u95f4\u5347\u5230\u4e86\u524d\u5341 \u4e4b\u540e\u4fbf\u5f00\u59cb\u4e86\u65e0\u8111\u8c03\u53c2\u4e4b\u65c5\u3002\u3002\u3002\u5927\u65e0\u8bed\u4e8b\u4ef6\u63a5\u8fde\u53d1\u751f \u62ff\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u8bad\u7ec3\u4e00\u665a\u4e0a\u76f4\u63a5\u62a5\u9519\uff0c\u62a5\u9519\u539f\u56e0\u597d\u50cf\u662f\u9a8c\u8bc1\u7684\u65f6\u5019tensor\u51fa\u73b0\u4e86-1\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u65e0\u6cd5\u8ba1\u7b97ap\uff0c\u7a0b\u5e8f\u5c31\u76f4\u63a5\u505c\u6b62\u4e86\uff0c\u8fd9\u4e2a\u9519\u8bef\u5728\u76f8\u540c\u4ee3\u7801\u7b2c\u4e8c\u6b21\u8dd1\u7684\u65f6\u5019\u5c31\u6d88\u5931\u4e86\uff0c\u7384\u5b66 \u9ed8\u8ba4\u5b66\u4e60\u7387\u8fdb\u884c\u8bad\u7ec3\u65f6\uff0c\u51e0\u4e2abatch\u8fc7\u540eloss\u76f4\u63a5\u53d8\u4e3anan\uff0c\u53ea\u80fd\u964d\u4f4e\u5b66\u4e60\u73870.001 cascade rcnn \u7684ap\u5012\u662f\u53ef\u4ee5\u7a33\u6b65\u4e0a\u5347\uff0c\u4f46\u662f\u6a21\u578b\u5bfc\u51fa\u8d85\u8fc7\u4e86200m\uff0cpaddle\u6682\u4e0d\u652f\u6301rcnn\u6a21\u578b\u7684\u538b\u7f29 \u6240\u4ee5\u5c31\u8fd9\u6837\u4e00\u6b21\u8bad\u7ec3\u4e0d\u5982\u4e00\u6b21\uff0c\u5e72\u8106\u653e\u5f03\u4e86\uff0c\u5982\u679c\u6709\u5e78\u8fdb\u590d\u8d5b\u518d\u597d\u597d\u641e \u5c31\u8fd9\u4e00\u4e2a\u8349\u7387\u7684\u6a21\u578b\u5c45\u7136\u4ee530\u591a\u540d\u7684\u6210\u7ee9\u8fdb\u4e86\u590d\u8d5b\uff08\u597d\u6c34\uff09\uff0c\u590d\u8d5b\u5c31\u4e0d\u4e00\u6837\u4e86 \u590d\u8d5b\u6211\u6bc5\u7136\u51b3\u7136\u7684\u653e\u5f03\u4e86paddle\uff0c\u7528\u6700\u706b\u7684yolov5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u56e0\u4e3a\u4e4b\u95f4\u7ecf\u5e38\u8dd1yolov5\uff0c\u5176\u6027\u80fd\u548c\u901f\u5ea6\u90fd\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u8dd1\u4e86 \u76ee\u6807\u68c0\u6d4b--YOLOV5 \u00b6 \u6570\u636e\u5904\u7406 \u00b6 \u672c\u6b21\u6bd4\u8d5b\u6240\u7528\u6570\u636e\u683c\u5f0f\u4e3acoco\u683c\u5f0f(\u4f46\u4e0d\u5b8c\u5168\u662f)\uff0c\u6807\u6ce8\u6570\u636e\u53ea\u6709\u56fe\u50cf\u540d\u79f0\uff0cbbox\u5750\u6807\uff0c\u8fde\u901a\u57df\u4fe1\u606f \u6240\u4ee5\u5982\u679c\u8981\u7528\u4e3b\u6d41\u7f51\u7edc\u8bad\u7ec3\u7684\u8bdd\u5efa\u8bae\u5148\u5c06\u6b21\u6570\u636e\u8f6c\u4e3acoco\u6570\u636e\u683c\u5f0f\uff0cyolov5\u5b98\u65b9\u7ed9\u51fa\u4e86\u5404\u79cd\u6570\u636e\u8f6c\u4e3ayolo\u683c\u5f0f\u4ee3\u7801 \u6211\u66f4\u6539\u4ee5\u540e\u5982\u4e0b import json import cv2 import pandas as pd from PIL import Image from utils import * def convert_coco_json ( json_dir = '../coco/annotations/' , use_segments = False , cls91to80 = False ): save_dir = make_dirs () # output directory coco80 = coco91_to_coco80_class () # Import json for json_file in tqdm ( Path ( json_dir ) . resolve () . glob ( '*.json' )): fn = Path ( save_dir ) / 'labels' # / json_file.stem.replace('instances_', '') # folder name with open ( json_file ) as f : data = json . load ( f ) # Create image dict # images = {'%g' % x['id']: x for x in data['images']} # Write labels file # if x['iscrowd']: # continue img_path = os . path . join ( '../train (1)/train/image/' , json_file . stem ) frame = cv2 . imread ( img_path + '.jpg' ) h , w , f = frame . shape [ 0 ], frame . shape [ 1 ], json_file . stem for x in data : # img = images['%g' % x['image_id']] # h, w, f = img['height'], img['width'], img['file_name'] # The COCO box format is [top left x, top left y, width, height] box = np . array ([ x [ 'x' ], x [ 'y' ], x [ 'width' ], x [ 'height' ]], dtype = np . float64 ) box [: 2 ] += box [ 2 :] / 2 # xy top-left corner to center box [[ 0 , 2 ]] /= w # normalize x box [[ 1 , 3 ]] /= h # normalize y # Segments if use_segments : segments = [ j for i in x [ 'segmentation' ] for j in i ] # all segments concatenated s = ( np . array ( segments ) . reshape ( - 1 , 2 ) / np . array ([ w , h ])) . reshape ( - 1 ) . tolist () # Write if box [ 2 ] > 0 and box [ 3 ] > 0 : # if w > 0 and h > 0 cls = coco80 [ x [ 'type' ] - 1 ] if cls91to80 else x [ 'type' ] - 1 # class line = cls , * ( s if use_segments else box ) # cls, box or segments with open (( fn / f ) . with_suffix ( '.txt' ), 'a' ) as file : file . write (( ' %g ' * len ( line )) . rstrip () % line + ' \\n ' ) if __name__ == '__main__' : source = 'COCO' path = '.. \\\\ train (1) \\\\ train \\\\ label' if source == 'COCO' : convert_coco_json ( path ) # directory with *.json # zip results # os.system('zip -r ../coco.zip ../coco') \u7531\u6b64\u53ef\u5728new_dir\u4e2d\u5f97\u5230yolo\u6570\u636e\u96c6\u6807\u7b7e\u683c\u5f0f *.txt\uff0c\u5e76\u5c06\u5176\u5206\u6210\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\uff0c\u56fe\u50cf\u6587\u4ef6\u548c\u6807\u7b7e\u6587\u4ef6\u653e\u5165\u5bf9\u5e94\u6587\u4ef6\u5939\u3002 \u8bad\u7ec3 \u00b6 \u53c2\u8003yolov5\u5b98\u65b9readme\uff0c\u6700\u8fd1yolov5\u66f4\u65b0\u52305.0\uff0c\u770b\u8bc4\u6d4b\u6807\u51c6\u6027\u80fd\u53c8\u6709\u4e86\u98de\u8dc3\uff0c\u6b63\u597d\u501f\u7740\u8fd9\u6b21\u6bd4\u8d5b\u5c1d\u8bd5\u4e00\u4e0b \u4fee\u6539cfg.yml data.yml\uff0c\u66f4\u6539\u4e3a\u81ea\u5df1\u7684\u8def\u5f84 \u524d\u671f\u6709\u70b9\u865a\uff0c\u53ea\u8bad\u7ec3\u4e8650\u4e2aepoch\uff0c\u4e00\u5929\u4ee5\u540e\uff0cap\u4fbf\u8fbe\u5230\u4e860.4\uff0c \u8bc4\u4f30 \u00b6 \u8fd9\u6b21\u548c\u5176\u4ed6\u6bd4\u8d5b\u4e0d\u4e00\u6837\uff0c\u5b98\u65b9\u5e76\u6ca1\u6709\u7ed9\u51fa\u6d4b\u8bd5\u96c6\uff0c\u6240\u4ee5\u53ea\u8bad\u7ec3\u5b8c\u8fd8\u4e0d\u53ef\u4ee5\uff0c\u63d0\u4ea4\u7ed3\u679c\u8981\u6c42\u63d0\u4ea4\u4ee3\u7801\uff0c\u5e76\u5728\u5176\u670d\u52a1\u5668\u73af\u5883\u4e0b\u987a\u5229\u8fd0\u884c\uff0c\u5e76\u751f\u6210\u6240\u8981\u6c42\u7684json\u6587\u4ef6 import sys import time from pathlib import Path import json import torch from numpy import random from env.experimental import attempt_load from env.datasets import LoadImages from env.general import check_img_size , non_max_suppression , apply_classifier , \\ scale_coords , set_logging from env.torch_utils import select_device , load_classifier , time_synchronized def detect ( datatxt , resultjson , save_img = False ): augment = False conf_thres = 0.5 iou_thres = 0.5 weights , imgsz = './weights/yolov5m6.pt' , 1280 save_img = False # save inference images view_img = False save_txt = True webcam = False device = '' source = datatxt # Initialize set_logging () device = select_device ( device ) half = device . type != 'cpu' # half precision only supported on CUDA # Load model model = attempt_load ( weights , map_location = device ) # load FP32 model stride = int ( model . stride . max ()) # model stride imgsz = check_img_size ( imgsz , s = stride ) # check img_size if half : model . half () # to FP16 # Second-stage classifier classify = False if classify : modelc = load_classifier ( name = 'resnet101' , n = 2 ) # initialize modelc . load_state_dict ( torch . load ( 'weights/resnet101.pt' , map_location = device )[ 'model' ]) . to ( device ) . eval () # Set Dataloader vid_path , vid_writer = None , None if not webcam : dataset = LoadImages ( source , img_size = imgsz , stride = stride ) jdict , stats , ap , ap_class = [], [], [], [] result = {} result [ \"result\" ] = [] det_dic = { 0 : 3 , 1 : 2 , 2 : 1 , 9 : 7 } # Get names and colors names = model . module . names if hasattr ( model , 'module' ) else model . names colors = [[ random . randint ( 0 , 255 ) for _ in range ( 3 )] for _ in names ] # Run inference if device . type != 'cpu' : model ( torch . zeros ( 1 , 3 , imgsz , imgsz ) . to ( device ) . type_as ( next ( model . parameters ()))) # run once t0 = time . time () for path , img , im0s , vid_cap in dataset : img = torch . from_numpy ( img ) . to ( device ) img = img . half () if half else img . float () # uint8 to fp16/32 img /= 255.0 # 0 - 255 to 0.0 - 1.0 if img . ndimension () == 3 : img = img . unsqueeze ( 0 ) # Inference t1 = time_synchronized () pred = model ( img , augment = augment )[ 0 ] # Apply NMS pred = non_max_suppression ( pred , conf_thres , iou_thres ) t2 = time_synchronized () # Apply Classifier if classify : pred = apply_classifier ( pred , modelc , img , im0s ) # Process detections for i , det in enumerate ( pred ): # detections per image if webcam : # batch_size >= 1 p , s , im0 , frame = path [ i ], ' %g : ' % i , im0s [ i ] . copy (), dataset . count else : p , s , im0 , frame = path , '' , im0s , getattr ( dataset , 'frame' , 0 ) p = Path ( p ) # to Path s += ' %g x %g ' % img . shape [ 2 :] # print string gn = torch . tensor ( im0 . shape )[[ 1 , 0 , 1 , 0 ]] # normalization gain whwh txt_path = p . stem if len ( det ): # Rescale boxes from img_size to im0 size det [:, : 4 ] = scale_coords ( img . shape [ 2 :], det [:, : 4 ], im0 . shape ) . round () # Print results for c in det [:, - 1 ] . unique (): n = ( det [:, - 1 ] == c ) . sum () # detections per class s += f \" { n } { names [ int ( c )] }{ 's' * ( n > 1 ) } , \" # add to string # Write results for * xyxy , conf , cls in reversed ( det ): if save_txt : result_one = {} result_one [ \"image_id\" ] = int ( txt_path ) if int ( cls . item ()) != 0 and int ( cls . item ()) != 1 and int ( cls . item ()) != 2 and int ( cls . item ()) != 9 : continue result_one [ \"type\" ] = det_dic [ int ( cls . item ())] result_one [ \"x\" ] = xyxy [ 0 ] . item () result_one [ \"y\" ] = xyxy [ 1 ] . item () result_one [ \"width\" ] = ( xyxy [ 2 ] . item () - xyxy [ 0 ] . item ()) result_one [ \"height\" ] = ( xyxy [ 3 ] . item () - xyxy [ 1 ] . item ()) result_one [ \"segmentation\" ] = [] result [ \"result\" ] . append ( result_one ) # with open(txt_path + '.txt', 'a') as f: # f.write(('%g ' * 5 + '\\n') % (cls, *xywh)) # label format if save_img or view_img : # Add bbox to image label = f ' { names [ int ( cls )] } { conf : .2f } ' # plot_one_box(xyxy, im0, label=label, color=colors[int(cls)], line_thickness=3) # Print time (inference + NMS) print ( f ' { s } Done. ( { t2 - t1 : .3f } s)' ) with open ( resultjson , 'w' ) as outfile : json . dump ( result , outfile ) print ( f 'Done. ( { time . time () - t0 : .3f } s)' ) if __name__ == '__main__' : abc = {} abc [ \"input\" ] = sys . argv [ 1 ] abc [ \"output\" ] = sys . argv [ 2 ] with torch . no_grad (): detect ( abc [ \"input\" ], abc [ \"output\" ]) \u7ec8\u7aef\u547d\u4ee4 python predict.py data.txt result.json \u8bed\u4e49\u5206\u5272 -- deeplabv3+ \u00b6 \u524d\u8a00 \u00b6 \u56e0\u4e3a\u524d\u671f\u5e76\u6ca1\u6709\u592a\u591a\u63a5\u89e6\u8fc7\u8bed\u4e49\u5206\u5272\uff0c\u53ea\u8dd1\u8fc7\u4e00\u4e2aunet\uff0c\u6240\u4ee5\u771f\u7684\u53ef\u4ee5\u7b97\u662f\u96f6\u57fa\u7840\uff0c\u6559\u7a0b\u4e5f\u6bd4\u8f83\u63a5\u5730\u6c14 \u6570\u636e\u5904\u7406 \u00b6 \u8bed\u4e49\u5206\u5272\u6570\u636e\u96c6\u5206\u4e3a COCO cityspace \u5927\u4f6c\u5f00\u6e90\uff1amutilyolov5 \u00b6 \u6700\u7ec8\u6548\u679c \u00b6 ps:\u80fd\u529b\u6709\u9650\uff0c\u6700\u7ec8\u83b7\u5f97\u4e8622\u540d\uff0c\u6ca1\u80fd\u8fdb\u524d\u5341\uff0c\u672a\u80fd\u8fdb\u5165\u51b3\u8d5b\u3002\u7b2c\u4e00\u6b21\u7ade\u8d5b\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u5566","title":"\u767e\u5ea6\u8f66\u8f7d\u5f71\u50cf\u68c0\u6d4b\u4e0e\u5206\u5272"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#_1","text":"\u6240\u7528\u4ee3\u7801\u5747\u4e3a\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u67b6\u6784\uff0c\u53ea\u662f\u7b80\u5355\u8c03\u53c2\uff0c\u6545\u6ca1\u6709\u5f00\u6e90 \u8d5b\u9898\u4e3a\u8f66\u8f7d\u5f71\u50cf aistudio \u5e73\u53f0\uff0c\u6240\u4ee5\u6211\u6700\u5148\u4f7f\u7528paddle\u6846\u67b6\u8fdb\u884c\u5c1d\u8bd5\uff0cbaseline\u7ed9\u7684\u6a21\u578b\u4e3a ppyolo ,\u5c1d\u8bd5\u7684\u8dd1\u4e86\u4e00\u5929\uff0c\u7ed3\u679cap\u60ca\u4eba\u7684\u624d0.02\uff0c\u4ea4\u6d41\u7fa4\u91cc\u5f88\u591a\u4eba\u4e5f\u662f\u8fd9\u6837\uff0c\u6240\u4ee5\u6211\u679c\u65ad\u653e\u5f03\uff0c\u540e\u6765\u53d1\u73b0\u53ef\u80fd\u662f\u56e0\u4e3a\u951a\u6846\u7684\u5927\u5c0f\u9009\u53d6\u6709\u95ee\u9898\uff0c\u5148\u8fdb\u884c autoAnchor\u805a\u7c7b \u5f97\u5230\u6700\u4f73\u951a\u6846\u53ef\u80fd\u4f1a\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u6211\u6ca1\u6709\u8fdb\u884c\u5c1d\u8bd5 \u4e4b\u540e\u8f6c\u6218 faster-rcnn \u56e0\u4e3a\u63d0\u4ea4\u7ed3\u679c\u5bf9\u6a21\u578b\u7684\u5927\u5c0f\u6709\u9650\u5236\uff0c\u5fc5\u987b\u5728200m\u4ee5\u5185\uff0c\u800c\u6211\u8fd9\u4e2a\u8fd8\u5355\u5355\u53ea\u662f\u68c0\u6d4b\u7684\u6a21\u578b\uff0c\u6545\u6211\u9009\u7528 resnet-18 \u4f5c\u4e3a\u9aa8\u5e72\uff0chead\u4f7f\u7528 fpn \u63d0\u9ad8\u611f\u53d7\u91ce\uff0c\u9a8c\u8bc1\u96c6ap\u80fd\u8fbe\u52300.18\uff01\u6b64\u65f6\u63d0\u4ea4f=0.2\u77ac\u95f4\u5347\u5230\u4e86\u524d\u5341 \u4e4b\u540e\u4fbf\u5f00\u59cb\u4e86\u65e0\u8111\u8c03\u53c2\u4e4b\u65c5\u3002\u3002\u3002\u5927\u65e0\u8bed\u4e8b\u4ef6\u63a5\u8fde\u53d1\u751f \u62ff\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u8bad\u7ec3\u4e00\u665a\u4e0a\u76f4\u63a5\u62a5\u9519\uff0c\u62a5\u9519\u539f\u56e0\u597d\u50cf\u662f\u9a8c\u8bc1\u7684\u65f6\u5019tensor\u51fa\u73b0\u4e86-1\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u65e0\u6cd5\u8ba1\u7b97ap\uff0c\u7a0b\u5e8f\u5c31\u76f4\u63a5\u505c\u6b62\u4e86\uff0c\u8fd9\u4e2a\u9519\u8bef\u5728\u76f8\u540c\u4ee3\u7801\u7b2c\u4e8c\u6b21\u8dd1\u7684\u65f6\u5019\u5c31\u6d88\u5931\u4e86\uff0c\u7384\u5b66 \u9ed8\u8ba4\u5b66\u4e60\u7387\u8fdb\u884c\u8bad\u7ec3\u65f6\uff0c\u51e0\u4e2abatch\u8fc7\u540eloss\u76f4\u63a5\u53d8\u4e3anan\uff0c\u53ea\u80fd\u964d\u4f4e\u5b66\u4e60\u73870.001 cascade rcnn \u7684ap\u5012\u662f\u53ef\u4ee5\u7a33\u6b65\u4e0a\u5347\uff0c\u4f46\u662f\u6a21\u578b\u5bfc\u51fa\u8d85\u8fc7\u4e86200m\uff0cpaddle\u6682\u4e0d\u652f\u6301rcnn\u6a21\u578b\u7684\u538b\u7f29 \u6240\u4ee5\u5c31\u8fd9\u6837\u4e00\u6b21\u8bad\u7ec3\u4e0d\u5982\u4e00\u6b21\uff0c\u5e72\u8106\u653e\u5f03\u4e86\uff0c\u5982\u679c\u6709\u5e78\u8fdb\u590d\u8d5b\u518d\u597d\u597d\u641e \u5c31\u8fd9\u4e00\u4e2a\u8349\u7387\u7684\u6a21\u578b\u5c45\u7136\u4ee530\u591a\u540d\u7684\u6210\u7ee9\u8fdb\u4e86\u590d\u8d5b\uff08\u597d\u6c34\uff09\uff0c\u590d\u8d5b\u5c31\u4e0d\u4e00\u6837\u4e86 \u590d\u8d5b\u6211\u6bc5\u7136\u51b3\u7136\u7684\u653e\u5f03\u4e86paddle\uff0c\u7528\u6700\u706b\u7684yolov5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u56e0\u4e3a\u4e4b\u95f4\u7ecf\u5e38\u8dd1yolov5\uff0c\u5176\u6027\u80fd\u548c\u901f\u5ea6\u90fd\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u8dd1\u4e86","title":"\u767e\u5ea6\u5927\u6570\u636e\u7ade\u8d5b\u5212\u6c34\u8bb0\u5f55"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#-yolov5","text":"","title":"\u76ee\u6807\u68c0\u6d4b--YOLOV5"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#_2","text":"\u672c\u6b21\u6bd4\u8d5b\u6240\u7528\u6570\u636e\u683c\u5f0f\u4e3acoco\u683c\u5f0f(\u4f46\u4e0d\u5b8c\u5168\u662f)\uff0c\u6807\u6ce8\u6570\u636e\u53ea\u6709\u56fe\u50cf\u540d\u79f0\uff0cbbox\u5750\u6807\uff0c\u8fde\u901a\u57df\u4fe1\u606f \u6240\u4ee5\u5982\u679c\u8981\u7528\u4e3b\u6d41\u7f51\u7edc\u8bad\u7ec3\u7684\u8bdd\u5efa\u8bae\u5148\u5c06\u6b21\u6570\u636e\u8f6c\u4e3acoco\u6570\u636e\u683c\u5f0f\uff0cyolov5\u5b98\u65b9\u7ed9\u51fa\u4e86\u5404\u79cd\u6570\u636e\u8f6c\u4e3ayolo\u683c\u5f0f\u4ee3\u7801 \u6211\u66f4\u6539\u4ee5\u540e\u5982\u4e0b import json import cv2 import pandas as pd from PIL import Image from utils import * def convert_coco_json ( json_dir = '../coco/annotations/' , use_segments = False , cls91to80 = False ): save_dir = make_dirs () # output directory coco80 = coco91_to_coco80_class () # Import json for json_file in tqdm ( Path ( json_dir ) . resolve () . glob ( '*.json' )): fn = Path ( save_dir ) / 'labels' # / json_file.stem.replace('instances_', '') # folder name with open ( json_file ) as f : data = json . load ( f ) # Create image dict # images = {'%g' % x['id']: x for x in data['images']} # Write labels file # if x['iscrowd']: # continue img_path = os . path . join ( '../train (1)/train/image/' , json_file . stem ) frame = cv2 . imread ( img_path + '.jpg' ) h , w , f = frame . shape [ 0 ], frame . shape [ 1 ], json_file . stem for x in data : # img = images['%g' % x['image_id']] # h, w, f = img['height'], img['width'], img['file_name'] # The COCO box format is [top left x, top left y, width, height] box = np . array ([ x [ 'x' ], x [ 'y' ], x [ 'width' ], x [ 'height' ]], dtype = np . float64 ) box [: 2 ] += box [ 2 :] / 2 # xy top-left corner to center box [[ 0 , 2 ]] /= w # normalize x box [[ 1 , 3 ]] /= h # normalize y # Segments if use_segments : segments = [ j for i in x [ 'segmentation' ] for j in i ] # all segments concatenated s = ( np . array ( segments ) . reshape ( - 1 , 2 ) / np . array ([ w , h ])) . reshape ( - 1 ) . tolist () # Write if box [ 2 ] > 0 and box [ 3 ] > 0 : # if w > 0 and h > 0 cls = coco80 [ x [ 'type' ] - 1 ] if cls91to80 else x [ 'type' ] - 1 # class line = cls , * ( s if use_segments else box ) # cls, box or segments with open (( fn / f ) . with_suffix ( '.txt' ), 'a' ) as file : file . write (( ' %g ' * len ( line )) . rstrip () % line + ' \\n ' ) if __name__ == '__main__' : source = 'COCO' path = '.. \\\\ train (1) \\\\ train \\\\ label' if source == 'COCO' : convert_coco_json ( path ) # directory with *.json # zip results # os.system('zip -r ../coco.zip ../coco') \u7531\u6b64\u53ef\u5728new_dir\u4e2d\u5f97\u5230yolo\u6570\u636e\u96c6\u6807\u7b7e\u683c\u5f0f *.txt\uff0c\u5e76\u5c06\u5176\u5206\u6210\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\uff0c\u56fe\u50cf\u6587\u4ef6\u548c\u6807\u7b7e\u6587\u4ef6\u653e\u5165\u5bf9\u5e94\u6587\u4ef6\u5939\u3002","title":"\u6570\u636e\u5904\u7406"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#_3","text":"\u53c2\u8003yolov5\u5b98\u65b9readme\uff0c\u6700\u8fd1yolov5\u66f4\u65b0\u52305.0\uff0c\u770b\u8bc4\u6d4b\u6807\u51c6\u6027\u80fd\u53c8\u6709\u4e86\u98de\u8dc3\uff0c\u6b63\u597d\u501f\u7740\u8fd9\u6b21\u6bd4\u8d5b\u5c1d\u8bd5\u4e00\u4e0b \u4fee\u6539cfg.yml data.yml\uff0c\u66f4\u6539\u4e3a\u81ea\u5df1\u7684\u8def\u5f84 \u524d\u671f\u6709\u70b9\u865a\uff0c\u53ea\u8bad\u7ec3\u4e8650\u4e2aepoch\uff0c\u4e00\u5929\u4ee5\u540e\uff0cap\u4fbf\u8fbe\u5230\u4e860.4\uff0c","title":"\u8bad\u7ec3"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#_4","text":"\u8fd9\u6b21\u548c\u5176\u4ed6\u6bd4\u8d5b\u4e0d\u4e00\u6837\uff0c\u5b98\u65b9\u5e76\u6ca1\u6709\u7ed9\u51fa\u6d4b\u8bd5\u96c6\uff0c\u6240\u4ee5\u53ea\u8bad\u7ec3\u5b8c\u8fd8\u4e0d\u53ef\u4ee5\uff0c\u63d0\u4ea4\u7ed3\u679c\u8981\u6c42\u63d0\u4ea4\u4ee3\u7801\uff0c\u5e76\u5728\u5176\u670d\u52a1\u5668\u73af\u5883\u4e0b\u987a\u5229\u8fd0\u884c\uff0c\u5e76\u751f\u6210\u6240\u8981\u6c42\u7684json\u6587\u4ef6 import sys import time from pathlib import Path import json import torch from numpy import random from env.experimental import attempt_load from env.datasets import LoadImages from env.general import check_img_size , non_max_suppression , apply_classifier , \\ scale_coords , set_logging from env.torch_utils import select_device , load_classifier , time_synchronized def detect ( datatxt , resultjson , save_img = False ): augment = False conf_thres = 0.5 iou_thres = 0.5 weights , imgsz = './weights/yolov5m6.pt' , 1280 save_img = False # save inference images view_img = False save_txt = True webcam = False device = '' source = datatxt # Initialize set_logging () device = select_device ( device ) half = device . type != 'cpu' # half precision only supported on CUDA # Load model model = attempt_load ( weights , map_location = device ) # load FP32 model stride = int ( model . stride . max ()) # model stride imgsz = check_img_size ( imgsz , s = stride ) # check img_size if half : model . half () # to FP16 # Second-stage classifier classify = False if classify : modelc = load_classifier ( name = 'resnet101' , n = 2 ) # initialize modelc . load_state_dict ( torch . load ( 'weights/resnet101.pt' , map_location = device )[ 'model' ]) . to ( device ) . eval () # Set Dataloader vid_path , vid_writer = None , None if not webcam : dataset = LoadImages ( source , img_size = imgsz , stride = stride ) jdict , stats , ap , ap_class = [], [], [], [] result = {} result [ \"result\" ] = [] det_dic = { 0 : 3 , 1 : 2 , 2 : 1 , 9 : 7 } # Get names and colors names = model . module . names if hasattr ( model , 'module' ) else model . names colors = [[ random . randint ( 0 , 255 ) for _ in range ( 3 )] for _ in names ] # Run inference if device . type != 'cpu' : model ( torch . zeros ( 1 , 3 , imgsz , imgsz ) . to ( device ) . type_as ( next ( model . parameters ()))) # run once t0 = time . time () for path , img , im0s , vid_cap in dataset : img = torch . from_numpy ( img ) . to ( device ) img = img . half () if half else img . float () # uint8 to fp16/32 img /= 255.0 # 0 - 255 to 0.0 - 1.0 if img . ndimension () == 3 : img = img . unsqueeze ( 0 ) # Inference t1 = time_synchronized () pred = model ( img , augment = augment )[ 0 ] # Apply NMS pred = non_max_suppression ( pred , conf_thres , iou_thres ) t2 = time_synchronized () # Apply Classifier if classify : pred = apply_classifier ( pred , modelc , img , im0s ) # Process detections for i , det in enumerate ( pred ): # detections per image if webcam : # batch_size >= 1 p , s , im0 , frame = path [ i ], ' %g : ' % i , im0s [ i ] . copy (), dataset . count else : p , s , im0 , frame = path , '' , im0s , getattr ( dataset , 'frame' , 0 ) p = Path ( p ) # to Path s += ' %g x %g ' % img . shape [ 2 :] # print string gn = torch . tensor ( im0 . shape )[[ 1 , 0 , 1 , 0 ]] # normalization gain whwh txt_path = p . stem if len ( det ): # Rescale boxes from img_size to im0 size det [:, : 4 ] = scale_coords ( img . shape [ 2 :], det [:, : 4 ], im0 . shape ) . round () # Print results for c in det [:, - 1 ] . unique (): n = ( det [:, - 1 ] == c ) . sum () # detections per class s += f \" { n } { names [ int ( c )] }{ 's' * ( n > 1 ) } , \" # add to string # Write results for * xyxy , conf , cls in reversed ( det ): if save_txt : result_one = {} result_one [ \"image_id\" ] = int ( txt_path ) if int ( cls . item ()) != 0 and int ( cls . item ()) != 1 and int ( cls . item ()) != 2 and int ( cls . item ()) != 9 : continue result_one [ \"type\" ] = det_dic [ int ( cls . item ())] result_one [ \"x\" ] = xyxy [ 0 ] . item () result_one [ \"y\" ] = xyxy [ 1 ] . item () result_one [ \"width\" ] = ( xyxy [ 2 ] . item () - xyxy [ 0 ] . item ()) result_one [ \"height\" ] = ( xyxy [ 3 ] . item () - xyxy [ 1 ] . item ()) result_one [ \"segmentation\" ] = [] result [ \"result\" ] . append ( result_one ) # with open(txt_path + '.txt', 'a') as f: # f.write(('%g ' * 5 + '\\n') % (cls, *xywh)) # label format if save_img or view_img : # Add bbox to image label = f ' { names [ int ( cls )] } { conf : .2f } ' # plot_one_box(xyxy, im0, label=label, color=colors[int(cls)], line_thickness=3) # Print time (inference + NMS) print ( f ' { s } Done. ( { t2 - t1 : .3f } s)' ) with open ( resultjson , 'w' ) as outfile : json . dump ( result , outfile ) print ( f 'Done. ( { time . time () - t0 : .3f } s)' ) if __name__ == '__main__' : abc = {} abc [ \"input\" ] = sys . argv [ 1 ] abc [ \"output\" ] = sys . argv [ 2 ] with torch . no_grad (): detect ( abc [ \"input\" ], abc [ \"output\" ]) \u7ec8\u7aef\u547d\u4ee4 python predict.py data.txt result.json","title":"\u8bc4\u4f30"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#-deeplabv3","text":"","title":"\u8bed\u4e49\u5206\u5272 -- deeplabv3+"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#_5","text":"\u56e0\u4e3a\u524d\u671f\u5e76\u6ca1\u6709\u592a\u591a\u63a5\u89e6\u8fc7\u8bed\u4e49\u5206\u5272\uff0c\u53ea\u8dd1\u8fc7\u4e00\u4e2aunet\uff0c\u6240\u4ee5\u771f\u7684\u53ef\u4ee5\u7b97\u662f\u96f6\u57fa\u7840\uff0c\u6559\u7a0b\u4e5f\u6bd4\u8f83\u63a5\u5730\u6c14","title":"\u524d\u8a00"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#_6","text":"\u8bed\u4e49\u5206\u5272\u6570\u636e\u96c6\u5206\u4e3a COCO cityspace","title":"\u6570\u636e\u5904\u7406"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#mutilyolov5","text":"","title":"\u5927\u4f6c\u5f00\u6e90\uff1amutilyolov5"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%99%BE%E5%BA%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%88%92%E6%B0%B4%E8%AE%B0%E5%BD%95/#_7","text":"ps:\u80fd\u529b\u6709\u9650\uff0c\u6700\u7ec8\u83b7\u5f97\u4e8622\u540d\uff0c\u6ca1\u80fd\u8fdb\u524d\u5341\uff0c\u672a\u80fd\u8fdb\u5165\u51b3\u8d5b\u3002\u7b2c\u4e00\u6b21\u7ade\u8d5b\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u5566","title":"\u6700\u7ec8\u6548\u679c"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/","text":"\u86cb\u767d\u8d28\u8367\u5149\u9635\u5217\u77eb\u6b63\u4e0e\u8bc6\u522b\u8ba1\u6570\u65b9\u6848 \u00b6 \u4ee3\u7801\u94fe\u63a5\uff1a https://gitee.com/cocoon-storage/spot_detect \u524d\u671f\u51c6\u5907 \u00b6 \u601d\u8def\uff1a\u6df1\u5ea6\u5b66\u4e60\uff08\u820d\u5f03\uff09 \u00b6 \u76ee\u6807\u7279\u5f81\uff1a \u5c0f\u76ee\u6807\uff0c\u5bc6\u96c6\uff0c\u56fe\u50cf\u5206\u8fa9\u7387\u9ad8 \u9002\u7528\u7f51\u7edc\uff1ayolov5 1\uff0c\u8be5\u7f51\u7edc\u53ef\u4ee5\u89c4\u5b9a\u8f93\u5165\u56fe\u50cf\u5927\u5c0f\uff0c\u53ef\u4ee5\u4fdd\u6301\u9ad8\u5206\u8fa8\u7387\u8f93\u5165 2\uff0c\u8bad\u7ec3\u4e4b\u524d\u4f1a\u8fdb\u884ckmeans\u5bf9\u951a\u6846\u805a\u7c7b\uff0c\u8367\u5149\u70b9\u5927\u5c0f\u53d8\u5316\u4e0d\u5927 3\uff0c\u6709FPN,SPP\u591a\u7279\u5f81\u878d\u5408\u4ee5\u9632\u635f\u5931\u4fe1\u606f \u4fee\u6539\uff1a \u9884\u6d4b\u65f6\u5c06\u539f\u56fe\u5206\u6210256\u4efd\u9001\u5165\u7f51\u7edc\u8fdb\u884c\u9884\u6d4b\uff0c\u8fb9\u7f18\u70b9\u8fdb\u884c\u5220\u9664 \u5c06\u8bad\u7ec3\u65f6\u7684mocias\u7b56\u7565\u5220\u9664 \u601d\u8def\uff1a 1\u56fe\u50cf\u6821\u6b63\uff0c\u4f7f\u56fe\u50cf\u4e0e\u56fa\u5b9a\u6a21\u677f\u5339\u914d\u6216\u8005\u5b66\u4e60\u5f97\u5230\u4e00\u4e2a\u6a21\u677f\u3002\u540c\u65f6\u5f97\u5230\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u7528\u4e8e\u540e\u671f\u5750\u6807\u6620\u5c04 2\u88c1\u526a\u56fe\u50cf\uff0c\u6a21\u677f\u5339\u914d\u5bf9\u9f50\uff0c\u5c06\u6bcf\u4e2a\u7f51\u683c\u5316\u4e3a5x5\u62163x3\u62161*1\u964d\u4f4e\u56fe\u50cf\u50cf\u7d20\uff0c\u8f6c\u5316\u65b9\u6cd5\u53ef\u4ee5\u8003\u8651\u9ad8\u65af\u5747\u503c 3\uff081\uff09\u5982\u679c\u4e3a1*1\u5219\u8fdb\u884c\u4e8c\u503c\u5316\uff0c\u7136\u540e\u76f4\u63a5\u5f97\u5230\u70b9\u7684\u5750\u6807\u548c\u8ba1\u6570 \uff082\uff09\u5982\u679c\u4e3a3*3\u53ef\u9009\u62e9\u5377\u79ef\u5b66\u4e60 \u56fe\u50cf\u6821\u6b63: radon\u53d8\u6362\uff08\u659c\u6295\u5f71\uff09 FFT\u5085\u91cc\u53f6\u8f6c\u5316\u5230\u9891\u57df\u540e\u6c42\u89e3 \u5212\u5206\u7f51\u683c\uff1a \u516d\u8fb9\u5f62\u7f51\u683c\uff0c\u7f51\u683c\u5927\u5c0f\u6709\u7ec6\u5fae\u5dee\u522b\uff0c\u4e14\u4e3a\u5c0f\u6570 \u6b63\u65b9\u5f62\u7f51\u683c\uff0c\u7c7b\u4f3c\u7816\u5899 \u7f51\u683c\u5b9a\u4f4d\u7b97\u6cd5 \u722c\u5c71\u6cd5 \u9057\u4f20\u7b97\u6cd5 \u6570\u5b66\u5f62\u6001\u5b66 \u9a6c\u5c14\u79d1\u592b\u968f\u673a\u7403\u573a \u8d1d\u53f6\u65af\u7f51\u683c\u5b9a\u4f4d \u542f\u53d1\u5f0f\u89c4\u5219\u7b97\u6cd5 \u4fee\u6b63\u50cf\u7d20 \u95ee\u9898\uff1a \u65cb\u8f6c\u89d2\u5ea6\u4fee\u6b63\uff0c\u5f97\u52306\u4e2a\u89d2\u5ea6\u600e\u4e48\u5f97\u5230\u6700\u4f73\u65cb\u8f6c\u89d2\u5ea6 \u6295\u5f71\u8fb9\u754c\u5f97\u5230\u7684\u5206\u5272\u7ebf\u6709\u95ee\u9898\uff0c\u8981\u600e\u4e48\u5229\u7528\u4e2d\u95f4\u5f97\u5230\u7684\u95f4\u9694\u3002a:\u6c42\u5e73\u5747\u6295\u5f71\u503c \u5206\u5272\u540e\u5728\u5c0f\u5757\u5185\u505a\u81ea\u9002\u5e94\u9608\u503c\u5904\u7406 \u56fe\u50cf\u9884\u5904\u7406\uff08\u5b9e\u64cd\u5f00\u59cb\uff09 \u00b6 \u672c\u8eab\u56fe\u7247\u8d28\u91cf\u8f83\u9ad8\uff0c\u91c7\u53d6\u9884\u5904\u7406\u7b56\u7565\u662f \u4e2d\u503c\u6ee4\u6ce2+otsu\u81ea\u9002\u5e94\u9608\u503c\u4e8c\u503c\u5316 \u65cb\u8f6c\u77eb\u6b63 \u00b6 \u88c1\u526a1/16 \u00b6 \u7531\u4e8e\u6574\u5f20\u56fe\u5c3a\u5bf8\u8fc7\u5927\uff0c\u6240\u4ee5\u8fdb\u884c\u88c1\u526a\uff0c\u9009\u53d6\u6700\u6613\u8bc6\u522b\u7684\u4e00\u5c0f\u5757\u8fdb\u884c\u65cb\u8f6c\u77eb\u6b63\uff0c\u8fdb\u800c\u53cd\u5e94\u6574\u5f20\u56fe\u50cf\u7684\u503e\u659c\u89d2\u3002 \u5085\u91cc\u53f6\u53d8\u6362 \u00b6 \u77eb\u6b63\u7b56\u7565\u91c7\u53d6\u4e8c\u7ef4\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u529f\u7387\u8c31\u4e2d \u6700\u4eae\u7684\u70b9 \u4ee3\u8868\u5305\u542b \u6210\u5206\u6700\u591a\u7684\u5e73\u9762\u6ce2 \uff0c \u4e0e\u539f\u70b9\u6240\u6784\u6210\u7684\u5411\u91cf \u5373\u4e3a\u8be5\u5e73\u9762 \u6ce2\u4f20\u64ad\u65b9\u5411 \uff0c \u4e0e\u539f\u70b9\u8ddd\u79bb \u5373\u4e3a \u9891\u7387 \u3002\u9891\u79fb\u540e\u7684\u529f\u7387\u8c31\u5448\u4e2d\u5fc3\u5bf9\u79f0 \u8ba1\u7b97\u65cb\u8f6c\u89d2 \u00b6 \u7531\u4e8e\u566a\u58f0\u5f71\u54cd\u6216\u8005\u70b9\u5206\u5e03\u5f71\u54cd\u4f1a\u9020\u6210\u65e0\u6cd5\u51c6\u786e\u5b9a\u4f4d\u6b63\u786e\u5e73\u9762\u6ce2\u4f4d\u7f6e\uff0c\u6211\u91c7\u53d6\u4e86\u5148\u5f52\u4e00\u5316\u539f\u56fe\uff0c\u540e\u4ee560\u00b0\u4e3a\u95f4\u9694\uff0c\u6bcf\u4e2a\u95f4\u9694\u627e\u5230\u6700\u4eae\u7684\u70b9 \u4f46\u662f\u6211\u4eec\u8981\u8fdb\u884c\u65cb\u8f6c\u5c31\u8981\u6311\u9009\u6700\u5c0f\u89d2\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8303\u56f4\u89c4\u5b9a\u5728\u4e2d\u95f4\u516d\u5341\u5ea6\uff0c\u627e\u5230\u7684\u70b9\uff0c\u518d\u4ee5\u5176\u81ea\u8eab\u4e3a\u53c2\u8003\u70b9\uff0c\u52a0\u5165\u5468\u56f4\u7684\u4e00\u90e8\u5206\u70b9 \u6c42\u53d6\u8d28\u5fc3\u4f4d\u7f6e \u8fdb\u884c\u4fee\u6b63\u3002 \u8be5\u70b9\u4e0e\u539f\u70b9\u6784\u6210\u7684\u5411\u91cf\u4e0ey\u8f74\u7684\u5939\u89d2\u5373\u4e3a\u503e\u659c\u89d2 \u3002\u7528 \u6700\u90bb\u8fd1\u63d2\u503c\u6cd5 \u8fdb\u884c\u65cb\u8f6c \u6821\u6b63\u540e\u4e3a\uff1a \u7f51\u683c\u5212\u5206 \u00b6 \u4f7f\u7528\u95f4\u9694\u7ebf\u5206\u5272\u6210\u7684\u683c\u5b50 \u6b63\u516d\u8fb9\u5f62\u7f51\u683c \u6b63\u65b9\u5f62\u7f51\u683c 1 \u4ec5\u4f7f\u7528\u95f4\u9694\u7ebf\u5206\u5272\u6210\u7684\u683c\u5b50 \u00b6 \u5206\u5272\uff1a\u56fe\u50cf\u70b9\u5448\u6b63\u516d\u8fb9\u5f62\u8702\u7a9d\u72b6\u6392\u5e03\uff0c\u6211\u4eec\u89c4\u5b9a\u4ed6\u67093\u6761\u8f74\uff0c\u5c06\u539f\u56fe\u8fdb\u884c\u65cb\u8f6c\u52303\u4e2a\u8f74\u7684\u65b9\u5411\u6cbf\u8f74\u7684\u65b9\u5411\u8fdb\u884c\u6295\u5f71\uff0c\u7531\u4e8e\u70b9\u95f4\u9694\u5f88\u5c0f\uff0c\u5229\u7528\u4e8c\u9636\u5bfc\u6570\u627e\u51fa\u5cf0\u8c37\u5373\u53ef\u5224\u5b9a\u5176\u4e3a\u5206\u5272\u7ebf\uff0c \u753b\u51fa\u5e76\u8fdb\u884c\u9006\u65cb\u8f6c\u5230\u539f\u56fe\uff08\u8fb9\u7f18\u7684\u5904\u7406\u8fd8\u6709\u5f85\u5904\u7406) 2 \u6b63\u516d\u8fb9\u5f62\u7f51\u683c \u00b6 \u56e0\u4e3a \u529f\u7387\u8c31\u7684\u9891\u7387\u53ef\u53cd\u5e94\u51fa\u5468\u671f \uff0c\u53c8\u56e0\u4e3a\u70b9\u7684\u95f4\u9694\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u53d6 \u5b9a\u503c\u8ba1\u7b97 \u7684\u65b9\u6cd5\uff0c \u6839\u636e\u529f\u7387\u8c31\u6240\u542b\u9891\u7387\u6700\u9ad8\u76846\u4e2a\u70b9\u6c42\u5f97 \u5468\u671f \uff0c\u8ba1\u7b97\u5e73\u5747\u503c\uff0c\u6b64\u503c\u56fa\u5b9a\u4e3a \u7f51\u683c\u95f4\u8ddd \u3002\u5e76\u6839\u636e \u6295\u5f71\u6cd5 \u627e\u5230\u4e00\u4e2a\u57fa\u51c6\u70b9\u5b9a\u4e3a\u539f\u70b9\uff0c\u6839\u636e\u6b63\u516d\u8fb9\u5f62\u51e0\u4f55\u5173\u7cfb\uff0c\u753b\u51fa\u7f51\u683c\u3002 3 \u6b63\u65b9\u5f62\u7f51\u683c \u00b6 \u6c34\u5e73\u6295\u5f71\u4e00\u6b21\u627e\u5230\u6a2a\u5411\u95f4\u9694\uff0c \u5947\u6570\u5076\u6570\u884c\u5206\u5f00 \u91cd\u65b0\u5408\u5e76\uff0c\u518d\u8fdb\u884c\u5f00\u64cd\u4f5c\u53bb\u9664\u5206\u5272\u7455\u75b5\uff0c\u7eb5\u5411\u6295\u5f71\u627e\u5230\u7eb5\u5411\u5206\u5272\u7ebf\u3002\u6839\u636e\u51e0\u4f55\u5173\u7cfb\u6620\u5c04\u5230\u539f\u56fe\u540e\u753b\u51fa\u7f51\u683c\u5373\u53ef \u8367\u5149\u68c0\u6d4b\u4e0e\u8ba1\u6570 \u00b6 \u672c\u65b9\u6cd5\u91c7\u7528\u5206\u5272\u4ee5\u540e\u7684\u68c0\u6d4b\u6bcf\u4e2a\u5b50\u683c\u8fdb\u884c\u8367\u5149\u68c0\u6d4b\uff0c\u56e0\u4e3a\u6b63\u65b9\u5f62\u7f51\u683c\u6613\u5206\u5272\uff0c\u6240\u4ee5\u68c0\u6d4b\u57fa\u4e8e\u90fd\u57fa\u4e8e\u6b63\u65b9\u5f62\u7f51\u683c\u3002 \u5c06\u7f51\u683c\u5206\u5272\u6210\u6bcf\u4e2a\u5b50\u683c\uff0c\u56e0\u4e3a\u5206\u5272\u91c7\u53d6\u7684\u904d\u5386\u6295\u5f71\uff0c\u53ef\u80fd\u5206\u5272\u7ebf\u4f1a\u504f\u5c0f\uff0c\u6240\u4ee5\u5212\u5206\u5b50\u683c\u65f6\u5206\u522b\u5411\u4e0b\u548c\u5411\u53f3\u5ef6\u4f38\u4e00\u4e2a\u50cf\u7d20\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u5b50\u683c\u57fa\u4e8e\u5927\u6d25\u7b97\u6cd5\u6c42\u51fa\u81ea\u9002\u5e94\u9608\u503c\u548c\u6700\u5927\u7c7b\u95f4\u65b9\u5dee\uff0c\u4ee5\u6700\u5927\u7c7b\u95f4\u65b9\u5dee\u4e3a\u9608\u503c\u8fdb\u884c\u7b2c\u4e00\u6b21\u7684\u7b5b\u9009\uff0c\u65b9\u5dee\u5c0f\u7684\u8ba4\u4e3a\u65e0\u8367\u5149\uff0c\u4e4b\u540e\u8fdb\u884c\u4e8c\u503c\u5316\uff0c\u518d\u5728\u7f51\u683c\u4e2d\u592e3*3\u533a\u57df\u8fdb\u884c\u767d\u8272\u68c0\u6d4b\uff0c\u5e76\u89c4\u5b9a\u9608\u503c\uff0c\u5982\u679c\u5c0f\u4e8e\u9608\u503c\u5c31\u5224\u5b9a\u4e3a\u53d1\u751f\u6b64\u683c\u88ab\u4e32\u6270\uff0c\u65e0\u8367\u5149\u3002\uff08\u4e4b\u540e\u4e3a\u4e86\u63d0\u9ad8\u7cbe\u5ea6\u5e94\u8be5\u8981\u52a0\u66f4\u591a\u5224\u65ad\u6761\u4ef6\uff0c\u5982\u8fde\u901a\u57df\u9762\u79ef\u548c\u8fde\u901a\u57df\u8d28\u5fc3\u7b49\u7b49...\uff09 \u4e0b\u56fe\u4e3a\u8bc6\u522b\u6548\u679c\uff1a\uff08\u84dd\u8272\u5212\u7ebf\u4ee3\u8868\u6b64\u7f51\u683c\u6709\u8367\u5149\uff09 \u6700\u7ec8\u524d\u540e\u5904\u7406\u5bf9\u6bd4 \u00b6 \u6ce8\u91ca \u00b6 \u5085\u91cc\u53f6\u53d8\u6362 \uff08\u8f6c\u8f7d\u81ea\u5404\u5927\u7f51\u9875\u539f\u8c05\u6211\u8bb0\u4e0d\u6e05\u695a\u4e86 \uff09 \u00b6 \u5085\u7acb\u53f6\u53d8\u6362\u4f7f\u6211\u4eec\u80fd\u901a\u8fc7\u9891\u7387\u6210\u5206\u6765\u5206\u6790\u4e00\u4e2a\u51fd\u6570\u3002\u56fe\u50cf\u5085\u7acb\u53f6\u53d8\u6362\u7684\u7269\u7406\u610f\u4e49\u56fe\u50cf\u7684\u9891\u7387\u662f\u8868\u5f81 \u56fe\u50cf\u4e2d\u7070\u5ea6\u53d8\u5316\u5267\u70c8\u7a0b\u5ea6\u7684\u6307\u6807 \uff0c\u662f\u7070\u5ea6\u5728\u5e73\u9762\u7a7a\u95f4\u4e0a\u7684\u68af\u5ea6\u3002\u5982\uff1a\u5927\u9762\u79ef\u7684\u6c99\u6f20\u5728\u56fe\u50cf\u4e2d\u662f\u4e00\u7247\u7070\u5ea6\u53d8\u5316\u7f13\u6162\u7684\u533a\u57df\uff0c\u5bf9\u5e94\u7684\u9891\u7387\u503c\u5f88\u4f4e\uff1b\u800c\u5bf9\u4e8e\u5730\u8868\u5c5e\u6027\u53d8\u6362\u5267\u70c8\u7684\u8fb9\u7f18\u533a\u57df\u5728\u56fe\u50cf\u4e2d\u662f\u4e00\u7247\u7070\u5ea6\u53d8\u5316\u5267\u70c8\u7684\u533a\u57df\uff0c\u5bf9\u5e94\u7684\u9891\u7387\u503c\u8f83\u9ad8\u3002 \u5085\u7acb\u53f6\u53d8\u6362\u5728\u5b9e\u9645\u4e2d\u6709\u975e\u5e38\u660e\u663e\u7684\u7269\u7406\u610f\u4e49\uff0c\u8bbef\u662f\u4e00\u4e2a\u80fd\u91cf\u6709\u9650\u7684\u6a21\u62df\u4fe1\u53f7\uff0c\u5219\u5176\u5085\u7acb\u53f6\u53d8\u6362\u5c31\u8868\u793af\u7684\u8c31\u3002\u4ece\u7eaf\u7cb9\u7684\u6570\u5b66\u610f\u4e49\u4e0a\u770b\uff0c\u5085\u7acb\u53f6\u53d8\u6362\u662f\u5c06\u4e00\u4e2a\u51fd\u6570\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u5468\u671f\u51fd\u6570\u6765\u5904\u7406\u7684\u3002\u4ece\u7269\u7406\u6548\u679c\u770b\uff0c\u5085\u7acb\u53f6\u53d8\u6362\u662f\u5c06\u56fe\u50cf\u4ece\u7a7a\u95f4\u57df\u8f6c\u6362\u5230\u9891\u7387\u57df\uff0c\u5176\u9006\u53d8\u6362\u662f\u5c06\u56fe\u50cf\u4ece\u9891\u7387\u57df\u8f6c\u6362\u5230\u7a7a\u95f4\u57df\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c \u5085\u7acb\u53f6\u53d8\u6362\u7684\u7269\u7406\u610f\u4e49\u662f\u5c06\u56fe\u50cf\u7684\u7070\u5ea6\u5206\u5e03\u51fd\u6570\u53d8\u6362\u4e3a\u56fe\u50cf\u7684\u9891\u7387\u5206\u5e03\u51fd\u6570\uff0c\u5085\u7acb\u53f6\u9006\u53d8\u6362\u662f\u5c06\u56fe\u50cf\u7684\u9891\u7387\u5206\u5e03\u51fd\u6570\u53d8\u6362\u4e3a\u7070\u5ea6\u5206\u5e03\u51fd\u6570\u5085\u7acb\u53f6\u53d8\u6362\u4ee5\u524d \uff0c\u56fe\u50cf\uff08\u672a\u538b\u7f29\u7684\u4f4d\u56fe\uff09\u662f\u7531\u5bf9\u5728\u8fde\u7eed\u7a7a\u95f4\uff08\u73b0\u5b9e\u7a7a\u95f4\uff09\u4e0a\u7684\u91c7\u6837\u5f97\u5230\u4e00\u7cfb\u5217\u70b9\u7684\u96c6\u5408\uff0c\u6211\u4eec\u4e60\u60ef\u7528\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\u8868\u793a\u7a7a\u95f4\u4e0a\u5404\u70b9\uff0c\u5219\u56fe\u50cf\u53ef\u7531z=f(x,y)\u6765\u8868\u793a\u3002 \u7531\u4e8e\u7a7a\u95f4\u662f\u4e09\u7ef4\u7684\uff0c\u56fe\u50cf\u662f\u4e8c\u7ef4\u7684\uff0c\u56e0\u6b64\u7a7a\u95f4\u4e2d\u7269\u4f53\u5728\u53e6\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u5173\u7cfb\u5c31\u7531\u68af\u5ea6\u6765\u8868\u793a\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u56fe\u50cf\u5f97\u77e5\u7269\u4f53\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u4e3a\u4ec0\u4e48\u8981\u63d0\u68af\u5ea6\uff1f\u56e0\u4e3a\u5b9e\u9645\u4e0a\u5bf9\u56fe\u50cf\u8fdb\u884c\u4e8c\u7ef4\u5085\u7acb\u53f6\u53d8\u6362\u5f97\u5230\u9891\u8c31\u56fe\uff0c\u5c31\u662f\u56fe\u50cf\u68af\u5ea6\u7684\u5206\u5e03\u56fe\uff0c\u5f53\u7136\u9891\u8c31\u56fe\u4e0a\u7684\u5404\u70b9\u4e0e\u56fe\u50cf\u4e0a\u5404\u70b9\u5e76\u4e0d\u5b58\u5728\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u5373\u4f7f\u5728\u4e0d\u79fb\u9891\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u6ca1\u6709\u3002 \u5085\u7acb\u53f6\u9891\u8c31\u56fe\u4e0a\u6211\u4eec\u770b\u5230\u7684\u660e\u6697\u4e0d\u4e00\u7684\u4eae\u70b9\uff0c\u5b9e\u9645\u4e0a\u56fe\u50cf\u4e0a\u67d0\u4e00\u70b9\u4e0e\u90bb\u57df\u70b9\u5dee\u5f02\u7684\u5f3a\u5f31\uff0c\u5373\u68af\u5ea6\u7684\u5927\u5c0f\uff0c\u4e5f\u5373\u8be5\u70b9\u7684\u9891\u7387\u7684\u5927\u5c0f\uff08\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff0c\u56fe\u50cf\u4e2d\u7684\u4f4e\u9891\u90e8\u5206\u6307\u4f4e\u68af\u5ea6\u7684\u70b9\uff0c\u9ad8\u9891\u90e8\u5206\u76f8\u53cd\uff09 \u3002\u4e00\u822c\u6765\u8bb2\uff0c \u68af\u5ea6\u5927\u5219\u8be5\u70b9\u7684\u4eae\u5ea6\u5f3a\uff0c\u5426\u5219\u8be5\u70b9\u4eae\u5ea6\u5f31 \u3002 \u8fd9\u6837\u901a\u8fc7\u89c2\u5bdf\u5085\u7acb\u53f6\u53d8\u6362\u540e\u7684\u9891\u8c31\u56fe\uff0c\u4e5f\u53eb\u529f\u7387\u56fe\uff0c\u6211\u4eec\u9996\u5148\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c\u56fe\u50cf\u7684\u80fd\u91cf\u5206\u5e03\u3002 \u5982\u679c\u9891\u8c31\u56fe\u4e2d\u6697\u7684\u70b9\u6570\u66f4\u591a\uff0c\u90a3\u4e48\u5b9e\u9645\u56fe\u50cf\u662f\u6bd4\u8f83\u67d4\u548c\u7684\uff08\u56e0\u4e3a\u5404\u70b9\u4e0e\u90bb\u57df\u5dee\u5f02\u90fd\u4e0d\u5927\uff0c\u68af\u5ea6\u76f8\u5bf9\u8f83\u5c0f\uff09\uff0c\u53cd\u4e4b\uff0c\u5982\u679c\u9891\u8c31\u56fe\u4e2d\u4eae\u7684\u70b9\u6570\u591a\uff0c\u90a3\u4e48\u5b9e\u9645\u56fe\u50cf\u4e00\u5b9a\u662f\u5c16\u9510\u7684\uff0c\u8fb9\u754c\u5206\u660e\u4e14\u8fb9\u754c\u4e24\u8fb9\u50cf\u7d20\u5dee\u5f02\u8f83\u5927\u7684\u3002 \u5bf9\u9891\u8c31\u79fb\u9891\u5230\u539f\u70b9\u4ee5\u540e\uff0c\u53ef\u4ee5\u770b\u51fa\u56fe\u50cf\u7684\u9891\u7387\u5206\u5e03\u662f\u4ee5\u539f\u70b9\u4e3a\u5706\u5fc3\uff0c\u5bf9\u79f0\u5206\u5e03\u7684\u3002\u5c06\u9891\u8c31\u79fb\u9891\u5230\u5706\u5fc3\u9664\u4e86\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u51fa\u56fe\u50cf\u9891\u7387\u5206\u5e03\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff0c \u5b83\u53ef\u4ee5\u5206\u79bb\u51fa\u6709\u5468\u671f\u6027\u89c4\u5f8b\u7684\u5e72\u6270\u4fe1\u53f7 \uff0c\u6bd4\u5982\u6b63\u5f26\u5e72\u6270\uff0c\u4e00\u526f\u5e26\u6709\u6b63\u5f26\u5e72\u6270\uff0c\u79fb\u9891\u5230\u539f\u70b9\u7684\u9891\u8c31\u56fe\u4e0a\u53ef\u4ee5\u770b\u51fa\u9664\u4e86\u4e2d\u5fc3\u4ee5\u5916\u8fd8\u5b58\u5728\u4ee5\u67d0\u4e00\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u5bf9\u79f0\u5206\u5e03\u7684\u4eae\u70b9\u96c6\u5408\uff0c\u8fd9\u4e2a\u96c6\u5408\u5c31\u662f\u5e72\u6270\u566a\u97f3\u4ea7\u751f\u7684\uff0c\u8fd9\u65f6\u53ef\u4ee5\u5f88\u76f4\u89c2\u7684\u901a\u8fc7\u5728\u8be5\u4f4d\u7f6e\u653e\u7f6e\u5e26\u963b\u6ee4\u6ce2\u5668\u6d88\u9664\u5e72\u6270 \u53e6\u5916\u6211\u8fd8\u60f3\u8bf4\u660e\u4ee5\u4e0b\u51e0\u70b9\uff1a1\u3001\u56fe\u50cf\u7ecf\u8fc7\u4e8c\u7ef4\u5085\u7acb\u53f6\u53d8\u6362\u540e\uff0c\u5176\u53d8\u6362\u7cfb\u6570\u77e9\u9635\u8868\u660e\uff1a\u82e5\u53d8\u6362\u77e9\u9635Fn\u539f\u70b9\u8bbe\u5728\u4e2d\u5fc3\uff0c\u5176\u9891\u8c31\u80fd\u91cf\u96c6\u4e2d\u5206\u5e03\u5728\u53d8\u6362\u7cfb\u6570\u77ed\u9635\u7684\u4e2d\u5fc3\u9644\u8fd1(\u56fe\u4e2d\u9634\u5f71\u533a)\u3002\u82e5\u6240\u7528\u7684\u4e8c\u7ef4\u5085\u7acb\u53f6\u53d8\u6362\u77e9\u9635Fn\u7684\u539f\u70b9\u8bbe\u5728\u5de6\u4e0a\u89d2\uff0c\u90a3\u4e48\u56fe\u50cf\u4fe1\u53f7\u80fd\u91cf\u5c06\u96c6\u4e2d\u5728\u7cfb\u6570\u77e9\u9635\u7684\u56db\u4e2a\u89d2\u4e0a\u3002\u8fd9\u662f\u7531\u4e8c\u7ef4\u5085\u7acb\u53f6\u53d8\u6362\u672c\u8eab\u6027\u8d28\u51b3\u5b9a\u7684\u3002\u540c\u65f6\u4e5f\u8868\u660e\u4e00\u80a1\u56fe\u50cf\u80fd\u91cf\u96c6\u4e2d\u4f4e\u9891\u533a\u57df\u30022 \u3001\u53d8\u6362\u4e4b\u540e\u7684\u56fe\u50cf\u5728\u539f\u70b9\u5e73\u79fb\u4e4b\u524d\u56db\u89d2\u662f\u4f4e\u9891\uff0c\u6700\u4eae\uff0c\u5e73\u79fb\u4e4b\u540e\u4e2d\u95f4\u90e8\u5206\u662f\u4f4e\u9891\uff0c\u6700\u4eae\uff0c\u4eae\u5ea6\u5927\u8bf4\u660e\u4f4e\u9891\u7684\u80fd\u91cf\u5927\uff08\u5e45\u89d2\u6bd4\u8f83\u5927\uff09 \u7c7b\u6bd4\u4e00\u7ef4\u4e2d\uff0c\u5e45\u5ea6\u548c\u76f8\u4f4d\u53ef\u4ee5\u7528\u4e00\u4e2a\u590d\u6570\u8868\u793a\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u6211\u4eec\u5b58\u50a8\u7684\u5185\u5bb9\u3002\u4f46\u662f\u8fd8\u6709\u4e24\u4e2a\uff1a \u9891\u7387\u548c\u65b9\u5411 \u3002\u8fd9\u65f6\u60f3\u5230\u5411\u91cf\u662f\u6709\u65b9\u5411\u7684\uff0c\u4e5f\u662f\u6709\u957f\u5ea6\u7684\u3002\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2a\u4e8c\u7ef4\u7684\u77e9\u9635\u7684\u6765\u4fdd\u5b58\u5206\u89e3\u4e4b\u540e\u5f97\u5230\u7684\u4fe1\u606f\u3002\u8fd9\u4e2a\u77e9\u9635\u5c31\u662fK\u7a7a\u95f4\u3002\uff08\u4e00\u822c\u7528k\u6765\u8868\u793a\u7a7a\u95f4\u9891\u7387\uff0c\u5355\u4f4d\u662f1/m\uff09 \u4ec0\u4e48\u610f\u601d\u5462\uff1f \u5c31\u662f\u8bf4\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\u70b9\u4ee3\u8868\u8fd9\u4e2a\u5e73\u9762\u6ce2\u7684\u6cd5\u5411\u91cf\uff0c\u8fd9\u4e2a\u5411\u91cf\u7684\u6a21\u4ee3\u8868\u8fd9\u4e2a\u5e73\u9762\u6ce2\u7684\u9891\u7387\uff0c\u8fd9\u4e2a\u70b9\u91cc\u9762\u4fdd\u5b58\u7684\u5185\u5bb9\u590d\u6570\u5c31\u662f\u6b64\u5e73\u9762\u6ce2\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u3002","title":"\u86cb\u767d\u8d28\u8367\u5149\u9635\u5217\u77eb\u6b63\u4e0e\u8ba1\u6570"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_1","text":"\u4ee3\u7801\u94fe\u63a5\uff1a https://gitee.com/cocoon-storage/spot_detect","title":"\u86cb\u767d\u8d28\u8367\u5149\u9635\u5217\u77eb\u6b63\u4e0e\u8bc6\u522b\u8ba1\u6570\u65b9\u6848"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_2","text":"","title":"\u524d\u671f\u51c6\u5907"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_3","text":"\u76ee\u6807\u7279\u5f81\uff1a \u5c0f\u76ee\u6807\uff0c\u5bc6\u96c6\uff0c\u56fe\u50cf\u5206\u8fa9\u7387\u9ad8 \u9002\u7528\u7f51\u7edc\uff1ayolov5 1\uff0c\u8be5\u7f51\u7edc\u53ef\u4ee5\u89c4\u5b9a\u8f93\u5165\u56fe\u50cf\u5927\u5c0f\uff0c\u53ef\u4ee5\u4fdd\u6301\u9ad8\u5206\u8fa8\u7387\u8f93\u5165 2\uff0c\u8bad\u7ec3\u4e4b\u524d\u4f1a\u8fdb\u884ckmeans\u5bf9\u951a\u6846\u805a\u7c7b\uff0c\u8367\u5149\u70b9\u5927\u5c0f\u53d8\u5316\u4e0d\u5927 3\uff0c\u6709FPN,SPP\u591a\u7279\u5f81\u878d\u5408\u4ee5\u9632\u635f\u5931\u4fe1\u606f \u4fee\u6539\uff1a \u9884\u6d4b\u65f6\u5c06\u539f\u56fe\u5206\u6210256\u4efd\u9001\u5165\u7f51\u7edc\u8fdb\u884c\u9884\u6d4b\uff0c\u8fb9\u7f18\u70b9\u8fdb\u884c\u5220\u9664 \u5c06\u8bad\u7ec3\u65f6\u7684mocias\u7b56\u7565\u5220\u9664 \u601d\u8def\uff1a 1\u56fe\u50cf\u6821\u6b63\uff0c\u4f7f\u56fe\u50cf\u4e0e\u56fa\u5b9a\u6a21\u677f\u5339\u914d\u6216\u8005\u5b66\u4e60\u5f97\u5230\u4e00\u4e2a\u6a21\u677f\u3002\u540c\u65f6\u5f97\u5230\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u7528\u4e8e\u540e\u671f\u5750\u6807\u6620\u5c04 2\u88c1\u526a\u56fe\u50cf\uff0c\u6a21\u677f\u5339\u914d\u5bf9\u9f50\uff0c\u5c06\u6bcf\u4e2a\u7f51\u683c\u5316\u4e3a5x5\u62163x3\u62161*1\u964d\u4f4e\u56fe\u50cf\u50cf\u7d20\uff0c\u8f6c\u5316\u65b9\u6cd5\u53ef\u4ee5\u8003\u8651\u9ad8\u65af\u5747\u503c 3\uff081\uff09\u5982\u679c\u4e3a1*1\u5219\u8fdb\u884c\u4e8c\u503c\u5316\uff0c\u7136\u540e\u76f4\u63a5\u5f97\u5230\u70b9\u7684\u5750\u6807\u548c\u8ba1\u6570 \uff082\uff09\u5982\u679c\u4e3a3*3\u53ef\u9009\u62e9\u5377\u79ef\u5b66\u4e60 \u56fe\u50cf\u6821\u6b63: radon\u53d8\u6362\uff08\u659c\u6295\u5f71\uff09 FFT\u5085\u91cc\u53f6\u8f6c\u5316\u5230\u9891\u57df\u540e\u6c42\u89e3 \u5212\u5206\u7f51\u683c\uff1a \u516d\u8fb9\u5f62\u7f51\u683c\uff0c\u7f51\u683c\u5927\u5c0f\u6709\u7ec6\u5fae\u5dee\u522b\uff0c\u4e14\u4e3a\u5c0f\u6570 \u6b63\u65b9\u5f62\u7f51\u683c\uff0c\u7c7b\u4f3c\u7816\u5899 \u7f51\u683c\u5b9a\u4f4d\u7b97\u6cd5 \u722c\u5c71\u6cd5 \u9057\u4f20\u7b97\u6cd5 \u6570\u5b66\u5f62\u6001\u5b66 \u9a6c\u5c14\u79d1\u592b\u968f\u673a\u7403\u573a \u8d1d\u53f6\u65af\u7f51\u683c\u5b9a\u4f4d \u542f\u53d1\u5f0f\u89c4\u5219\u7b97\u6cd5 \u4fee\u6b63\u50cf\u7d20 \u95ee\u9898\uff1a \u65cb\u8f6c\u89d2\u5ea6\u4fee\u6b63\uff0c\u5f97\u52306\u4e2a\u89d2\u5ea6\u600e\u4e48\u5f97\u5230\u6700\u4f73\u65cb\u8f6c\u89d2\u5ea6 \u6295\u5f71\u8fb9\u754c\u5f97\u5230\u7684\u5206\u5272\u7ebf\u6709\u95ee\u9898\uff0c\u8981\u600e\u4e48\u5229\u7528\u4e2d\u95f4\u5f97\u5230\u7684\u95f4\u9694\u3002a:\u6c42\u5e73\u5747\u6295\u5f71\u503c \u5206\u5272\u540e\u5728\u5c0f\u5757\u5185\u505a\u81ea\u9002\u5e94\u9608\u503c\u5904\u7406","title":"\u601d\u8def\uff1a\u6df1\u5ea6\u5b66\u4e60\uff08\u820d\u5f03\uff09"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_4","text":"\u672c\u8eab\u56fe\u7247\u8d28\u91cf\u8f83\u9ad8\uff0c\u91c7\u53d6\u9884\u5904\u7406\u7b56\u7565\u662f \u4e2d\u503c\u6ee4\u6ce2+otsu\u81ea\u9002\u5e94\u9608\u503c\u4e8c\u503c\u5316","title":"\u56fe\u50cf\u9884\u5904\u7406\uff08\u5b9e\u64cd\u5f00\u59cb\uff09"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_5","text":"","title":"\u65cb\u8f6c\u77eb\u6b63"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#116","text":"\u7531\u4e8e\u6574\u5f20\u56fe\u5c3a\u5bf8\u8fc7\u5927\uff0c\u6240\u4ee5\u8fdb\u884c\u88c1\u526a\uff0c\u9009\u53d6\u6700\u6613\u8bc6\u522b\u7684\u4e00\u5c0f\u5757\u8fdb\u884c\u65cb\u8f6c\u77eb\u6b63\uff0c\u8fdb\u800c\u53cd\u5e94\u6574\u5f20\u56fe\u50cf\u7684\u503e\u659c\u89d2\u3002","title":"\u88c1\u526a1/16"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_6","text":"\u77eb\u6b63\u7b56\u7565\u91c7\u53d6\u4e8c\u7ef4\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u529f\u7387\u8c31\u4e2d \u6700\u4eae\u7684\u70b9 \u4ee3\u8868\u5305\u542b \u6210\u5206\u6700\u591a\u7684\u5e73\u9762\u6ce2 \uff0c \u4e0e\u539f\u70b9\u6240\u6784\u6210\u7684\u5411\u91cf \u5373\u4e3a\u8be5\u5e73\u9762 \u6ce2\u4f20\u64ad\u65b9\u5411 \uff0c \u4e0e\u539f\u70b9\u8ddd\u79bb \u5373\u4e3a \u9891\u7387 \u3002\u9891\u79fb\u540e\u7684\u529f\u7387\u8c31\u5448\u4e2d\u5fc3\u5bf9\u79f0","title":"\u5085\u91cc\u53f6\u53d8\u6362"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_7","text":"\u7531\u4e8e\u566a\u58f0\u5f71\u54cd\u6216\u8005\u70b9\u5206\u5e03\u5f71\u54cd\u4f1a\u9020\u6210\u65e0\u6cd5\u51c6\u786e\u5b9a\u4f4d\u6b63\u786e\u5e73\u9762\u6ce2\u4f4d\u7f6e\uff0c\u6211\u91c7\u53d6\u4e86\u5148\u5f52\u4e00\u5316\u539f\u56fe\uff0c\u540e\u4ee560\u00b0\u4e3a\u95f4\u9694\uff0c\u6bcf\u4e2a\u95f4\u9694\u627e\u5230\u6700\u4eae\u7684\u70b9 \u4f46\u662f\u6211\u4eec\u8981\u8fdb\u884c\u65cb\u8f6c\u5c31\u8981\u6311\u9009\u6700\u5c0f\u89d2\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8303\u56f4\u89c4\u5b9a\u5728\u4e2d\u95f4\u516d\u5341\u5ea6\uff0c\u627e\u5230\u7684\u70b9\uff0c\u518d\u4ee5\u5176\u81ea\u8eab\u4e3a\u53c2\u8003\u70b9\uff0c\u52a0\u5165\u5468\u56f4\u7684\u4e00\u90e8\u5206\u70b9 \u6c42\u53d6\u8d28\u5fc3\u4f4d\u7f6e \u8fdb\u884c\u4fee\u6b63\u3002 \u8be5\u70b9\u4e0e\u539f\u70b9\u6784\u6210\u7684\u5411\u91cf\u4e0ey\u8f74\u7684\u5939\u89d2\u5373\u4e3a\u503e\u659c\u89d2 \u3002\u7528 \u6700\u90bb\u8fd1\u63d2\u503c\u6cd5 \u8fdb\u884c\u65cb\u8f6c \u6821\u6b63\u540e\u4e3a\uff1a","title":"\u8ba1\u7b97\u65cb\u8f6c\u89d2"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_8","text":"\u4f7f\u7528\u95f4\u9694\u7ebf\u5206\u5272\u6210\u7684\u683c\u5b50 \u6b63\u516d\u8fb9\u5f62\u7f51\u683c \u6b63\u65b9\u5f62\u7f51\u683c","title":"\u7f51\u683c\u5212\u5206"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#1","text":"\u5206\u5272\uff1a\u56fe\u50cf\u70b9\u5448\u6b63\u516d\u8fb9\u5f62\u8702\u7a9d\u72b6\u6392\u5e03\uff0c\u6211\u4eec\u89c4\u5b9a\u4ed6\u67093\u6761\u8f74\uff0c\u5c06\u539f\u56fe\u8fdb\u884c\u65cb\u8f6c\u52303\u4e2a\u8f74\u7684\u65b9\u5411\u6cbf\u8f74\u7684\u65b9\u5411\u8fdb\u884c\u6295\u5f71\uff0c\u7531\u4e8e\u70b9\u95f4\u9694\u5f88\u5c0f\uff0c\u5229\u7528\u4e8c\u9636\u5bfc\u6570\u627e\u51fa\u5cf0\u8c37\u5373\u53ef\u5224\u5b9a\u5176\u4e3a\u5206\u5272\u7ebf\uff0c \u753b\u51fa\u5e76\u8fdb\u884c\u9006\u65cb\u8f6c\u5230\u539f\u56fe\uff08\u8fb9\u7f18\u7684\u5904\u7406\u8fd8\u6709\u5f85\u5904\u7406)","title":"1 \u4ec5\u4f7f\u7528\u95f4\u9694\u7ebf\u5206\u5272\u6210\u7684\u683c\u5b50"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#2","text":"\u56e0\u4e3a \u529f\u7387\u8c31\u7684\u9891\u7387\u53ef\u53cd\u5e94\u51fa\u5468\u671f \uff0c\u53c8\u56e0\u4e3a\u70b9\u7684\u95f4\u9694\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u53d6 \u5b9a\u503c\u8ba1\u7b97 \u7684\u65b9\u6cd5\uff0c \u6839\u636e\u529f\u7387\u8c31\u6240\u542b\u9891\u7387\u6700\u9ad8\u76846\u4e2a\u70b9\u6c42\u5f97 \u5468\u671f \uff0c\u8ba1\u7b97\u5e73\u5747\u503c\uff0c\u6b64\u503c\u56fa\u5b9a\u4e3a \u7f51\u683c\u95f4\u8ddd \u3002\u5e76\u6839\u636e \u6295\u5f71\u6cd5 \u627e\u5230\u4e00\u4e2a\u57fa\u51c6\u70b9\u5b9a\u4e3a\u539f\u70b9\uff0c\u6839\u636e\u6b63\u516d\u8fb9\u5f62\u51e0\u4f55\u5173\u7cfb\uff0c\u753b\u51fa\u7f51\u683c\u3002","title":"2 \u6b63\u516d\u8fb9\u5f62\u7f51\u683c"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#3","text":"\u6c34\u5e73\u6295\u5f71\u4e00\u6b21\u627e\u5230\u6a2a\u5411\u95f4\u9694\uff0c \u5947\u6570\u5076\u6570\u884c\u5206\u5f00 \u91cd\u65b0\u5408\u5e76\uff0c\u518d\u8fdb\u884c\u5f00\u64cd\u4f5c\u53bb\u9664\u5206\u5272\u7455\u75b5\uff0c\u7eb5\u5411\u6295\u5f71\u627e\u5230\u7eb5\u5411\u5206\u5272\u7ebf\u3002\u6839\u636e\u51e0\u4f55\u5173\u7cfb\u6620\u5c04\u5230\u539f\u56fe\u540e\u753b\u51fa\u7f51\u683c\u5373\u53ef","title":"3 \u6b63\u65b9\u5f62\u7f51\u683c"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_9","text":"\u672c\u65b9\u6cd5\u91c7\u7528\u5206\u5272\u4ee5\u540e\u7684\u68c0\u6d4b\u6bcf\u4e2a\u5b50\u683c\u8fdb\u884c\u8367\u5149\u68c0\u6d4b\uff0c\u56e0\u4e3a\u6b63\u65b9\u5f62\u7f51\u683c\u6613\u5206\u5272\uff0c\u6240\u4ee5\u68c0\u6d4b\u57fa\u4e8e\u90fd\u57fa\u4e8e\u6b63\u65b9\u5f62\u7f51\u683c\u3002 \u5c06\u7f51\u683c\u5206\u5272\u6210\u6bcf\u4e2a\u5b50\u683c\uff0c\u56e0\u4e3a\u5206\u5272\u91c7\u53d6\u7684\u904d\u5386\u6295\u5f71\uff0c\u53ef\u80fd\u5206\u5272\u7ebf\u4f1a\u504f\u5c0f\uff0c\u6240\u4ee5\u5212\u5206\u5b50\u683c\u65f6\u5206\u522b\u5411\u4e0b\u548c\u5411\u53f3\u5ef6\u4f38\u4e00\u4e2a\u50cf\u7d20\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u5b50\u683c\u57fa\u4e8e\u5927\u6d25\u7b97\u6cd5\u6c42\u51fa\u81ea\u9002\u5e94\u9608\u503c\u548c\u6700\u5927\u7c7b\u95f4\u65b9\u5dee\uff0c\u4ee5\u6700\u5927\u7c7b\u95f4\u65b9\u5dee\u4e3a\u9608\u503c\u8fdb\u884c\u7b2c\u4e00\u6b21\u7684\u7b5b\u9009\uff0c\u65b9\u5dee\u5c0f\u7684\u8ba4\u4e3a\u65e0\u8367\u5149\uff0c\u4e4b\u540e\u8fdb\u884c\u4e8c\u503c\u5316\uff0c\u518d\u5728\u7f51\u683c\u4e2d\u592e3*3\u533a\u57df\u8fdb\u884c\u767d\u8272\u68c0\u6d4b\uff0c\u5e76\u89c4\u5b9a\u9608\u503c\uff0c\u5982\u679c\u5c0f\u4e8e\u9608\u503c\u5c31\u5224\u5b9a\u4e3a\u53d1\u751f\u6b64\u683c\u88ab\u4e32\u6270\uff0c\u65e0\u8367\u5149\u3002\uff08\u4e4b\u540e\u4e3a\u4e86\u63d0\u9ad8\u7cbe\u5ea6\u5e94\u8be5\u8981\u52a0\u66f4\u591a\u5224\u65ad\u6761\u4ef6\uff0c\u5982\u8fde\u901a\u57df\u9762\u79ef\u548c\u8fde\u901a\u57df\u8d28\u5fc3\u7b49\u7b49...\uff09 \u4e0b\u56fe\u4e3a\u8bc6\u522b\u6548\u679c\uff1a\uff08\u84dd\u8272\u5212\u7ebf\u4ee3\u8868\u6b64\u7f51\u683c\u6709\u8367\u5149\uff09","title":"\u8367\u5149\u68c0\u6d4b\u4e0e\u8ba1\u6570"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_10","text":"","title":"\u6700\u7ec8\u524d\u540e\u5904\u7406\u5bf9\u6bd4"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_11","text":"","title":"\u6ce8\u91ca"},{"location":"%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E8%8D%A7%E5%85%89%E9%98%B5%E5%88%97%E7%9F%AB%E6%AD%A3%E8%AE%A1%E6%95%B0/#_12","text":"\u5085\u7acb\u53f6\u53d8\u6362\u4f7f\u6211\u4eec\u80fd\u901a\u8fc7\u9891\u7387\u6210\u5206\u6765\u5206\u6790\u4e00\u4e2a\u51fd\u6570\u3002\u56fe\u50cf\u5085\u7acb\u53f6\u53d8\u6362\u7684\u7269\u7406\u610f\u4e49\u56fe\u50cf\u7684\u9891\u7387\u662f\u8868\u5f81 \u56fe\u50cf\u4e2d\u7070\u5ea6\u53d8\u5316\u5267\u70c8\u7a0b\u5ea6\u7684\u6307\u6807 \uff0c\u662f\u7070\u5ea6\u5728\u5e73\u9762\u7a7a\u95f4\u4e0a\u7684\u68af\u5ea6\u3002\u5982\uff1a\u5927\u9762\u79ef\u7684\u6c99\u6f20\u5728\u56fe\u50cf\u4e2d\u662f\u4e00\u7247\u7070\u5ea6\u53d8\u5316\u7f13\u6162\u7684\u533a\u57df\uff0c\u5bf9\u5e94\u7684\u9891\u7387\u503c\u5f88\u4f4e\uff1b\u800c\u5bf9\u4e8e\u5730\u8868\u5c5e\u6027\u53d8\u6362\u5267\u70c8\u7684\u8fb9\u7f18\u533a\u57df\u5728\u56fe\u50cf\u4e2d\u662f\u4e00\u7247\u7070\u5ea6\u53d8\u5316\u5267\u70c8\u7684\u533a\u57df\uff0c\u5bf9\u5e94\u7684\u9891\u7387\u503c\u8f83\u9ad8\u3002 \u5085\u7acb\u53f6\u53d8\u6362\u5728\u5b9e\u9645\u4e2d\u6709\u975e\u5e38\u660e\u663e\u7684\u7269\u7406\u610f\u4e49\uff0c\u8bbef\u662f\u4e00\u4e2a\u80fd\u91cf\u6709\u9650\u7684\u6a21\u62df\u4fe1\u53f7\uff0c\u5219\u5176\u5085\u7acb\u53f6\u53d8\u6362\u5c31\u8868\u793af\u7684\u8c31\u3002\u4ece\u7eaf\u7cb9\u7684\u6570\u5b66\u610f\u4e49\u4e0a\u770b\uff0c\u5085\u7acb\u53f6\u53d8\u6362\u662f\u5c06\u4e00\u4e2a\u51fd\u6570\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u5468\u671f\u51fd\u6570\u6765\u5904\u7406\u7684\u3002\u4ece\u7269\u7406\u6548\u679c\u770b\uff0c\u5085\u7acb\u53f6\u53d8\u6362\u662f\u5c06\u56fe\u50cf\u4ece\u7a7a\u95f4\u57df\u8f6c\u6362\u5230\u9891\u7387\u57df\uff0c\u5176\u9006\u53d8\u6362\u662f\u5c06\u56fe\u50cf\u4ece\u9891\u7387\u57df\u8f6c\u6362\u5230\u7a7a\u95f4\u57df\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c \u5085\u7acb\u53f6\u53d8\u6362\u7684\u7269\u7406\u610f\u4e49\u662f\u5c06\u56fe\u50cf\u7684\u7070\u5ea6\u5206\u5e03\u51fd\u6570\u53d8\u6362\u4e3a\u56fe\u50cf\u7684\u9891\u7387\u5206\u5e03\u51fd\u6570\uff0c\u5085\u7acb\u53f6\u9006\u53d8\u6362\u662f\u5c06\u56fe\u50cf\u7684\u9891\u7387\u5206\u5e03\u51fd\u6570\u53d8\u6362\u4e3a\u7070\u5ea6\u5206\u5e03\u51fd\u6570\u5085\u7acb\u53f6\u53d8\u6362\u4ee5\u524d \uff0c\u56fe\u50cf\uff08\u672a\u538b\u7f29\u7684\u4f4d\u56fe\uff09\u662f\u7531\u5bf9\u5728\u8fde\u7eed\u7a7a\u95f4\uff08\u73b0\u5b9e\u7a7a\u95f4\uff09\u4e0a\u7684\u91c7\u6837\u5f97\u5230\u4e00\u7cfb\u5217\u70b9\u7684\u96c6\u5408\uff0c\u6211\u4eec\u4e60\u60ef\u7528\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\u8868\u793a\u7a7a\u95f4\u4e0a\u5404\u70b9\uff0c\u5219\u56fe\u50cf\u53ef\u7531z=f(x,y)\u6765\u8868\u793a\u3002 \u7531\u4e8e\u7a7a\u95f4\u662f\u4e09\u7ef4\u7684\uff0c\u56fe\u50cf\u662f\u4e8c\u7ef4\u7684\uff0c\u56e0\u6b64\u7a7a\u95f4\u4e2d\u7269\u4f53\u5728\u53e6\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u5173\u7cfb\u5c31\u7531\u68af\u5ea6\u6765\u8868\u793a\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u56fe\u50cf\u5f97\u77e5\u7269\u4f53\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u4e3a\u4ec0\u4e48\u8981\u63d0\u68af\u5ea6\uff1f\u56e0\u4e3a\u5b9e\u9645\u4e0a\u5bf9\u56fe\u50cf\u8fdb\u884c\u4e8c\u7ef4\u5085\u7acb\u53f6\u53d8\u6362\u5f97\u5230\u9891\u8c31\u56fe\uff0c\u5c31\u662f\u56fe\u50cf\u68af\u5ea6\u7684\u5206\u5e03\u56fe\uff0c\u5f53\u7136\u9891\u8c31\u56fe\u4e0a\u7684\u5404\u70b9\u4e0e\u56fe\u50cf\u4e0a\u5404\u70b9\u5e76\u4e0d\u5b58\u5728\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u5373\u4f7f\u5728\u4e0d\u79fb\u9891\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u6ca1\u6709\u3002 \u5085\u7acb\u53f6\u9891\u8c31\u56fe\u4e0a\u6211\u4eec\u770b\u5230\u7684\u660e\u6697\u4e0d\u4e00\u7684\u4eae\u70b9\uff0c\u5b9e\u9645\u4e0a\u56fe\u50cf\u4e0a\u67d0\u4e00\u70b9\u4e0e\u90bb\u57df\u70b9\u5dee\u5f02\u7684\u5f3a\u5f31\uff0c\u5373\u68af\u5ea6\u7684\u5927\u5c0f\uff0c\u4e5f\u5373\u8be5\u70b9\u7684\u9891\u7387\u7684\u5927\u5c0f\uff08\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff0c\u56fe\u50cf\u4e2d\u7684\u4f4e\u9891\u90e8\u5206\u6307\u4f4e\u68af\u5ea6\u7684\u70b9\uff0c\u9ad8\u9891\u90e8\u5206\u76f8\u53cd\uff09 \u3002\u4e00\u822c\u6765\u8bb2\uff0c \u68af\u5ea6\u5927\u5219\u8be5\u70b9\u7684\u4eae\u5ea6\u5f3a\uff0c\u5426\u5219\u8be5\u70b9\u4eae\u5ea6\u5f31 \u3002 \u8fd9\u6837\u901a\u8fc7\u89c2\u5bdf\u5085\u7acb\u53f6\u53d8\u6362\u540e\u7684\u9891\u8c31\u56fe\uff0c\u4e5f\u53eb\u529f\u7387\u56fe\uff0c\u6211\u4eec\u9996\u5148\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c\u56fe\u50cf\u7684\u80fd\u91cf\u5206\u5e03\u3002 \u5982\u679c\u9891\u8c31\u56fe\u4e2d\u6697\u7684\u70b9\u6570\u66f4\u591a\uff0c\u90a3\u4e48\u5b9e\u9645\u56fe\u50cf\u662f\u6bd4\u8f83\u67d4\u548c\u7684\uff08\u56e0\u4e3a\u5404\u70b9\u4e0e\u90bb\u57df\u5dee\u5f02\u90fd\u4e0d\u5927\uff0c\u68af\u5ea6\u76f8\u5bf9\u8f83\u5c0f\uff09\uff0c\u53cd\u4e4b\uff0c\u5982\u679c\u9891\u8c31\u56fe\u4e2d\u4eae\u7684\u70b9\u6570\u591a\uff0c\u90a3\u4e48\u5b9e\u9645\u56fe\u50cf\u4e00\u5b9a\u662f\u5c16\u9510\u7684\uff0c\u8fb9\u754c\u5206\u660e\u4e14\u8fb9\u754c\u4e24\u8fb9\u50cf\u7d20\u5dee\u5f02\u8f83\u5927\u7684\u3002 \u5bf9\u9891\u8c31\u79fb\u9891\u5230\u539f\u70b9\u4ee5\u540e\uff0c\u53ef\u4ee5\u770b\u51fa\u56fe\u50cf\u7684\u9891\u7387\u5206\u5e03\u662f\u4ee5\u539f\u70b9\u4e3a\u5706\u5fc3\uff0c\u5bf9\u79f0\u5206\u5e03\u7684\u3002\u5c06\u9891\u8c31\u79fb\u9891\u5230\u5706\u5fc3\u9664\u4e86\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u51fa\u56fe\u50cf\u9891\u7387\u5206\u5e03\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff0c \u5b83\u53ef\u4ee5\u5206\u79bb\u51fa\u6709\u5468\u671f\u6027\u89c4\u5f8b\u7684\u5e72\u6270\u4fe1\u53f7 \uff0c\u6bd4\u5982\u6b63\u5f26\u5e72\u6270\uff0c\u4e00\u526f\u5e26\u6709\u6b63\u5f26\u5e72\u6270\uff0c\u79fb\u9891\u5230\u539f\u70b9\u7684\u9891\u8c31\u56fe\u4e0a\u53ef\u4ee5\u770b\u51fa\u9664\u4e86\u4e2d\u5fc3\u4ee5\u5916\u8fd8\u5b58\u5728\u4ee5\u67d0\u4e00\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u5bf9\u79f0\u5206\u5e03\u7684\u4eae\u70b9\u96c6\u5408\uff0c\u8fd9\u4e2a\u96c6\u5408\u5c31\u662f\u5e72\u6270\u566a\u97f3\u4ea7\u751f\u7684\uff0c\u8fd9\u65f6\u53ef\u4ee5\u5f88\u76f4\u89c2\u7684\u901a\u8fc7\u5728\u8be5\u4f4d\u7f6e\u653e\u7f6e\u5e26\u963b\u6ee4\u6ce2\u5668\u6d88\u9664\u5e72\u6270 \u53e6\u5916\u6211\u8fd8\u60f3\u8bf4\u660e\u4ee5\u4e0b\u51e0\u70b9\uff1a1\u3001\u56fe\u50cf\u7ecf\u8fc7\u4e8c\u7ef4\u5085\u7acb\u53f6\u53d8\u6362\u540e\uff0c\u5176\u53d8\u6362\u7cfb\u6570\u77e9\u9635\u8868\u660e\uff1a\u82e5\u53d8\u6362\u77e9\u9635Fn\u539f\u70b9\u8bbe\u5728\u4e2d\u5fc3\uff0c\u5176\u9891\u8c31\u80fd\u91cf\u96c6\u4e2d\u5206\u5e03\u5728\u53d8\u6362\u7cfb\u6570\u77ed\u9635\u7684\u4e2d\u5fc3\u9644\u8fd1(\u56fe\u4e2d\u9634\u5f71\u533a)\u3002\u82e5\u6240\u7528\u7684\u4e8c\u7ef4\u5085\u7acb\u53f6\u53d8\u6362\u77e9\u9635Fn\u7684\u539f\u70b9\u8bbe\u5728\u5de6\u4e0a\u89d2\uff0c\u90a3\u4e48\u56fe\u50cf\u4fe1\u53f7\u80fd\u91cf\u5c06\u96c6\u4e2d\u5728\u7cfb\u6570\u77e9\u9635\u7684\u56db\u4e2a\u89d2\u4e0a\u3002\u8fd9\u662f\u7531\u4e8c\u7ef4\u5085\u7acb\u53f6\u53d8\u6362\u672c\u8eab\u6027\u8d28\u51b3\u5b9a\u7684\u3002\u540c\u65f6\u4e5f\u8868\u660e\u4e00\u80a1\u56fe\u50cf\u80fd\u91cf\u96c6\u4e2d\u4f4e\u9891\u533a\u57df\u30022 \u3001\u53d8\u6362\u4e4b\u540e\u7684\u56fe\u50cf\u5728\u539f\u70b9\u5e73\u79fb\u4e4b\u524d\u56db\u89d2\u662f\u4f4e\u9891\uff0c\u6700\u4eae\uff0c\u5e73\u79fb\u4e4b\u540e\u4e2d\u95f4\u90e8\u5206\u662f\u4f4e\u9891\uff0c\u6700\u4eae\uff0c\u4eae\u5ea6\u5927\u8bf4\u660e\u4f4e\u9891\u7684\u80fd\u91cf\u5927\uff08\u5e45\u89d2\u6bd4\u8f83\u5927\uff09 \u7c7b\u6bd4\u4e00\u7ef4\u4e2d\uff0c\u5e45\u5ea6\u548c\u76f8\u4f4d\u53ef\u4ee5\u7528\u4e00\u4e2a\u590d\u6570\u8868\u793a\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u6211\u4eec\u5b58\u50a8\u7684\u5185\u5bb9\u3002\u4f46\u662f\u8fd8\u6709\u4e24\u4e2a\uff1a \u9891\u7387\u548c\u65b9\u5411 \u3002\u8fd9\u65f6\u60f3\u5230\u5411\u91cf\u662f\u6709\u65b9\u5411\u7684\uff0c\u4e5f\u662f\u6709\u957f\u5ea6\u7684\u3002\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2a\u4e8c\u7ef4\u7684\u77e9\u9635\u7684\u6765\u4fdd\u5b58\u5206\u89e3\u4e4b\u540e\u5f97\u5230\u7684\u4fe1\u606f\u3002\u8fd9\u4e2a\u77e9\u9635\u5c31\u662fK\u7a7a\u95f4\u3002\uff08\u4e00\u822c\u7528k\u6765\u8868\u793a\u7a7a\u95f4\u9891\u7387\uff0c\u5355\u4f4d\u662f1/m\uff09 \u4ec0\u4e48\u610f\u601d\u5462\uff1f \u5c31\u662f\u8bf4\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\u70b9\u4ee3\u8868\u8fd9\u4e2a\u5e73\u9762\u6ce2\u7684\u6cd5\u5411\u91cf\uff0c\u8fd9\u4e2a\u5411\u91cf\u7684\u6a21\u4ee3\u8868\u8fd9\u4e2a\u5e73\u9762\u6ce2\u7684\u9891\u7387\uff0c\u8fd9\u4e2a\u70b9\u91cc\u9762\u4fdd\u5b58\u7684\u5185\u5bb9\u590d\u6570\u5c31\u662f\u6b64\u5e73\u9762\u6ce2\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u3002","title":"\u5085\u91cc\u53f6\u53d8\u6362 \uff08\u8f6c\u8f7d\u81ea\u5404\u5927\u7f51\u9875\u539f\u8c05\u6211\u8bb0\u4e0d\u6e05\u695a\u4e86\uff09"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/","text":"Daily Paper \u00b6 \u672c\u79d1\u9636\u6bb5\u770b\u8fc7\u7684\u4e00\u90e8\u5206\u8bba\u6587\u7684\u7b14\u8bb0 ~","title":"\u4e13\u680f\u4ecb\u7ecd"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/#daily-paper","text":"\u672c\u79d1\u9636\u6bb5\u770b\u8fc7\u7684\u4e00\u90e8\u5206\u8bba\u6587\u7684\u7b14\u8bb0 ~","title":"Daily Paper"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/CascadeRCNN/","text":"Cascade RCNN\u8bba\u6587\u89e3\u8bfb \u00b6 \u8bba\u6587\u94fe\u63a5\uff1a https://arxiv.org/abs/1712.00726 \u4ee3\u7801\u94fe\u63a5\uff1a https://github.com/zhaoweicai/cascade-rcnn \u524d\u8a00 \u00b6 \u53c2\u8003\u94fe\u63a5\uff1a https://zhuanlan.zhihu.com/p/31426458 RPN \u00b6 \u8c08\u8d77RCNN\u7f51\u7edc\uff0cRPN\u7f51\u7edc\u53ef\u8c13\u4e00\u5927\u7279\u8272\uff0c\u7a76\u5176\u6839\u672c\uff0c\u5c31\u662f\u5728feature map\u4e0a\u6bcf\u4e00\u70b9\u4ea7\u751fanchor\uff0c\u4f7f\u7528cnn\u7f51\u7edc\u53bb\u8fdb\u884c\u80cc\u666for\u76ee\u6807\u7684\u4e8c\u5206\u7c7b \u5173\u6ce8\u5176rpn\u7f51\u7edc\u67b6\u6784 \u5148\u5c06feature map\u8fdb\u884c3 \\times \\times 3\u5377\u79ef\u9001\u5165\u4e4b\u540e\u7684\u4e24\u4e2a\u5206\u652f \u4e0a\u5206\u652f\u8fdb\u884c1 \\times \\times 1\u5377\u79ef\u4f7f\u7ef4\u5ea6\u53d8\u4e3a18\uff089\u4e2aanchor*\u4e8c\u5206\u7c7b\uff09 reshape\u5bf9\u4e8c\u5206\u7c7b\u60c5\u51b5\u505asoftmax\uff0c\u518d\u6062\u590d\u539f\u72b6 \u7531\u6b64\u751f\u6210Proposal ROI Pooling \u00b6 \u5b9e\u73b0\u4f7f\u751f\u6210\u7684\u5019\u9009\u6846region proposal\u6620\u5c04\u4ea7\u751f\u56fa\u5b9a\u5927\u5c0f\u7684feature map\u3002 \u6839\u636e\u8f93\u5165image\uff0c\u5c06\u63d0\u53d6\u7684\u5019\u9009\u6846region proposal\u6620\u5c04\u5230feature map\u7684\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u5f97\u5230ROI\uff1b \u5c06\u6620\u5c04\u540e\u7684ROI\u533a\u57df\u5212\u5206\u4e3a\u76f8\u540c\u5927\u5c0f\u7684\u5757sections\uff08\u5757sections\u7684\u6570\u91cf\u662f\u6211\u4eec\u6307\u5b9a\u7684\uff0c\u5b83\u4e0e\u8f93\u51fa\u7684\u7ef4\u5ea6\u76f8\u540c\uff09\uff1b \u5bf9\u6bcf\u4e2a\u5757sections\u8fdb\u884cmax pooling\u64cd\u4f5c\uff1b Abstract \u00b6 \u68c0\u6d4b\u6027\u80fd\u4f1a\u968f\u7740IOU\u7684\u53d8\u5316\u800c\u6539\u53d8\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2aIOU\u4e0b\u7684\u6700\u4f73\u68c0\u6d4b\u5668\u518d\u53e6\u4e00\u4e2aIOU\u4e0b\u53ef\u80fd\u5c31\u4e0d\u662f\u4e86 Cascade RCNN\u6709\u4e0d\u540cIOU\u7684\u591a\u7ea7\u68c0\u6d4b\u5668\uff0c\u662f\u5bf9\u68c0\u6d4b\u5668\u7684IOU\u8fdb\u884c\u4f18\u5316\u4e3a\u4e0d\u662f\u5bf9\u5047\u9633\u6027\u7387\u7684\u4f18\u5316 \u76ee\u6807\u5bc6\u96c6\uff0c\u9ad8IOU\u4f1a\u5bfc\u81f4\u6b63\u6837\u672c\u6570\u76eee\u6307\u6570\u4e0b\u964d\u5bfc\u81f4\u8fc7\u62df\u5408 \u9ad8\u8d28\u91cf\u68c0\u6d4b\u5668\u53ea\u5bf9\u9ad8\u8d28\u91cfproposal\u6709\u6548\uff0c\u5bf9\u5176\u4ed6\u8d28\u91cf\u5c31\u4e0d\u4e00\u5b9a\u4e86 It consists of a sequence of detectors trained with increasing IoU thresholds, to be sequentially more selective against close false positives. The detectors are trained stage by stage, leveraging the observation that the output of a detector is a good distribution for training the next higher quality detector. Details \u00b6 \u4e0efaster-rcnn\u7684\u533a\u522b \u5176\u4e2db\u4e0ed\u7684\u533a\u522b\u662fcascade\u6bcf\u4e2a\u9636\u6bb5\u7684\u8f93\u5165\u90fd\u7531\u4e0a\u4e00\u9636\u6bb5\u7684\u8f93\u51fa\u7ed9\u51fa\uff0c\u8bad\u7ec3\u4e5f\u662f\u6309\u9636\u6bb5\u8fdb\u884c\uff0c\u800cb\u662f\u7531\u539f\u59cb\u6570\u636e\u4e00\u8d77\u8fdb\u884c","title":"CascadeRCNN\u6c38\u8fdc\u6ef4\u795e"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/CascadeRCNN/#cascade-rcnn","text":"\u8bba\u6587\u94fe\u63a5\uff1a https://arxiv.org/abs/1712.00726 \u4ee3\u7801\u94fe\u63a5\uff1a https://github.com/zhaoweicai/cascade-rcnn","title":"Cascade RCNN\u8bba\u6587\u89e3\u8bfb"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/CascadeRCNN/#_1","text":"\u53c2\u8003\u94fe\u63a5\uff1a https://zhuanlan.zhihu.com/p/31426458","title":"\u524d\u8a00"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/CascadeRCNN/#rpn","text":"\u8c08\u8d77RCNN\u7f51\u7edc\uff0cRPN\u7f51\u7edc\u53ef\u8c13\u4e00\u5927\u7279\u8272\uff0c\u7a76\u5176\u6839\u672c\uff0c\u5c31\u662f\u5728feature map\u4e0a\u6bcf\u4e00\u70b9\u4ea7\u751fanchor\uff0c\u4f7f\u7528cnn\u7f51\u7edc\u53bb\u8fdb\u884c\u80cc\u666for\u76ee\u6807\u7684\u4e8c\u5206\u7c7b \u5173\u6ce8\u5176rpn\u7f51\u7edc\u67b6\u6784 \u5148\u5c06feature map\u8fdb\u884c3 \\times \\times 3\u5377\u79ef\u9001\u5165\u4e4b\u540e\u7684\u4e24\u4e2a\u5206\u652f \u4e0a\u5206\u652f\u8fdb\u884c1 \\times \\times 1\u5377\u79ef\u4f7f\u7ef4\u5ea6\u53d8\u4e3a18\uff089\u4e2aanchor*\u4e8c\u5206\u7c7b\uff09 reshape\u5bf9\u4e8c\u5206\u7c7b\u60c5\u51b5\u505asoftmax\uff0c\u518d\u6062\u590d\u539f\u72b6 \u7531\u6b64\u751f\u6210Proposal","title":"RPN"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/CascadeRCNN/#roi-pooling","text":"\u5b9e\u73b0\u4f7f\u751f\u6210\u7684\u5019\u9009\u6846region proposal\u6620\u5c04\u4ea7\u751f\u56fa\u5b9a\u5927\u5c0f\u7684feature map\u3002 \u6839\u636e\u8f93\u5165image\uff0c\u5c06\u63d0\u53d6\u7684\u5019\u9009\u6846region proposal\u6620\u5c04\u5230feature map\u7684\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u5f97\u5230ROI\uff1b \u5c06\u6620\u5c04\u540e\u7684ROI\u533a\u57df\u5212\u5206\u4e3a\u76f8\u540c\u5927\u5c0f\u7684\u5757sections\uff08\u5757sections\u7684\u6570\u91cf\u662f\u6211\u4eec\u6307\u5b9a\u7684\uff0c\u5b83\u4e0e\u8f93\u51fa\u7684\u7ef4\u5ea6\u76f8\u540c\uff09\uff1b \u5bf9\u6bcf\u4e2a\u5757sections\u8fdb\u884cmax pooling\u64cd\u4f5c\uff1b","title":"ROI Pooling"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/CascadeRCNN/#abstract","text":"\u68c0\u6d4b\u6027\u80fd\u4f1a\u968f\u7740IOU\u7684\u53d8\u5316\u800c\u6539\u53d8\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2aIOU\u4e0b\u7684\u6700\u4f73\u68c0\u6d4b\u5668\u518d\u53e6\u4e00\u4e2aIOU\u4e0b\u53ef\u80fd\u5c31\u4e0d\u662f\u4e86 Cascade RCNN\u6709\u4e0d\u540cIOU\u7684\u591a\u7ea7\u68c0\u6d4b\u5668\uff0c\u662f\u5bf9\u68c0\u6d4b\u5668\u7684IOU\u8fdb\u884c\u4f18\u5316\u4e3a\u4e0d\u662f\u5bf9\u5047\u9633\u6027\u7387\u7684\u4f18\u5316 \u76ee\u6807\u5bc6\u96c6\uff0c\u9ad8IOU\u4f1a\u5bfc\u81f4\u6b63\u6837\u672c\u6570\u76eee\u6307\u6570\u4e0b\u964d\u5bfc\u81f4\u8fc7\u62df\u5408 \u9ad8\u8d28\u91cf\u68c0\u6d4b\u5668\u53ea\u5bf9\u9ad8\u8d28\u91cfproposal\u6709\u6548\uff0c\u5bf9\u5176\u4ed6\u8d28\u91cf\u5c31\u4e0d\u4e00\u5b9a\u4e86 It consists of a sequence of detectors trained with increasing IoU thresholds, to be sequentially more selective against close false positives. The detectors are trained stage by stage, leveraging the observation that the output of a detector is a good distribution for training the next higher quality detector.","title":"Abstract"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/CascadeRCNN/#details","text":"\u4e0efaster-rcnn\u7684\u533a\u522b \u5176\u4e2db\u4e0ed\u7684\u533a\u522b\u662fcascade\u6bcf\u4e2a\u9636\u6bb5\u7684\u8f93\u5165\u90fd\u7531\u4e0a\u4e00\u9636\u6bb5\u7684\u8f93\u51fa\u7ed9\u51fa\uff0c\u8bad\u7ec3\u4e5f\u662f\u6309\u9636\u6bb5\u8fdb\u884c\uff0c\u800cb\u662f\u7531\u539f\u59cb\u6570\u636e\u4e00\u8d77\u8fdb\u884c","title":"Details"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/HR-Net%20%E8%AE%BA%E6%96%87%E8%A7%A3%E8%AF%BB/","text":"HR-Net \u8bba\u6587\u89e3\u8bfb\uff08high-resolution \u00b6 \u6458\u8981 \u00b6 \u901a\u8fc7\u805a\u5408\u591a\u4e2a\u5e73\u884c\u7279\u5f81\u5c42\u5377\u79ef\u7684\u65b9\u6cd5\u4fdd\u8bc1\u56fe\u50cf\u7684\u9ad8\u5206\u8fa8\u7387 \uff0c\u5e76\u5e94\u7528\u5728\u73b0\u6709\u7684RCNN\u7f51\u7edc\u4e2d\uff0c\u5747\u53d6\u5f97\u4e86\u4e0d\u9519\u7684\u4f18\u5316\uff0c\u5927\u5e45\u5ea6\u63d0\u5347\u5c0f\u76ee\u6807\u68c0\u6d4b\u6027\u80fd\u3002 Architecture: \u00b6 The multi-resolution group convolution is a simple extension of the group convolution, which divides the input channels into several subsets of channels and performs a regular convolution over each subset over different spatial resolutions separately. \u5c06\u8f93\u5165\u901a\u9053\u5212\u5206\u4e3a\u591a\u4e2a\u5b50\u96c6\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5b50\u96c6\u5728\u4e0d\u540c\u7a7a\u95f4\u5206\u8fa8\u7387\u4e0b\u8fdb\u884c\u6b63\u5219\u5377\u79ef\uff08regular convolution) multi-resolution convolution The input channels are divided into several subsets, and the output channels are also divided into several subsets. The input and output subsets are connected in a fully-connected fashion, and each connection is a regular convolution . Each subset of output channels is a summation of the outputs of the convolutions over each subset of input channels \u5377\u79ef\u7684\u8f93\u5165\u548c\u8f93\u51fa\u4ee5\u5168\u8fde\u63a5\u7684\u65b9\u5f0f\u8fde\u63a5 \u5dee\u5f02 \u00b6 \u6bcf\u4e2asubset\u90fd\u662f\u5728\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u60c5\u51b5\u4e0b \u8f93\u5165\u4e0e\u8f93\u51fa\u4e4b\u95f4\u7684\u5168\u8fde\u63a5\u9700\u8981\u5904\u7406\uff0c\u4e0b\u91c7\u6837\u901a\u8fc7s=2,k=3\u7684\u5377\u79ef\u5b9e\u73b0\uff0c\u4e0a\u91c7\u6837\u901a\u8fc7\u7ebf\u6027\u63d2\u503c\u7684\u65b9\u6cd5\u5b9e\u73b0","title":"\u9ad8\u5206\u8fa8\u7f51\u7edcHR-Net"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/HR-Net%20%E8%AE%BA%E6%96%87%E8%A7%A3%E8%AF%BB/#hr-net-high-resolution","text":"","title":"HR-Net \u8bba\u6587\u89e3\u8bfb\uff08high-resolution"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/HR-Net%20%E8%AE%BA%E6%96%87%E8%A7%A3%E8%AF%BB/#_1","text":"\u901a\u8fc7\u805a\u5408\u591a\u4e2a\u5e73\u884c\u7279\u5f81\u5c42\u5377\u79ef\u7684\u65b9\u6cd5\u4fdd\u8bc1\u56fe\u50cf\u7684\u9ad8\u5206\u8fa8\u7387 \uff0c\u5e76\u5e94\u7528\u5728\u73b0\u6709\u7684RCNN\u7f51\u7edc\u4e2d\uff0c\u5747\u53d6\u5f97\u4e86\u4e0d\u9519\u7684\u4f18\u5316\uff0c\u5927\u5e45\u5ea6\u63d0\u5347\u5c0f\u76ee\u6807\u68c0\u6d4b\u6027\u80fd\u3002","title":"\u6458\u8981"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/HR-Net%20%E8%AE%BA%E6%96%87%E8%A7%A3%E8%AF%BB/#architecture","text":"The multi-resolution group convolution is a simple extension of the group convolution, which divides the input channels into several subsets of channels and performs a regular convolution over each subset over different spatial resolutions separately. \u5c06\u8f93\u5165\u901a\u9053\u5212\u5206\u4e3a\u591a\u4e2a\u5b50\u96c6\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5b50\u96c6\u5728\u4e0d\u540c\u7a7a\u95f4\u5206\u8fa8\u7387\u4e0b\u8fdb\u884c\u6b63\u5219\u5377\u79ef\uff08regular convolution) multi-resolution convolution The input channels are divided into several subsets, and the output channels are also divided into several subsets. The input and output subsets are connected in a fully-connected fashion, and each connection is a regular convolution . Each subset of output channels is a summation of the outputs of the convolutions over each subset of input channels \u5377\u79ef\u7684\u8f93\u5165\u548c\u8f93\u51fa\u4ee5\u5168\u8fde\u63a5\u7684\u65b9\u5f0f\u8fde\u63a5","title":"Architecture:"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/HR-Net%20%E8%AE%BA%E6%96%87%E8%A7%A3%E8%AF%BB/#_2","text":"\u6bcf\u4e2asubset\u90fd\u662f\u5728\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u60c5\u51b5\u4e0b \u8f93\u5165\u4e0e\u8f93\u51fa\u4e4b\u95f4\u7684\u5168\u8fde\u63a5\u9700\u8981\u5904\u7406\uff0c\u4e0b\u91c7\u6837\u901a\u8fc7s=2,k=3\u7684\u5377\u79ef\u5b9e\u73b0\uff0c\u4e0a\u91c7\u6837\u901a\u8fc7\u7ebf\u6027\u63d2\u503c\u7684\u65b9\u6cd5\u5b9e\u73b0","title":"\u5dee\u5f02"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Transformer/","text":"\u5c60\u699c\u7684Transformer \u00b6 7.17 Transformer\u7b80\u4ecb \u00b6 \u5e94\u7528\u4e86\u81ea\u6ce8\u610f\u529b\u673a\u5236\u6765\u5efa\u6a21\u5168\u5c40\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u7f3a\u70b9\uff1a\u8ba1\u7b97\u91cf\u5927\uff0c\u6539\u8fdb\u65b9\u6cd5\u901a\u5e38\u4e3a\u8f7b\u91cf\u5316\u7684\u6ce8\u610f\u529b\uff0c\u5206\u6cbb\u6cd5 \u67b6\u6784\u7075\u6d3b\uff0c\u5f88\u96be\u5e94\u7528\u5728\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u7f3a\u4e4f\u6cdb\u5316\u6027\u80fd \u6a21\u578b\u81ea\u9002\u5e94\u6027 \u539f\u751fTransformer\u6a21\u578b\u7531\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u7ec4\u6210\u7684\u5e8f\u5217\u5230\u5e8f\u5217\u6a21\u578b\u89e3\u7801\u5668\u7aef\u7684\u81ea\u6ce8\u610f\u529b\u6a21\u5757\u4f5c\u7528\u662f\u7528\u4e8e\u907f\u514d\u5f53\u524d\u4f4d\u7f6e\u5173\u6ce8\u5230\u540e\u7eed\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002 Transformer\u91c7\u7528\u4e86\u5e26\u6709 Query-Key-Value (QKV)\u7684\u81ea \u6ce8\u610f\u529b\u6a21\u5757 \u3002\u5176\u4e2d\uff0cQ\u6307\u7684\u662f\u67e5\u8be2\u5411\u91cf\uff0cK\u6307\u7684\u662f\u5173\u952e\u5b57\u5411\u91cf\uff0c\u800cV\u6307\u7684\u662f\u5185\u5bb9\u5411\u91cf\u3002Q\u4e0eK\u70b9\u79ef\u53ef\u5f97\u5230\u5173\u8054\u77e9\u9635\uff0c\u7ecf\u8fc7 SoftMax \u5f97\u5230\u6743\u91cd\u56fe\uff0c\u6743\u91cd\u56fe\u53e0\u52a0\u5230V\u53ef\u5f97\u5230\u4e0d\u540c\u533a\u57df\u52a0\u6743\u3002 \u91c7\u53d6\u591a\u5934\u6ce8\u610f\u529b\uff0c\u591a\u5934\u6ce8\u610f\u529b\u7ed3\u679c\u62fc\u63a5\u4f5c\u4e3aMSA\u6700\u7ec8\u7684\u8f93\u51fa\uff0c Self-attention . \u5728Transformer\u7684\u7f16\u7801\u5668\u4e2d\uff0c\u6211\u4eec\u8bbe\u7f6e\uff0c\u8fd9\u91cc\u4e3a\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa\u3002 Masked Self-attention . \u5728Transformer\u7684\u89e3\u7801\u5668\u4e2d\uff0c\u81ea\u6ce8\u610f\u529b\u53d7\u5230\u9650\u5236\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u67e5\u8be2\u53ea\u80fd\u5173\u6ce8\u5230\u5305\u62ec\u8be5\u4f4d\u7f6e\u53ca\u4e4b\u524d\u4f4d\u7f6e\u7684\u6240\u6709\u952e\u503c\u5bf9\u3002\u5e38\u89c4\u505a\u6cd5\u662f\u5c06\u63a9\u7801\u77e9\u9635(mask matrix)\u6dfb\u52a0\u5230\u6ce8\u610f\u529b\u5206\u6570\u4e0a\uff0c\u5176\u4e2d\u975e\u6cd5\u4f4d\u7f6e\u91c7\u7528\u8fdb\u884c\u906e\u6321\u3002\u8fd9\u4e00\u7c7b\u6ce8\u610f\u529b\u65b9\u6cd5\u4e5f\u7ecf\u5e38\u88ab\u79f0\u4e3a\u81ea\u56de\u5f52(autogressive)\u6216\u8005\u56e0\u679c(causal)\u6ce8\u610f\u529b\u3002 Cross-attetnion . \u67e5\u8be2\u662f\u4ece\u524d\u4e00\u4e2a\uff08\u89e3\u7801\u5668\uff09\u5c42\u7684\u8f93\u51fa\u6295\u5f71\u6240\u83b7\u5f97\u7684\uff0c\u800c\u952e\u548c\u503c\u662f\u4f7f\u7528\u7f16\u7801\u5668\u7684\u8f93\u51fa\u6295\u5f71\u5f97\u5230\u7684\u3002 \u4f4d\u7f6e\u7f16\u7801 \u7531\u4e8eTranformer\u5b8c\u5168\u6452\u5f03\u4e86RNN\u548cCNN\u7ed3\u6784\uff0c\u5bfc\u81f4\u5b83\u5bf9\u4f4d\u7f6e\u4fe1\u606f\u662f\u4e00\u65e0\u6240\u77e5\u7684\uff08\u5c24\u5176\u662f\u7f16\u7801\u5668\uff09\u3002\u56e0\u6b64\uff0c\u9700\u8981\u989d\u5916\u7684\u4f4d\u7f6e\u8868\u793a\u6765\u5bf9Token\u7684\u6392\u5e8f\u8fdb\u884c\u5efa\u6a21\u3002 Transformer\u53ef\u4f7f\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f Encoder-Deocder Encoder only Decoder only \u5f71\u54cdTransformer\u7684\u590d\u6742\u5ea6\u7684\u4e24\u4e2a\u56e0\u7d20\u4e3a\u9690\u85cf\u5c42D\u7684\u7ef4\u5ea6\u548c\u8f93\u5165\u5e8f\u5217\u957f\u5ea6T 7.20 VIsion Transformer\uff08\u5c60\u699c\u89c6\u89c9\u9886\u57df\uff09 \u00b6 self-attention \u00b6 Xn \u4e58\u4e00\u4e2a\u77e9\u9635\u5f97\u5230embedding ai\uff0c\u5728\u5c06ai \u4e58\u4e09\u4e2a\u4e0d\u540c\u7684Wq,Wk,Wv\u5f97\u5230q\uff0ck\uff0cv\uff0cq\u4e0ev\u505aattention\u5373qk\u70b9\u79ef\u9664\u4ee5\u7ef4\u5ea6\u7684\u6839\u53f7 \u8fdb\u884csoftmax\u64cd\u4f5c \u4e0evi\u76f8\u4e58\u5f97\u5230bi\uff0c\u6b64\u65f6bi\u7528\u5230\u4e86\u6574\u4e2asequence\u7684\u4fe1\u606f \u5982\u679c\u8981\u8003\u8651 local \u7684information\uff0c\u5219\u53ea\u9700\u8981\u5b66\u4e60\u51fa\u76f8\u5e94\u7684a1,i = 0\uff0cb1 \u5c31\u4e0d\u518d\u5e26\u6709\u90a3\u4e2a\u5bf9\u5e94\u5206\u652f\u7684\u4fe1\u606f\u4e86\uff1b\u5982\u679c\u8981\u8003\u8651 global \u7684information\uff0c\u5219\u53ea\u9700\u8981\u5b66\u4e60\u51fa\u76f8\u5e94\u7684a1,i != 0\uff0cb1 \u5c31\u5e26\u6709\u5168\u90e8\u7684\u5bf9\u5e94\u5206\u652f\u7684\u4fe1\u606f\u4e86\u3002 self-attention\u5c31\u662f\u4e00\u5806\u77e9\u9635\u4e58\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0GPU\u52a0\u901f \u5904\u7406Sequence:RNN\u53ef\u4ee5\u8003\u8651\u5230\u5168\u5c40\uff0c\u4f46\u4e0d\u80fd\u505a\u5230\u5e76\u884c\u5316 cnn\u53ef\u4ee5\u5e76\u884c\u5316\uff0c\u4f46\u4e0d\u80fd\u8003\u8651\u5168\u5c40\uff0c\u5806\u53e0filter\u53ef\u4ee5\u89e3\u51b3 \u4e00\u79cd\u65b0\u7684layer\uff0c\u53eb self-attention \uff0c\u5b83\u7684\u8f93\u5165\u548c\u8f93\u51fa\u548cRNN\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u8f93\u5165\u4e00\u4e2asequence\uff0c\u8f93\u51fa\u4e00\u4e2asequence\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u90fd\u770b\u8fc7\u4e86\u6574\u4e2a\u7684\u8f93\u5165sequence\uff0c\u8fd9\u4e00\u70b9\u4e0ebi-directional RNN\u76f8\u540c\u3002\u4f46\u662f\u795e\u5947\u7684\u5730\u65b9\u662f\uff1a\u5b83\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u53ef\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u3002 Embedding \u662f\u4e00\u4e2a\u5c06\u79bb\u6563\u53d8\u91cf\u8f6c\u4e3a\u8fde\u7eed\u5411\u91cf\u8868\u793a\u7684\u4e00\u4e2a\u65b9\u5f0f\u3002\u6709\u4ee5\u4e0b\u4e09\u4e2a\u4e3b\u8981\u76ee\u7684 \u5728 embedding \u7a7a\u95f4\u4e2d \u67e5\u627e\u6700\u8fd1\u90bb \uff0c\u8fd9\u53ef\u4ee5\u5f88\u597d\u7684\u7528\u4e8e\u6839\u636e\u7528\u6237\u7684\u5174\u8da3\u6765\u8fdb\u884c\u63a8\u8350\u3002 \u4f5c\u4e3a\u76d1\u7763\u6027\u5b66\u4e60\u4efb\u52a1\u7684 \u8f93\u5165 \u3002 \u7528\u4e8e \u53ef\u89c6\u5316 \u4e0d\u540c\u79bb\u6563\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u4e0eone-hot\u5bf9\u6bd4\uff1aone-hot\u7531N-1\u4e2a0\u4e0e\u5355\u4e2a1\u7ec4\u6210\u7684vector\uff0c\u6240\u663e\u73b0\u7684\u7f3a\u70b9\u6709 \u5bf9\u4e8e\u5177\u6709\u975e\u5e38\u591a\u7c7b\u578b\u7684\u7c7b\u522b\u53d8\u91cf\uff0c\u53d8\u6362\u540e\u7684\u5411\u91cf\u7ef4\u6570\u8fc7\u4e8e\u5de8\u5927\uff0c\u4e14\u8fc7\u4e8e\u7a00\u758f\u3002 \u6620\u5c04\u4e4b\u95f4\u5b8c\u5168\u72ec\u7acb\uff0c\u5e76\u4e0d\u80fd\u8868\u793a\u51fa\u4e0d\u540c\u7c7b\u522b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u8003\u8651\u5230\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u8868\u793a\u7c7b\u522b\u53d8\u91cf\u7684\u7406\u60f3\u89e3\u51b3\u65b9\u6848\u5219\u662f\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u8f83\u5c11\u7684\u7ef4\u5ea6\u8868\u793a\u51fa\u6bcf\u4e2a\u7c7b\u522b\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u4e00\u5b9a\u7684\u8868\u73b0\u51fa\u4e0d\u540c\u7c7b\u522b\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u4e5f\u5c31\u662f embedding \u51fa\u73b0\u7684\u76ee\u7684\u3002 embedding\u6700\u9177\u7684\u4e00\u70b9\u662f\u53ef\u89c6\u5316\uff0c\u5f53\u7136\u8981\u6211\u4eec\u80fd\u591f\u89c2\u5bdf\uff0c\u9700\u8981\u901a\u8fc7\u964d\u7ef4\u6280\u672f\u6765\u8fbe\u5230 2 \u7ef4\u6216 3 \u7ef4\u3002\u6700\u6d41\u884c\u7684\u964d\u7ef4\u6280\u672f\u662f\uff1at-Distributed Stochastic Neighbor Embedding (TSNE)\u3002 Multi-head self-attention \u00b6 Positional Encoding\uff1a \u4f4d\u7f6e\u7f16\u7801 \u00b6 \u7ed9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u89c4\u5b9a\u4e00\u4e2a\u8868\u793a\u4f4d\u7f6e\u4fe1\u606f\u7684\u5411\u91cfei\uff0c\u8ba9\u5b83\u4e0eai\u52a0\u5728\u4e00\u8d77\u4e4b\u540e\u4f5c\u4e3a\u65b0\u7684ai\u53c2\u4e0e\u540e\u9762\u7684\u8fd0\u7b97\u8fc7\u7a0b\uff0c\u4f46\u662f\u8fd9\u4e2a\u5411\u91cfei\u662f\u7531\u4eba\u5de5\u8bbe\u5b9a\u7684\uff0c\u800c\u4e0d\u662f\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u51fa\u6765\u7684\u3002\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u4e0d\u540c\u7684ei\u3002 Transformer \u00b6 Masked Multi-Head Self-attention\uff0cmasked\u7684\u610f\u601d\u662f\u4f7fattention\u53ea\u4f1aattend on\u5df2\u7ecf\u4ea7\u751f\u7684sequence\uff0c Dynamic ViT \uff1a\u52a8\u6001Token\u7a00\u758f\u5316ViT \u8bba\u6587\u89e3\u8bfb \u00b6 \u8bba\u6587\u5730\u5740: Transformer Interpretability Beyond Attention Visualization \u6e90\u7801\u5730\u5740 point: \u52a8\u6001token\u7a00\u758f\u5316\u89c6\u89c9transformer\uff0c \u5206\u5c42\u526a\u679d VIT \u5f85\u89e3\u51b3\uff1a\u4ea4\u53c9\u9a8c\u8bc1\uff0cmix up\uff0c","title":"\u5c60\u699c\u7684transformer"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Transformer/#transformer","text":"7.17","title":"\u5c60\u699c\u7684Transformer"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Transformer/#transformer_1","text":"\u5e94\u7528\u4e86\u81ea\u6ce8\u610f\u529b\u673a\u5236\u6765\u5efa\u6a21\u5168\u5c40\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u7f3a\u70b9\uff1a\u8ba1\u7b97\u91cf\u5927\uff0c\u6539\u8fdb\u65b9\u6cd5\u901a\u5e38\u4e3a\u8f7b\u91cf\u5316\u7684\u6ce8\u610f\u529b\uff0c\u5206\u6cbb\u6cd5 \u67b6\u6784\u7075\u6d3b\uff0c\u5f88\u96be\u5e94\u7528\u5728\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u7f3a\u4e4f\u6cdb\u5316\u6027\u80fd \u6a21\u578b\u81ea\u9002\u5e94\u6027 \u539f\u751fTransformer\u6a21\u578b\u7531\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u7ec4\u6210\u7684\u5e8f\u5217\u5230\u5e8f\u5217\u6a21\u578b\u89e3\u7801\u5668\u7aef\u7684\u81ea\u6ce8\u610f\u529b\u6a21\u5757\u4f5c\u7528\u662f\u7528\u4e8e\u907f\u514d\u5f53\u524d\u4f4d\u7f6e\u5173\u6ce8\u5230\u540e\u7eed\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002 Transformer\u91c7\u7528\u4e86\u5e26\u6709 Query-Key-Value (QKV)\u7684\u81ea \u6ce8\u610f\u529b\u6a21\u5757 \u3002\u5176\u4e2d\uff0cQ\u6307\u7684\u662f\u67e5\u8be2\u5411\u91cf\uff0cK\u6307\u7684\u662f\u5173\u952e\u5b57\u5411\u91cf\uff0c\u800cV\u6307\u7684\u662f\u5185\u5bb9\u5411\u91cf\u3002Q\u4e0eK\u70b9\u79ef\u53ef\u5f97\u5230\u5173\u8054\u77e9\u9635\uff0c\u7ecf\u8fc7 SoftMax \u5f97\u5230\u6743\u91cd\u56fe\uff0c\u6743\u91cd\u56fe\u53e0\u52a0\u5230V\u53ef\u5f97\u5230\u4e0d\u540c\u533a\u57df\u52a0\u6743\u3002 \u91c7\u53d6\u591a\u5934\u6ce8\u610f\u529b\uff0c\u591a\u5934\u6ce8\u610f\u529b\u7ed3\u679c\u62fc\u63a5\u4f5c\u4e3aMSA\u6700\u7ec8\u7684\u8f93\u51fa\uff0c Self-attention . \u5728Transformer\u7684\u7f16\u7801\u5668\u4e2d\uff0c\u6211\u4eec\u8bbe\u7f6e\uff0c\u8fd9\u91cc\u4e3a\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa\u3002 Masked Self-attention . \u5728Transformer\u7684\u89e3\u7801\u5668\u4e2d\uff0c\u81ea\u6ce8\u610f\u529b\u53d7\u5230\u9650\u5236\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u67e5\u8be2\u53ea\u80fd\u5173\u6ce8\u5230\u5305\u62ec\u8be5\u4f4d\u7f6e\u53ca\u4e4b\u524d\u4f4d\u7f6e\u7684\u6240\u6709\u952e\u503c\u5bf9\u3002\u5e38\u89c4\u505a\u6cd5\u662f\u5c06\u63a9\u7801\u77e9\u9635(mask matrix)\u6dfb\u52a0\u5230\u6ce8\u610f\u529b\u5206\u6570\u4e0a\uff0c\u5176\u4e2d\u975e\u6cd5\u4f4d\u7f6e\u91c7\u7528\u8fdb\u884c\u906e\u6321\u3002\u8fd9\u4e00\u7c7b\u6ce8\u610f\u529b\u65b9\u6cd5\u4e5f\u7ecf\u5e38\u88ab\u79f0\u4e3a\u81ea\u56de\u5f52(autogressive)\u6216\u8005\u56e0\u679c(causal)\u6ce8\u610f\u529b\u3002 Cross-attetnion . \u67e5\u8be2\u662f\u4ece\u524d\u4e00\u4e2a\uff08\u89e3\u7801\u5668\uff09\u5c42\u7684\u8f93\u51fa\u6295\u5f71\u6240\u83b7\u5f97\u7684\uff0c\u800c\u952e\u548c\u503c\u662f\u4f7f\u7528\u7f16\u7801\u5668\u7684\u8f93\u51fa\u6295\u5f71\u5f97\u5230\u7684\u3002 \u4f4d\u7f6e\u7f16\u7801 \u7531\u4e8eTranformer\u5b8c\u5168\u6452\u5f03\u4e86RNN\u548cCNN\u7ed3\u6784\uff0c\u5bfc\u81f4\u5b83\u5bf9\u4f4d\u7f6e\u4fe1\u606f\u662f\u4e00\u65e0\u6240\u77e5\u7684\uff08\u5c24\u5176\u662f\u7f16\u7801\u5668\uff09\u3002\u56e0\u6b64\uff0c\u9700\u8981\u989d\u5916\u7684\u4f4d\u7f6e\u8868\u793a\u6765\u5bf9Token\u7684\u6392\u5e8f\u8fdb\u884c\u5efa\u6a21\u3002 Transformer\u53ef\u4f7f\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f Encoder-Deocder Encoder only Decoder only \u5f71\u54cdTransformer\u7684\u590d\u6742\u5ea6\u7684\u4e24\u4e2a\u56e0\u7d20\u4e3a\u9690\u85cf\u5c42D\u7684\u7ef4\u5ea6\u548c\u8f93\u5165\u5e8f\u5217\u957f\u5ea6T 7.20","title":"Transformer\u7b80\u4ecb"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Transformer/#vision-transformer","text":"","title":"VIsion Transformer\uff08\u5c60\u699c\u89c6\u89c9\u9886\u57df\uff09"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Transformer/#self-attention","text":"Xn \u4e58\u4e00\u4e2a\u77e9\u9635\u5f97\u5230embedding ai\uff0c\u5728\u5c06ai \u4e58\u4e09\u4e2a\u4e0d\u540c\u7684Wq,Wk,Wv\u5f97\u5230q\uff0ck\uff0cv\uff0cq\u4e0ev\u505aattention\u5373qk\u70b9\u79ef\u9664\u4ee5\u7ef4\u5ea6\u7684\u6839\u53f7 \u8fdb\u884csoftmax\u64cd\u4f5c \u4e0evi\u76f8\u4e58\u5f97\u5230bi\uff0c\u6b64\u65f6bi\u7528\u5230\u4e86\u6574\u4e2asequence\u7684\u4fe1\u606f \u5982\u679c\u8981\u8003\u8651 local \u7684information\uff0c\u5219\u53ea\u9700\u8981\u5b66\u4e60\u51fa\u76f8\u5e94\u7684a1,i = 0\uff0cb1 \u5c31\u4e0d\u518d\u5e26\u6709\u90a3\u4e2a\u5bf9\u5e94\u5206\u652f\u7684\u4fe1\u606f\u4e86\uff1b\u5982\u679c\u8981\u8003\u8651 global \u7684information\uff0c\u5219\u53ea\u9700\u8981\u5b66\u4e60\u51fa\u76f8\u5e94\u7684a1,i != 0\uff0cb1 \u5c31\u5e26\u6709\u5168\u90e8\u7684\u5bf9\u5e94\u5206\u652f\u7684\u4fe1\u606f\u4e86\u3002 self-attention\u5c31\u662f\u4e00\u5806\u77e9\u9635\u4e58\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0GPU\u52a0\u901f \u5904\u7406Sequence:RNN\u53ef\u4ee5\u8003\u8651\u5230\u5168\u5c40\uff0c\u4f46\u4e0d\u80fd\u505a\u5230\u5e76\u884c\u5316 cnn\u53ef\u4ee5\u5e76\u884c\u5316\uff0c\u4f46\u4e0d\u80fd\u8003\u8651\u5168\u5c40\uff0c\u5806\u53e0filter\u53ef\u4ee5\u89e3\u51b3 \u4e00\u79cd\u65b0\u7684layer\uff0c\u53eb self-attention \uff0c\u5b83\u7684\u8f93\u5165\u548c\u8f93\u51fa\u548cRNN\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u8f93\u5165\u4e00\u4e2asequence\uff0c\u8f93\u51fa\u4e00\u4e2asequence\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u90fd\u770b\u8fc7\u4e86\u6574\u4e2a\u7684\u8f93\u5165sequence\uff0c\u8fd9\u4e00\u70b9\u4e0ebi-directional RNN\u76f8\u540c\u3002\u4f46\u662f\u795e\u5947\u7684\u5730\u65b9\u662f\uff1a\u5b83\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u53ef\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u3002 Embedding \u662f\u4e00\u4e2a\u5c06\u79bb\u6563\u53d8\u91cf\u8f6c\u4e3a\u8fde\u7eed\u5411\u91cf\u8868\u793a\u7684\u4e00\u4e2a\u65b9\u5f0f\u3002\u6709\u4ee5\u4e0b\u4e09\u4e2a\u4e3b\u8981\u76ee\u7684 \u5728 embedding \u7a7a\u95f4\u4e2d \u67e5\u627e\u6700\u8fd1\u90bb \uff0c\u8fd9\u53ef\u4ee5\u5f88\u597d\u7684\u7528\u4e8e\u6839\u636e\u7528\u6237\u7684\u5174\u8da3\u6765\u8fdb\u884c\u63a8\u8350\u3002 \u4f5c\u4e3a\u76d1\u7763\u6027\u5b66\u4e60\u4efb\u52a1\u7684 \u8f93\u5165 \u3002 \u7528\u4e8e \u53ef\u89c6\u5316 \u4e0d\u540c\u79bb\u6563\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u4e0eone-hot\u5bf9\u6bd4\uff1aone-hot\u7531N-1\u4e2a0\u4e0e\u5355\u4e2a1\u7ec4\u6210\u7684vector\uff0c\u6240\u663e\u73b0\u7684\u7f3a\u70b9\u6709 \u5bf9\u4e8e\u5177\u6709\u975e\u5e38\u591a\u7c7b\u578b\u7684\u7c7b\u522b\u53d8\u91cf\uff0c\u53d8\u6362\u540e\u7684\u5411\u91cf\u7ef4\u6570\u8fc7\u4e8e\u5de8\u5927\uff0c\u4e14\u8fc7\u4e8e\u7a00\u758f\u3002 \u6620\u5c04\u4e4b\u95f4\u5b8c\u5168\u72ec\u7acb\uff0c\u5e76\u4e0d\u80fd\u8868\u793a\u51fa\u4e0d\u540c\u7c7b\u522b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u8003\u8651\u5230\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u8868\u793a\u7c7b\u522b\u53d8\u91cf\u7684\u7406\u60f3\u89e3\u51b3\u65b9\u6848\u5219\u662f\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u8f83\u5c11\u7684\u7ef4\u5ea6\u8868\u793a\u51fa\u6bcf\u4e2a\u7c7b\u522b\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u4e00\u5b9a\u7684\u8868\u73b0\u51fa\u4e0d\u540c\u7c7b\u522b\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u4e5f\u5c31\u662f embedding \u51fa\u73b0\u7684\u76ee\u7684\u3002 embedding\u6700\u9177\u7684\u4e00\u70b9\u662f\u53ef\u89c6\u5316\uff0c\u5f53\u7136\u8981\u6211\u4eec\u80fd\u591f\u89c2\u5bdf\uff0c\u9700\u8981\u901a\u8fc7\u964d\u7ef4\u6280\u672f\u6765\u8fbe\u5230 2 \u7ef4\u6216 3 \u7ef4\u3002\u6700\u6d41\u884c\u7684\u964d\u7ef4\u6280\u672f\u662f\uff1at-Distributed Stochastic Neighbor Embedding (TSNE)\u3002","title":"self-attention"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Transformer/#multi-head-self-attention","text":"","title":"Multi-head self-attention"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Transformer/#positional-encoding","text":"\u7ed9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u89c4\u5b9a\u4e00\u4e2a\u8868\u793a\u4f4d\u7f6e\u4fe1\u606f\u7684\u5411\u91cfei\uff0c\u8ba9\u5b83\u4e0eai\u52a0\u5728\u4e00\u8d77\u4e4b\u540e\u4f5c\u4e3a\u65b0\u7684ai\u53c2\u4e0e\u540e\u9762\u7684\u8fd0\u7b97\u8fc7\u7a0b\uff0c\u4f46\u662f\u8fd9\u4e2a\u5411\u91cfei\u662f\u7531\u4eba\u5de5\u8bbe\u5b9a\u7684\uff0c\u800c\u4e0d\u662f\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u51fa\u6765\u7684\u3002\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u4e0d\u540c\u7684ei\u3002","title":"Positional Encoding\uff1a \u4f4d\u7f6e\u7f16\u7801"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Transformer/#transformer_2","text":"Masked Multi-Head Self-attention\uff0cmasked\u7684\u610f\u601d\u662f\u4f7fattention\u53ea\u4f1aattend on\u5df2\u7ecf\u4ea7\u751f\u7684sequence\uff0c","title":"Transformer"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Transformer/#dynamic-vit-tokenvit","text":"\u8bba\u6587\u5730\u5740: Transformer Interpretability Beyond Attention Visualization \u6e90\u7801\u5730\u5740 point: \u52a8\u6001token\u7a00\u758f\u5316\u89c6\u89c9transformer\uff0c \u5206\u5c42\u526a\u679d VIT \u5f85\u89e3\u51b3\uff1a\u4ea4\u53c9\u9a8c\u8bc1\uff0cmix up\uff0c","title":"Dynamic ViT \uff1a\u52a8\u6001Token\u7a00\u758f\u5316ViT \u8bba\u6587\u89e3\u8bfb"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/YOLOP/","text":"YOLOP: You Only Look Once for Panoptic Driving Perception \u8bba\u6587\u89e3\u8bfb \u00b6 \u4f5c\u8005\u5355\u4f4d\uff1a\u534e\u4e2d\u79d1\u6280\u5927\u5b66 \u6e90\u7801\u94fe\u63a5\uff1a https://github.com/hustvl/YOLOP Abstract \u00b6 \u672c\u6587\u63d0\u51fa\u7684\u7f51\u7edc\u53ef\u4ee5\u540c\u65f6\u5b8c\u6210\u76ee\u6807\u68c0\u6d4b\uff0c\u8f66\u9053\u7ebf\u68c0\u6d4b\u4ee5\u53ca\u9053\u8def\u5206\u5272\uff0c\u5e76\u53ef\u4ee5\u5728\u5d4c\u5165\u5f0f\u8bbe\u5907TX2\u4e0a\u8fbe\u523023FPS\u7684\u5e27\u7387 \u7f51\u7edc\u6709\u4e00\u4e2a\u7f16\u7801\u5668(Scaled-yolov4)\u548c\u4e09\u4e2a\u89e3\u7801\u5668\uff0c\u5229\u7528\u7f16\u7801\u5668\u63d0\u53d6\u7279\u5f81\u4e4b\u540e\u5206\u522b\u9001\u5165\u4e09\u4e2a\u89e3\u7801\u53bb\u5b8c\u6210\u4e0d\u540c\u7684\u4efb\u52a1 \u67b6\u6784\u5982\u4e0b methodology \u00b6 Backbone \u00b6 CSPDarkNet53 in Scaled-yolov4(\u4f18\u5316\u8fc7\u7a0b\u4e2d\u89e3\u51b3\u68af\u5ea6\u91cd\u590d) Neck \u00b6 fuse SPP and FPN (SPP\u751f\u6210\u548c\u878d\u5408\u4e0d\u540c\u5c3a\u5ea6\u7684\u7279\u5f81\uff0cFPN\u878d\u5408\u4e0d\u540c\u8bed\u4e49\u5c42\u6b21\u7684\u7279\u5f81) Detection Decoder \u00b6 Similar to YOLOV4. FPN transfers semantic features top-down, and PAN transfers positioning features bottom-up \u672c\u6587\u5c06\u4ed6\u4eec\u7ed3\u5408\u5e76\u6700\u7ec8\u5229\u7528PAN\u505a\u51fa\u9884\u6d4b Segmentation Decoders \u00b6 simple branch\uff0c\u7279\u5f81\u56fe\u7ecf\u8fc7\u4e09\u6b21\u4e0a\u91c7\u6837\uff0c\u6839\u636e\u6982\u7387\u5f97\u5230\u5206\u5272","title":"\u5d4c\u5165\u5f0f\u540c\u65f6\u5b8c\u6210\u4e09\u5927\u89c6\u89c9\u4efb\u52a1YOLOP"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/YOLOP/#yolop-you-only-look-once-for-panoptic-driving-perception","text":"\u4f5c\u8005\u5355\u4f4d\uff1a\u534e\u4e2d\u79d1\u6280\u5927\u5b66 \u6e90\u7801\u94fe\u63a5\uff1a https://github.com/hustvl/YOLOP","title":"YOLOP: You Only Look Once for Panoptic Driving Perception \u8bba\u6587\u89e3\u8bfb"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/YOLOP/#abstract","text":"\u672c\u6587\u63d0\u51fa\u7684\u7f51\u7edc\u53ef\u4ee5\u540c\u65f6\u5b8c\u6210\u76ee\u6807\u68c0\u6d4b\uff0c\u8f66\u9053\u7ebf\u68c0\u6d4b\u4ee5\u53ca\u9053\u8def\u5206\u5272\uff0c\u5e76\u53ef\u4ee5\u5728\u5d4c\u5165\u5f0f\u8bbe\u5907TX2\u4e0a\u8fbe\u523023FPS\u7684\u5e27\u7387 \u7f51\u7edc\u6709\u4e00\u4e2a\u7f16\u7801\u5668(Scaled-yolov4)\u548c\u4e09\u4e2a\u89e3\u7801\u5668\uff0c\u5229\u7528\u7f16\u7801\u5668\u63d0\u53d6\u7279\u5f81\u4e4b\u540e\u5206\u522b\u9001\u5165\u4e09\u4e2a\u89e3\u7801\u53bb\u5b8c\u6210\u4e0d\u540c\u7684\u4efb\u52a1 \u67b6\u6784\u5982\u4e0b","title":"Abstract"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/YOLOP/#methodology","text":"","title":"methodology"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/YOLOP/#backbone","text":"CSPDarkNet53 in Scaled-yolov4(\u4f18\u5316\u8fc7\u7a0b\u4e2d\u89e3\u51b3\u68af\u5ea6\u91cd\u590d)","title":"Backbone"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/YOLOP/#neck","text":"fuse SPP and FPN (SPP\u751f\u6210\u548c\u878d\u5408\u4e0d\u540c\u5c3a\u5ea6\u7684\u7279\u5f81\uff0cFPN\u878d\u5408\u4e0d\u540c\u8bed\u4e49\u5c42\u6b21\u7684\u7279\u5f81)","title":"Neck"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/YOLOP/#detection-decoder","text":"Similar to YOLOV4. FPN transfers semantic features top-down, and PAN transfers positioning features bottom-up \u672c\u6587\u5c06\u4ed6\u4eec\u7ed3\u5408\u5e76\u6700\u7ec8\u5229\u7528PAN\u505a\u51fa\u9884\u6d4b","title":"Detection Decoder"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/YOLOP/#segmentation-decoders","text":"simple branch\uff0c\u7279\u5f81\u56fe\u7ecf\u8fc7\u4e09\u6b21\u4e0a\u91c7\u6837\uff0c\u6839\u636e\u6982\u7387\u5f97\u5230\u5206\u5272","title":"Segmentation Decoders"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%90%8A%E6%89%93%E4%B8%80%E5%88%87%E7%9A%84yolox/","text":"7.20 \u516c\u4f17\u53f7\u9605\u8bfb\uff1a\u540a\u6253\u4e00\u5207yolo\u7684YOLOX \u00b6 abstract \u00b6 \u76f8\u5bf9\u4e8eyolov3\u7684\u8c03\u6574\uff1a\u6dfb\u52a0\u4e86 EMA \u6743\u503c\u66f4\u65b0\u3001 cosine\u5b66\u4e60\u7387\u673a\u5236 \u3001 IoU\u635f\u5931 \u3001 IoU\u611f\u77e5\u5206\u652f \u3002\u91c7\u7528 BCE\u635f\u5931 \u8bad\u7ec3cls\u4e0eobj\u5206\u652f\uff0c IoU\u635f\u5931 \u8bad\u7ec3reg\u5206\u652f\u3002\u8fd9\u4e9b\u5e7f\u4e49\u7684\u8bad\u7ec3\u6280\u5de7\u4e0eYOLOX\u7684\u5173\u952e\u6539\u8fdb\u662f\u6b63\u4ea4\u7684 yolov3\u4e0eyolox improvement \u00b6 \u6539\u8fdb\u4e00\uff1a\u68c0\u6d4b\u5934\u89e3\u8026 \u6539\u8fdb\u4e8c\uff1a\u91c7\u53d6Mosaic \u4e0e Mixup \u4e24\u79cd\u6570\u636e\u589e\u5e7f\u65b9\u6cd5 \uff08\u7531\u4e8e\u91c7\u53d6\u4e86\u66f4\u5f3a\u7684\u6570\u636e\u589e\u5e7f\uff0c\u6211\u4eec\u53d1\u73b0ImageNet\u7684\u9884\u8bad\u7ec3\u6beb\u65e0\u610f\u4e49\uff0c\u56e0\u6b64\u91c7\u7528\u4ece\u5934\u8bad\u7ec3\uff09 \u6539\u8fdb\u4e09\uff1aAnchor-free \u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u9884\u6d4b\u4ece3\u4e0b\u964d\u4e3a1\u5e76\u76f4\u63a5 \u9884\u6d4b\u56db\u4e2a\u503c \uff0c\u5373 \u4e24\u4e2aoffset\u548c\u9ad8\u5bbd \u3002\u53c2\u8003 FCOS , \u5c06\u6bcf\u4e2a\u76ee\u6807\u4e2d\u5fc3\u5b9a\u4f4d\u6b63\u6837\u672c\u5e76\u9884\u5b9a\u4e49\u4e00\u4e2a\u5c3a\u5ea6\u8303\u56f4\u4ee5\u4fbf\u4e8e\u5bf9\u6bcf\u4e2a\u76ee\u6807\u6307\u6d3e FPN anchor\u7684\u7f3a\u70b9\uff1a anchor\u96c6\u5408\u5b58\u5728\u6570\u636e\u76f8\u5173\u6027\uff0c\u6cdb\u5316\u6027\u80fd\u8f83\u5dee\u3002 anchor\u673a\u5236\u63d0\u9ad8\u4e86\u68c0\u6d4b\u5934\u7684\u590d\u6742\u6027 \u6539\u8fdb\u56db\uff1aMulti positives\uff1a\u53c2\u8003 FCOS \u5bf9\u6bcf\u4e2a\u76ee\u6807\u8d4b\u4e88\u591a\u4e2a\u6b63\u6837\u672c\uff1f\uff1f\uff1f \uff0c\u672c\u6587\u7b80\u5355\u7684\u8d4b\u4e88\u4e2d\u5fc33x3\u533a\u57df\u4e3a\u6b63\u6837\u672c\u3002 \u6539\u8fdb\u4e94\uff1aSimOTA \u5148\u8fdb\u7684\u6807\u7b7e\u5206\u914d OTA\u7814\u7a76\uff1f \u9009\u62e9OTA\u4e3a\u5019\u9009\u6807\u7b7e\u5206\u914d\u7b56\u7565 \uff08\u5c06\u5176\u7b80\u5316\u4e3a\u52a8\u6001top-k\u7b56\u7565\u4ee5\u5f97\u5230\u4e00\u4e2a\u8fd1\u4f3c\u89e3\u201cSimOTA\u201d \u8fd9\u4e0d\u4ec5\u53ef\u4ee5\u964d\u4f4e\u8bad\u7ec3\u65f6\u95f4\uff0c\u540c\u65f6\u53ef\u4ee5\u907f\u514d\u989d\u5916\u7684\u8d85\u53c2\u95ee\u9898\u3002 \u6539\u8fdb\u516d\uff08\u4f46\u672a\u5305\u542b\uff09\uff1a\u53c2\u8003 PSS \u6dfb\u52a0\u989d\u5916\u7684\u5377\u79ef\u5c42\uff0cone-to-one \u6807\u7b7e\u5206\u914d\u548cstop gradient,\u4f7f\u5176\u8fdb\u5316\u6210\u7aef\u5230\u7aef\u5f62\u5f0f \u4f7f\u7528 \u6df1\u5ea6\u5377\u79ef \u6784\u5efaYOLOX-nano,\u8bad\u7ec3\u5c0f\u6a21\u578b\u65f6\u79fb\u9664MixUp,\u5f31\u5316Mosaic\u53ef\u63d0\u9ad8\u6a21\u578b\u6027\u80fd","title":"\u540a\u6253\u4e00\u5207\u7684yoloX"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%90%8A%E6%89%93%E4%B8%80%E5%88%87%E7%9A%84yolox/#720-yoloyolox","text":"","title":"7.20 \u516c\u4f17\u53f7\u9605\u8bfb\uff1a\u540a\u6253\u4e00\u5207yolo\u7684YOLOX"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%90%8A%E6%89%93%E4%B8%80%E5%88%87%E7%9A%84yolox/#abstract","text":"\u76f8\u5bf9\u4e8eyolov3\u7684\u8c03\u6574\uff1a\u6dfb\u52a0\u4e86 EMA \u6743\u503c\u66f4\u65b0\u3001 cosine\u5b66\u4e60\u7387\u673a\u5236 \u3001 IoU\u635f\u5931 \u3001 IoU\u611f\u77e5\u5206\u652f \u3002\u91c7\u7528 BCE\u635f\u5931 \u8bad\u7ec3cls\u4e0eobj\u5206\u652f\uff0c IoU\u635f\u5931 \u8bad\u7ec3reg\u5206\u652f\u3002\u8fd9\u4e9b\u5e7f\u4e49\u7684\u8bad\u7ec3\u6280\u5de7\u4e0eYOLOX\u7684\u5173\u952e\u6539\u8fdb\u662f\u6b63\u4ea4\u7684 yolov3\u4e0eyolox","title":"abstract"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%90%8A%E6%89%93%E4%B8%80%E5%88%87%E7%9A%84yolox/#improvement","text":"\u6539\u8fdb\u4e00\uff1a\u68c0\u6d4b\u5934\u89e3\u8026 \u6539\u8fdb\u4e8c\uff1a\u91c7\u53d6Mosaic \u4e0e Mixup \u4e24\u79cd\u6570\u636e\u589e\u5e7f\u65b9\u6cd5 \uff08\u7531\u4e8e\u91c7\u53d6\u4e86\u66f4\u5f3a\u7684\u6570\u636e\u589e\u5e7f\uff0c\u6211\u4eec\u53d1\u73b0ImageNet\u7684\u9884\u8bad\u7ec3\u6beb\u65e0\u610f\u4e49\uff0c\u56e0\u6b64\u91c7\u7528\u4ece\u5934\u8bad\u7ec3\uff09 \u6539\u8fdb\u4e09\uff1aAnchor-free \u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u9884\u6d4b\u4ece3\u4e0b\u964d\u4e3a1\u5e76\u76f4\u63a5 \u9884\u6d4b\u56db\u4e2a\u503c \uff0c\u5373 \u4e24\u4e2aoffset\u548c\u9ad8\u5bbd \u3002\u53c2\u8003 FCOS , \u5c06\u6bcf\u4e2a\u76ee\u6807\u4e2d\u5fc3\u5b9a\u4f4d\u6b63\u6837\u672c\u5e76\u9884\u5b9a\u4e49\u4e00\u4e2a\u5c3a\u5ea6\u8303\u56f4\u4ee5\u4fbf\u4e8e\u5bf9\u6bcf\u4e2a\u76ee\u6807\u6307\u6d3e FPN anchor\u7684\u7f3a\u70b9\uff1a anchor\u96c6\u5408\u5b58\u5728\u6570\u636e\u76f8\u5173\u6027\uff0c\u6cdb\u5316\u6027\u80fd\u8f83\u5dee\u3002 anchor\u673a\u5236\u63d0\u9ad8\u4e86\u68c0\u6d4b\u5934\u7684\u590d\u6742\u6027 \u6539\u8fdb\u56db\uff1aMulti positives\uff1a\u53c2\u8003 FCOS \u5bf9\u6bcf\u4e2a\u76ee\u6807\u8d4b\u4e88\u591a\u4e2a\u6b63\u6837\u672c\uff1f\uff1f\uff1f \uff0c\u672c\u6587\u7b80\u5355\u7684\u8d4b\u4e88\u4e2d\u5fc33x3\u533a\u57df\u4e3a\u6b63\u6837\u672c\u3002 \u6539\u8fdb\u4e94\uff1aSimOTA \u5148\u8fdb\u7684\u6807\u7b7e\u5206\u914d OTA\u7814\u7a76\uff1f \u9009\u62e9OTA\u4e3a\u5019\u9009\u6807\u7b7e\u5206\u914d\u7b56\u7565 \uff08\u5c06\u5176\u7b80\u5316\u4e3a\u52a8\u6001top-k\u7b56\u7565\u4ee5\u5f97\u5230\u4e00\u4e2a\u8fd1\u4f3c\u89e3\u201cSimOTA\u201d \u8fd9\u4e0d\u4ec5\u53ef\u4ee5\u964d\u4f4e\u8bad\u7ec3\u65f6\u95f4\uff0c\u540c\u65f6\u53ef\u4ee5\u907f\u514d\u989d\u5916\u7684\u8d85\u53c2\u95ee\u9898\u3002 \u6539\u8fdb\u516d\uff08\u4f46\u672a\u5305\u542b\uff09\uff1a\u53c2\u8003 PSS \u6dfb\u52a0\u989d\u5916\u7684\u5377\u79ef\u5c42\uff0cone-to-one \u6807\u7b7e\u5206\u914d\u548cstop gradient,\u4f7f\u5176\u8fdb\u5316\u6210\u7aef\u5230\u7aef\u5f62\u5f0f \u4f7f\u7528 \u6df1\u5ea6\u5377\u79ef \u6784\u5efaYOLOX-nano,\u8bad\u7ec3\u5c0f\u6a21\u578b\u65f6\u79fb\u9664MixUp,\u5f31\u5316Mosaic\u53ef\u63d0\u9ad8\u6a21\u578b\u6027\u80fd","title":"improvement"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/","text":"9.14 TPH-YOLOV5 \u00b6 \u4f5c\u8005\u5355\u4f4d: \u5317\u4eac\u822a\u7a7a\u822a\u5929\u5927\u5b66 \u8bba\u6587\u94fe\u63a5\uff1a https://arxiv.org/abs/2108.11539 \u7b14\u8bb0\u53c2\u8003\u516c\u4f17\u53f7\u3010\u96c6\u667a\u4e66\u7ae5\u3011: https://mp.weixin.qq.com/s/1itG2bVUbuLC0g7mX5VLGA 1. Data Augmentation: \u00b6 1.1 \u5168\u5c40\u6570\u636e\u589e\u5f3a \u00b6 Photometric \uff1a\u968f\u673a\u4eae\u5ea6\u3001\u5bf9\u6bd4\u5ea6\u3001\u8272\u8c03\u3001\u9971\u548c\u5ea6\u3001\u566a\u58f0 Geometric : \u968f\u673a\u6269\u5c55\u3001\u88c1\u526a\u3001\u7ffb\u8f6c 1.2 \u7279\u6b8a\u6570\u636e\u589e\u5f3a \u00b6 Mixup \uff1a\u968f\u673a\u4e24\u5f20\u56fe\u7247\u52a0\u6743\u6c42\u548c\uff0c\u6807\u7b7e\u4e5f\u5bf9\u5e94\u52a0\u6743\u6c42\u548c CutMix \uff1a \u4f7f\u7528\u53e6\u4e00\u4e2a\u56fe\u50cf\u7684\u533a\u57df\u8986\u76d6\u88ab\u906e\u6321\u7684\u533a\u57df Mosaic \uff1a\u62fc\u63a54\u5e45\u56fe\u50cf 2.Multi-Model Ensemble Method \u00b6 \u7531\u4e8e\u6743\u91cd\u66f4\u65b0\u7684\u968f\u673a\u6027\uff0c\u6bcf\u6b21\u8bad\u7ec3\u90fd\u4f1a\u5e26\u6765\u4e00\u5b9a\u5076\u7136\u6027\uff0c\u4f7f\u5f97\u6a21\u578b\u6709\u4e86\u4e00\u4e2a \u9ad8\u65b9\u5dee \u3002 \u51cf\u5c11\u6a21\u578b\u65b9\u5dee\u7684\u4e00\u4e2a\u6210\u529f\u65b9\u6cd5\u662f\u8bad\u7ec3\u591a\u4e2a\u6a21\u578b\u800c\u4e0d\u662f\u5355\u4e00\u6a21\u578b\uff0c\u5e76\u7ed3\u5408\u8fd9\u4e9b\u6a21\u578b\u7684\u9884\u6d4b\u3002 \u9488\u5bf9\u4e0d\u540c\u7684\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\uff0c\u67093\u79cd\u4e0d\u540c\u7684 ensemble boxes \u65b9\u6cd5: NMS:\u975e\u6781\u5927\u503c\u6291\u5236\uff0c\u5bf9\u4e8e\u91cd\u5408\u7684\u6846\u7ed9\u5b9a\u91cd\u5408\u5ea6\u9608\u503cIOU\uff0c\u5927\u4e8e\u9608\u503c\u53d6\u6700\u9ad8\u7f6e\u4fe1\u5ea6\u3002 Soft-NMS: \u5b83\u6839\u636eIoU\u503c\u5bf9\u76f8\u90bb\u8fb9\u754cbox\u7684\u7f6e\u4fe1\u5ea6\u8bbe\u7f6e\u8870\u51cf\u51fd\u6570 Weighted Boxed Fusion(WBF):\u5c06\u6240\u6709\u6846\u5408\u5e76\u5f62\u6210\u6700\u7ec8\u7ed3\u679c\u3002 3. Object Detection \u00b6 BackBone\uff1a VGG,ResNet,DenseNet,MobileNet,EfficientNet,CSPDarkNet53, Swin-Transformer Neck: FPN,PANet,NaS-FPN,BiFPN,ASFF,SAM,SPP,ASPP,RFB,CBAM Head: One-Stage Two-Stage 4. Details \u00b6 \u67b6\u6784\uff1a \u589e\u52a0\u5fae\u5c0f\u7269\u4f53\u68c0\u6d4b\u5934 \u00b6 \uff08head 1)\u7531\u9ad8\u5206\u8fa8feature-map\u751f\u6210 Transformer encoder block \u00b6 \u4e0eCSPDarknet53\u4e2d\u539f\u6709\u7684bottleneck blocks\u76f8\u6bd4\uff0c\u4f5c\u8005\u8ba4\u4e3aTransformer encoder block\u53ef\u4ee5\u6355\u83b7\u5168\u5c40\u4fe1\u606f\u548c\u4e30\u5bcc\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002 \u6bcf\u4e2aTransformer encoder block\u5305\u542b2\u4e2a\u5b50\u5c42\u3002\u7b2c1\u5b50\u5c42\u4e3amulti-head attention layer\uff0c\u7b2c2\u5b50\u5c42(MLP)\u4e3a\u5168\u8fde\u63a5\u5c42\u3002\u6bcf\u4e2a\u5b50\u5c42\u4e4b\u95f4\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\u3002Transformer encoder block\u589e\u52a0\u4e86\u6355\u83b7\u4e0d\u540c\u5c40\u90e8\u4fe1\u606f\u7684\u80fd\u529b\u3002\u5b83\u8fd8\u53ef\u4ee5\u5229\u7528\u81ea\u6ce8\u610f\u529b\u673a\u5236\u6765\u6316\u6398\u7279\u5f81\u8868\u5f81\u6f5c\u80fd\u3002 Convolutional block attention module (CBAM) \u00b6 Self-trained classifier \u00b6 \u901a\u8fc7\u88c1\u526aground-truth\u8fb9\u754c\u6846\u5e76\u5c06\u6bcf\u4e2a\u56fe\u50cfpatch\u7684\u5927\u5c0f\u8c03\u6574\u4e3a6464\u6765\u6784\u5efa\u8bad\u7ec3\u96c6\u3002\u7136\u540e\u9009\u62e9ResNet18\u4f5c\u4e3a\u5206\u7c7b\u5668\u7f51\u7edc\u3002 \u6ce8\uff1a\u6dfb\u52a0\u68c0\u6d4b\u5934\u589e\u52a0\u8ba1\u7b97\u91cf\uff0c\u91c7\u7528transformer encoder blocks\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002","title":"\u5c0f\u76ee\u6807\u68c0\u6d4b\u738b\u8005TPH-YOLOV5"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#914-tph-yolov5","text":"\u4f5c\u8005\u5355\u4f4d: \u5317\u4eac\u822a\u7a7a\u822a\u5929\u5927\u5b66 \u8bba\u6587\u94fe\u63a5\uff1a https://arxiv.org/abs/2108.11539 \u7b14\u8bb0\u53c2\u8003\u516c\u4f17\u53f7\u3010\u96c6\u667a\u4e66\u7ae5\u3011: https://mp.weixin.qq.com/s/1itG2bVUbuLC0g7mX5VLGA","title":"9.14 TPH-YOLOV5"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#1-data-augmentation","text":"","title":"1. Data Augmentation:"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#11","text":"Photometric \uff1a\u968f\u673a\u4eae\u5ea6\u3001\u5bf9\u6bd4\u5ea6\u3001\u8272\u8c03\u3001\u9971\u548c\u5ea6\u3001\u566a\u58f0 Geometric : \u968f\u673a\u6269\u5c55\u3001\u88c1\u526a\u3001\u7ffb\u8f6c","title":"1.1 \u5168\u5c40\u6570\u636e\u589e\u5f3a"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#12","text":"Mixup \uff1a\u968f\u673a\u4e24\u5f20\u56fe\u7247\u52a0\u6743\u6c42\u548c\uff0c\u6807\u7b7e\u4e5f\u5bf9\u5e94\u52a0\u6743\u6c42\u548c CutMix \uff1a \u4f7f\u7528\u53e6\u4e00\u4e2a\u56fe\u50cf\u7684\u533a\u57df\u8986\u76d6\u88ab\u906e\u6321\u7684\u533a\u57df Mosaic \uff1a\u62fc\u63a54\u5e45\u56fe\u50cf","title":"1.2 \u7279\u6b8a\u6570\u636e\u589e\u5f3a"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#2multi-model-ensemble-method","text":"\u7531\u4e8e\u6743\u91cd\u66f4\u65b0\u7684\u968f\u673a\u6027\uff0c\u6bcf\u6b21\u8bad\u7ec3\u90fd\u4f1a\u5e26\u6765\u4e00\u5b9a\u5076\u7136\u6027\uff0c\u4f7f\u5f97\u6a21\u578b\u6709\u4e86\u4e00\u4e2a \u9ad8\u65b9\u5dee \u3002 \u51cf\u5c11\u6a21\u578b\u65b9\u5dee\u7684\u4e00\u4e2a\u6210\u529f\u65b9\u6cd5\u662f\u8bad\u7ec3\u591a\u4e2a\u6a21\u578b\u800c\u4e0d\u662f\u5355\u4e00\u6a21\u578b\uff0c\u5e76\u7ed3\u5408\u8fd9\u4e9b\u6a21\u578b\u7684\u9884\u6d4b\u3002 \u9488\u5bf9\u4e0d\u540c\u7684\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\uff0c\u67093\u79cd\u4e0d\u540c\u7684 ensemble boxes \u65b9\u6cd5: NMS:\u975e\u6781\u5927\u503c\u6291\u5236\uff0c\u5bf9\u4e8e\u91cd\u5408\u7684\u6846\u7ed9\u5b9a\u91cd\u5408\u5ea6\u9608\u503cIOU\uff0c\u5927\u4e8e\u9608\u503c\u53d6\u6700\u9ad8\u7f6e\u4fe1\u5ea6\u3002 Soft-NMS: \u5b83\u6839\u636eIoU\u503c\u5bf9\u76f8\u90bb\u8fb9\u754cbox\u7684\u7f6e\u4fe1\u5ea6\u8bbe\u7f6e\u8870\u51cf\u51fd\u6570 Weighted Boxed Fusion(WBF):\u5c06\u6240\u6709\u6846\u5408\u5e76\u5f62\u6210\u6700\u7ec8\u7ed3\u679c\u3002","title":"2.Multi-Model Ensemble Method"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#3-object-detection","text":"BackBone\uff1a VGG,ResNet,DenseNet,MobileNet,EfficientNet,CSPDarkNet53, Swin-Transformer Neck: FPN,PANet,NaS-FPN,BiFPN,ASFF,SAM,SPP,ASPP,RFB,CBAM Head: One-Stage Two-Stage","title":"3. Object Detection"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#4-details","text":"\u67b6\u6784\uff1a","title":"4. Details"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#_1","text":"\uff08head 1)\u7531\u9ad8\u5206\u8fa8feature-map\u751f\u6210","title":"\u589e\u52a0\u5fae\u5c0f\u7269\u4f53\u68c0\u6d4b\u5934"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#transformer-encoder-block","text":"\u4e0eCSPDarknet53\u4e2d\u539f\u6709\u7684bottleneck blocks\u76f8\u6bd4\uff0c\u4f5c\u8005\u8ba4\u4e3aTransformer encoder block\u53ef\u4ee5\u6355\u83b7\u5168\u5c40\u4fe1\u606f\u548c\u4e30\u5bcc\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002 \u6bcf\u4e2aTransformer encoder block\u5305\u542b2\u4e2a\u5b50\u5c42\u3002\u7b2c1\u5b50\u5c42\u4e3amulti-head attention layer\uff0c\u7b2c2\u5b50\u5c42(MLP)\u4e3a\u5168\u8fde\u63a5\u5c42\u3002\u6bcf\u4e2a\u5b50\u5c42\u4e4b\u95f4\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\u3002Transformer encoder block\u589e\u52a0\u4e86\u6355\u83b7\u4e0d\u540c\u5c40\u90e8\u4fe1\u606f\u7684\u80fd\u529b\u3002\u5b83\u8fd8\u53ef\u4ee5\u5229\u7528\u81ea\u6ce8\u610f\u529b\u673a\u5236\u6765\u6316\u6398\u7279\u5f81\u8868\u5f81\u6f5c\u80fd\u3002","title":"Transformer encoder block"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#convolutional-block-attention-module-cbam","text":"","title":"Convolutional block attention module (CBAM)"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%B0%8F%E7%9B%AE%E6%A0%87%E5%B0%81%E7%A5%9ETPH-YOLOV5/#self-trained-classifier","text":"\u901a\u8fc7\u88c1\u526aground-truth\u8fb9\u754c\u6846\u5e76\u5c06\u6bcf\u4e2a\u56fe\u50cfpatch\u7684\u5927\u5c0f\u8c03\u6574\u4e3a6464\u6765\u6784\u5efa\u8bad\u7ec3\u96c6\u3002\u7136\u540e\u9009\u62e9ResNet18\u4f5c\u4e3a\u5206\u7c7b\u5668\u7f51\u7edc\u3002 \u6ce8\uff1a\u6dfb\u52a0\u68c0\u6d4b\u5934\u589e\u52a0\u8ba1\u7b97\u91cf\uff0c\u91c7\u7528transformer encoder blocks\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002","title":"Self-trained classifier"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%8D%B3%E6%8F%92%E5%8D%B3%E7%94%A8/UMOP/","text":"UMOP\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668\u6a21\u5757\uff0c\u5bf9\u91d1\u5b57\u5854\u5c42\u7ea7\u76ee\u6807\u5206\u5e03\u4e0d\u5e73\u8861\u7684\u63a2\u7d22 \u00b6 \u53c2\u8003\uff1a\u6781\u5e02\u5e73\u53f0 \u4f5c\u8005\u5355\u4f4d\uff1a \u767e\u5ea6 \u6587\u7ae0\u94fe\u63a5\uff1a https://arxiv.org/pdf/2109.07217.pdf \u4ee3\u7801\u94fe\u63a5\uff1a https://github.com/zimoqingfeng/UMOP Abstract \u00b6 \u5728\u76ee\u6807\u68c0\u6d4b\u9886\u57df\uff0c\u591a\u7ea7\u9884\u6d4b(\u6bd4\u5982FPN\u3001YOLO)\u4e0e\u91cd\u91c7\u6837\u6280\u672f(\u5982Focal Loss\u3001ATSS)\u6781\u5927\u7684\u63d0\u5347\u4e86\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668\u6027\u80fd\u3002\u7136\u800c\uff0c\u5982\u4f55\u901a\u8fc7\u9010\u7ea7\u4f18\u5316\u7279\u5f81\u91d1\u5b57\u5854\u63d0\u5347\u6027\u80fd\u5c1a\u672a\u8fdb\u884c\u63a2\u7d22\u3002\u6211\u4eec\u53d1\u73b0\uff1a \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u540c\u91d1\u5b57\u5854\u5c42\u7ea7\u7684\u6b63\u8d1f\u6837\u4f8b\u6bd4\u4f8b\u662f\u4e0d\u540c\u7684\uff0c\u5373\u5b58\u5728Level Imbalance \uff0c\u800c\u8fd9\u5c1a\u672a\u88ab\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668\u89e3\u51b3\u3002 \u672c\u6587\u4e3b\u8981\u7531\u4ee5\u4e0b\u4e09\u70b9\u8d21\u732e\uff1a \u672c\u6587\u9996\u6b21\u8bc1\u5b9e\uff1a FPN\u6027\u80fd\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4f1a\u53d7\u5230Level Imbalanced\u5f71\u54cd \uff1b \u96c6\u6210\u4e0e\u6240\u63d0UMOP\uff0c\u73b0\u6709\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668\u53ef\u4ee5\u7528\u66f4\u5c11\u7684\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570\u53d6\u5f97~1.5AP\u6307\u6807\u63d0\u5347\uff0c\u4e14\u4e0d\u4f1a\u5bfc\u81f4\u989d\u5916\u7684\u8ba1\u7b97\u8d1f\u62c5\uff1b \u5728COCO test-dev\u6570\u636e\u96c6\u4e0a\uff0c\u6700\u4f73\u6a21\u578b\u53d6\u5f97\u4e86\u622a\u81f3\u76ee\u524d\u6700\u9ad8\u768455.1AP\u6307\u6807(\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668)\u3002 Details \u00b6 \u5e26\u56fa\u5b9a\u8d85\u53c2\u7684FocalLoss\u4e0d\u80fd\u540c\u65f6\u5bf9\u6240\u6709\u91d1\u5b57\u5854\u5c42\u7ea7\u505a\u597d\u6700\u597d\u5747\u8861\u3002 Level-wise Resampling Paradigm(LRP) \u00b6 \u57fa\u4e8e\u72ec\u7acb\u91cd\u91c7\u6837\u8003\u91cf\uff0c \u5bf9\u6bcf\u4e2a\u91d1\u5b57\u5854\u5c42\u7ea7\u8bbe\u7f6e\u4e0d\u540c\u7684\u5206\u7c7b\u635f\u5931 LRP\u662f\u4e00\u79cd\u89e3\u51b3\u8de8\u4e0d\u540c\u91d1\u5b57\u5854\u5c42\u7ea7\u91c7\u6837\u4e0d\u5e73\u8861\u95ee\u9898\u7684\u591a\u7ea7\u4f18\u5316\u6846\u67b6\uff0c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u91d1\u5b57\u5854\u5c42\u7ea7 \u72ec\u7acb\u7684\u8ba1\u7b97\u5206\u7c7b\u635f\u5931 Progressive Focal Loss(PFL) \u00b6 \u5b83\u57fa\u4e8e\u6bcf\u4e2a\u91d1\u5b57\u5854\u5c42\u7ea7\u7684\u6b63\u6837\u4f8b\u9884\u6d4b\u6e10\u8fdb\u7684\u8c03\u6574\u96be\u4f8b\u6316\u6398\u5ea6\u3002 \u4ece\u5206\u800c\u6cbb\u4e4b\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684 \u52a8\u6001\u8d85\u53c2\u8c03\u6574\u7b56\u7565 \uff0c\u5b83\u53ef\u4ee5\u6309\u7167\u6bcf\u4e2a\u91d1\u5b57\u5854\u5c42\u7ea7\u7684\u6536\u655b\u4f4d\u7f6e\u52a8\u6001\u8c03\u6574\u8d85\u53c2\u3002\u5bf9\u4e8e\u4e0d\u540c\u5c42\u7ea7\u7684\u4e0d\u5e73\u8861\u6027\uff0c\u771f\u6b63\u9700\u8981\u7684\u8d85\u53c2\u6570\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u3002","title":"\u767e\u5ea6\u5f00\u6e90UMOP\u89e3\u51b3\u7279\u5f81\u5c42gt\u4e0d\u5339\u914d"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%8D%B3%E6%8F%92%E5%8D%B3%E7%94%A8/UMOP/#umop","text":"\u53c2\u8003\uff1a\u6781\u5e02\u5e73\u53f0 \u4f5c\u8005\u5355\u4f4d\uff1a \u767e\u5ea6 \u6587\u7ae0\u94fe\u63a5\uff1a https://arxiv.org/pdf/2109.07217.pdf \u4ee3\u7801\u94fe\u63a5\uff1a https://github.com/zimoqingfeng/UMOP","title":"UMOP\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668\u6a21\u5757\uff0c\u5bf9\u91d1\u5b57\u5854\u5c42\u7ea7\u76ee\u6807\u5206\u5e03\u4e0d\u5e73\u8861\u7684\u63a2\u7d22"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%8D%B3%E6%8F%92%E5%8D%B3%E7%94%A8/UMOP/#abstract","text":"\u5728\u76ee\u6807\u68c0\u6d4b\u9886\u57df\uff0c\u591a\u7ea7\u9884\u6d4b(\u6bd4\u5982FPN\u3001YOLO)\u4e0e\u91cd\u91c7\u6837\u6280\u672f(\u5982Focal Loss\u3001ATSS)\u6781\u5927\u7684\u63d0\u5347\u4e86\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668\u6027\u80fd\u3002\u7136\u800c\uff0c\u5982\u4f55\u901a\u8fc7\u9010\u7ea7\u4f18\u5316\u7279\u5f81\u91d1\u5b57\u5854\u63d0\u5347\u6027\u80fd\u5c1a\u672a\u8fdb\u884c\u63a2\u7d22\u3002\u6211\u4eec\u53d1\u73b0\uff1a \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u540c\u91d1\u5b57\u5854\u5c42\u7ea7\u7684\u6b63\u8d1f\u6837\u4f8b\u6bd4\u4f8b\u662f\u4e0d\u540c\u7684\uff0c\u5373\u5b58\u5728Level Imbalance \uff0c\u800c\u8fd9\u5c1a\u672a\u88ab\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668\u89e3\u51b3\u3002 \u672c\u6587\u4e3b\u8981\u7531\u4ee5\u4e0b\u4e09\u70b9\u8d21\u732e\uff1a \u672c\u6587\u9996\u6b21\u8bc1\u5b9e\uff1a FPN\u6027\u80fd\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4f1a\u53d7\u5230Level Imbalanced\u5f71\u54cd \uff1b \u96c6\u6210\u4e0e\u6240\u63d0UMOP\uff0c\u73b0\u6709\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668\u53ef\u4ee5\u7528\u66f4\u5c11\u7684\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570\u53d6\u5f97~1.5AP\u6307\u6807\u63d0\u5347\uff0c\u4e14\u4e0d\u4f1a\u5bfc\u81f4\u989d\u5916\u7684\u8ba1\u7b97\u8d1f\u62c5\uff1b \u5728COCO test-dev\u6570\u636e\u96c6\u4e0a\uff0c\u6700\u4f73\u6a21\u578b\u53d6\u5f97\u4e86\u622a\u81f3\u76ee\u524d\u6700\u9ad8\u768455.1AP\u6307\u6807(\u4e00\u9636\u6bb5\u68c0\u6d4b\u5668)\u3002","title":"Abstract"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%8D%B3%E6%8F%92%E5%8D%B3%E7%94%A8/UMOP/#details","text":"\u5e26\u56fa\u5b9a\u8d85\u53c2\u7684FocalLoss\u4e0d\u80fd\u540c\u65f6\u5bf9\u6240\u6709\u91d1\u5b57\u5854\u5c42\u7ea7\u505a\u597d\u6700\u597d\u5747\u8861\u3002","title":"Details"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%8D%B3%E6%8F%92%E5%8D%B3%E7%94%A8/UMOP/#level-wise-resampling-paradigmlrp","text":"\u57fa\u4e8e\u72ec\u7acb\u91cd\u91c7\u6837\u8003\u91cf\uff0c \u5bf9\u6bcf\u4e2a\u91d1\u5b57\u5854\u5c42\u7ea7\u8bbe\u7f6e\u4e0d\u540c\u7684\u5206\u7c7b\u635f\u5931 LRP\u662f\u4e00\u79cd\u89e3\u51b3\u8de8\u4e0d\u540c\u91d1\u5b57\u5854\u5c42\u7ea7\u91c7\u6837\u4e0d\u5e73\u8861\u95ee\u9898\u7684\u591a\u7ea7\u4f18\u5316\u6846\u67b6\uff0c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u91d1\u5b57\u5854\u5c42\u7ea7 \u72ec\u7acb\u7684\u8ba1\u7b97\u5206\u7c7b\u635f\u5931","title":"Level-wise Resampling Paradigm(LRP)"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%8D%B3%E6%8F%92%E5%8D%B3%E7%94%A8/UMOP/#progressive-focal-losspfl","text":"\u5b83\u57fa\u4e8e\u6bcf\u4e2a\u91d1\u5b57\u5854\u5c42\u7ea7\u7684\u6b63\u6837\u4f8b\u9884\u6d4b\u6e10\u8fdb\u7684\u8c03\u6574\u96be\u4f8b\u6316\u6398\u5ea6\u3002 \u4ece\u5206\u800c\u6cbb\u4e4b\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684 \u52a8\u6001\u8d85\u53c2\u8c03\u6574\u7b56\u7565 \uff0c\u5b83\u53ef\u4ee5\u6309\u7167\u6bcf\u4e2a\u91d1\u5b57\u5854\u5c42\u7ea7\u7684\u6536\u655b\u4f4d\u7f6e\u52a8\u6001\u8c03\u6574\u8d85\u53c2\u3002\u5bf9\u4e8e\u4e0d\u540c\u5c42\u7ea7\u7684\u4e0d\u5e73\u8861\u6027\uff0c\u771f\u6b63\u9700\u8981\u7684\u8d85\u53c2\u6570\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u3002","title":"Progressive Focal Loss(PFL)"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/Soft%20label/","text":"\u4ece\u6807\u7b7e\u5e73\u6ed1\u548c\u77e5\u8bc6\u84b8\u998f\u7406\u89e3Soft Label \u00b6 \u53c2\u8003\u516c\u4f17\u53f7\uff1a Smarter \u53c2\u8003\u94fe\u63a5\uff1a https://zhuanlan.zhihu.com/p/101553787 https://zhuanlan.zhihu.com/p/353472061 Hard Label vs Soft Label \u00b6 \u6211\u4eec\u5e73\u5e38\u4e00\u822c\u610f\u4e49\u4e0a\u7684\u6807\u7b7e\u591a\u4e3ahard label\uff0c\u4e3a\u4e00\u4e2a\u6807\u6ce8\u6846\u8d4b\u4e88\u5355\u4e00\u7684\u6807\u7b7e\u3002 hard label\u66f4\u5bb9\u6613\u6807\u6ce8\uff0c\u4f46\u662f\u4f1a\u4e22\u5931\u7c7b\u5185\u3001\u7c7b\u95f4\u7684\u5173\u8054\uff0c\u5e76\u4e14\u5f15\u5165\u566a\u58f0\u3002 soft label\u7ed9\u6a21\u578b\u5e26\u6765\u66f4\u5f3a\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u643a\u5e26\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u5bf9\u566a\u58f0\u66f4\u52a0\u9c81\u68d2\uff0c\u4f46\u662f\u83b7\u53d6\u96be\u5ea6\u5927\u3002 \u7531\u6b64\u5f15\u51fa label smoothing(\u6807\u7b7e\u5e73\u6ed1) \u6807\u7b7e\u5e73\u6ed1 \u00b6 \u7b80\u5355\u7684\u89e3\u91ca\u662f\uff0c\u5b83\u5c06\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u76ee\u6807\u4ece\u201c1\u201d\u8c03\u6574\u4e3a\u201c1-label smoothing adjustment\u201d\uff0c\u8fd9\u610f\u5473\u7740\u795e\u7ecf\u7f51\u7edc\u88ab\u8bad\u7ec3\u5f97\u5bf9\u81ea\u5df1\u7684\u7b54\u6848\u4e0d\u90a3\u4e48\u81ea\u4fe1\u3002\u9ed8\u8ba4\u503c\u901a\u5e38\u662f 0.1\uff0c\u8fd9\u610f\u5473\u7740\u76ee\u6807\u7b54\u6848\u662f 0.9(1 - 0.1)\u800c\u4e0d\u662f 1\u3002 \u6b63\u5982\u56fe\u50cf\u6240\u663e\u793a\u7684\uff0c\u6807\u7b7e\u5e73\u6ed1\u4e3a\u6700\u7ec8\u7684\u6fc0\u6d3b\u4ea7\u751f\u4e86\u66f4\u7d27\u5bc6\u7684\u805a\u7c7b\u548c\u66f4\u5927\u7684\u7c7b\u522b\u95f4\u7684\u5206\u79bb\u3002 \u77e5\u8bc6\u84b8\u998f \u00b6 \u6a21\u578b\u538b\u7f29\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u6a21\u578b\u538b\u7f29\u5927\u4f53\u4e0a\u53ef\u4ee5\u5206\u4e3a 5 \u79cd\uff1a \u6a21\u578b\u526a\u679d \uff1a\u5373\u79fb\u9664\u5bf9\u7ed3\u679c\u4f5c\u7528\u8f83\u5c0f\u7684\u7ec4\u4ef6\uff0c\u5982\u51cf\u5c11 head \u7684\u6570\u91cf\u548c\u53bb\u9664\u4f5c\u7528\u8f83\u5c11\u7684\u5c42\uff0c\u5171\u4eab\u53c2\u6570\u7b49\uff0cALBERT\u5c5e\u4e8e\u8fd9\u79cd\uff1b \u91cf\u5316 \uff1a\u6bd4\u5982\u5c06 float32 \u964d\u5230 float8\uff1b \u77e5\u8bc6\u84b8\u998f\uff1a\u5c06 teacher \u7684\u80fd\u529b\u84b8\u998f\u5230 student\u4e0a\uff0c\u4e00\u822c student \u4f1a\u6bd4 teacher \u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u5927\u800c\u6df1\u7684\u7f51\u7edc\u84b8\u998f\u5230\u4e00\u4e2a\u5c0f\u7684\u7f51\u7edc\uff0c\u4e5f\u53ef\u4ee5\u628a\u96c6\u6210\u7684\u7f51\u7edc\u84b8\u998f\u5230\u4e00\u4e2a\u5c0f\u7684\u7f51\u7edc\u4e0a\u3002 \u53c2\u6570\u5171\u4eab \uff1a\u901a\u8fc7\u5171\u4eab\u53c2\u6570\uff0c\u8fbe\u5230\u51cf\u5c11\u7f51\u7edc\u53c2\u6570\u7684\u76ee\u7684\uff0c\u5982 ALBERT \u5171\u4eab\u4e86 Transformer \u5c42\uff1b \u53c2\u6570\u77e9\u9635\u8fd1\u4f3c \uff1a\u901a\u8fc7\u77e9\u9635\u7684\u4f4e\u79e9\u5206\u89e3\u6216\u5176\u4ed6\u65b9\u6cd5\u8fbe\u5230\u964d\u4f4e\u77e9\u9635\u53c2\u6570\u7684\u76ee\u7684\uff1b \u4e5f\u5c31\u662f\u8bf4\uff0c\u77e5\u8bc6\u84b8\u998f\u5c31\u662f\u5148\u8bad\u7ec3\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u7684\u7f51\u7edc\uff08\u5ef6\u65f6\u957f\uff0c\u6a21\u578b\u5927\uff0c\u53c2\u6570\u591a\uff09\uff0c\u79f0\u4e3aTeacher\uff0c\u4ee5Teacher\u7684\u8f93\u5165\u8f93\u51fa\u4f5c\u4e3a\u8bad\u7ec3\u6837\u672c\u4e0e\u6807\u7b7e\u53bb\u8bad\u7ec3\u53e6\u4e00\u4e2a\u7f51\u7edc\uff08\u6a21\u578b\u5c0f\uff0c\u5ef6\u65f6\u5c0f\uff09 \u57fa\u672c\u6846\u67b6 \u00b6 \u4e3a\u4ec0\u4e48\u4e0d\u53bb\u76f4\u63a5\u62ff\u539f\u6709\u7684\u6807\u7b7e\u6570\u636e\u8bad\u7ec3Student\uff0c\u800c\u662f\u8981\u5148\u8bad\u7ec3\u4e00\u4e2aTeacher\u518d\u62ffTeacher\u7684\u7ed3\u679c\u4f5c\u4e3a\u6807\u7b7e\uff1f \u00b6 \u56e0\u4e3a\u7f51\u7edc\u7684\u8f93\u51fa\u7ecf\u8fc7softmax\uff0c\u5c06\u9884\u6d4b\u7ed3\u679c\u8f6c\u5316\u4e3a\u6982\u7387\u7684\u5f62\u5f0f\uff0c\u5bf9\u4e8e\u4e00\u5f20\u56fe\u7247\uff0c\u6bcf\u79cd\u7ed3\u679c\u90fd\u6709\u5bf9\u5e94\u7684\u6982\u7387\u800c\u4e0d\u662f\u7edd\u5bf9\u7684\u4e00\u79cd\u7269\u4f53\uff0c\u800c\u5728\u4f20\u7edf\u7684\u8bad\u7ec3\u8fc7\u7a0b(Hard-target)\u4e2d\uff0c\u6240\u6709\u8d1f\u6807\u7b7e\u90fd\u88ab\u7edf\u4e00\u5bf9\u5f85\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u77e5\u8bc6\u84b8\u998f\u7684\u8bad\u7ec3\u65b9\u5f0f\u4f7f\u5f97\u6bcf\u4e2a\u6837\u672c\u7ed9Student\u6a21\u578b\u5e26\u6765\u7684\u4fe1\u606f\u91cf\u5927\u4e8e\u4f20\u7edf\u7684\u8bad\u7ec3\u65b9\u5f0f\u3002\u8fd9\u7ed9Student\u7f51\u7edc\u5230\u6765\u66f4\u591a\u7684\u53ef\u5b66\u4e60\u4fe1\u606f\u3002\u5373Student\u7684\u8bad\u7ec3\u6807\u7b7e\u4e3asoft-target\u800c\u4e0d\u662fhard label softmax\u5904\u7406\u540e\u7684\u6982\u7387\u6709\u4e9b\u4f1a\u5341\u5206\u63a5\u8fd1\u96f6\uff0c\u5bf9\u7f51\u7edc\u7684\u4f5c\u7528\u51e0\u4e4e\u4e3a\u96f6 \u00b6 \u539fsoftmax\uff1a $$ s = \\frac{exp(z_i)}{\\sum_jexp(z_j)} $$ \u52a0\u5165\u6e29\u5ea6T $$ s = \\frac{exp(z_i/T)}{\\sum_jexp(z_j/T)} $$ \u8fd9\u53ef\u4ee5\u63d0\u9ad8\u8d1f\u6837\u672c\u7684\u6982\u7387 \u5176\u4e2dq i \u662f\u6bcf\u4e2a\u7c7b\u522b\u8f93\u51fa\u7684\u6982\u7387\uff0cz i \u662f\u6bcf\u4e2a\u7c7b\u522b\u8f93\u51fa\u7684 logits\uff0cT\u5c31\u662f \u6e29\u5ea6 \u3002\u5f53\u6e29\u5ea6T=1\u65f6\uff0c\u8fd9\u5c31\u662f\u6807\u51c6\u7684 Softmax \u516c\u5f0f\u3002T\u8d8a\u9ad8\uff0csoftmax\u7684output probability distribution\u8d8a\u8d8b\u4e8e\u5e73\u6ed1\uff0c\u5176\u5206\u5e03\u7684\u71b5\u8d8a\u5927\uff0c\u8d1f\u6807\u7b7e\u643a\u5e26\u7684\u4fe1\u606f\u4f1a\u88ab\u76f8\u5bf9\u5730\u653e\u5927\uff0c\u6a21\u578b\u8bad\u7ec3\u5c06\u66f4\u52a0\u5173\u6ce8\u8d1f\u6807\u7b7e\u3002 \u6e29\u5ea6T\u6709\u8fd9\u6837\u51e0\u4e2a\u7279\u70b9\uff1a \u539f\u59cb\u7684softmax\u51fd\u6570\u662fT=1\u65f6\u7684\u7279\u4f8b\uff1bT<1\u65f6\uff0c\u6982\u7387\u5206\u5e03\u6bd4\u539f\u59cb\u66f4\"\u9661\u5ced\"\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53 T\\to0 T\\to0 \u65f6\uff0cSoftmax \u7684\u8f93\u51fa\u503c\u4f1a\u63a5\u8fd1\u4e8e Hard-target\uff1bT>1\u65f6\uff0c\u6982\u7387\u5206\u5e03\u6bd4\u539f\u59cb\u66f4\u201c\u5e73\u7f13\u201d\u3002 \u968f\u7740T\u7684\u589e\u52a0\uff0cSoftmax \u7684\u8f93\u51fa\u5206\u5e03\u8d8a\u6765\u8d8a\u5e73\u7f13\uff0c\u4fe1\u606f\u71b5\u4f1a\u8d8a\u6765\u8d8a\u5927\u3002\u6e29\u5ea6\u8d8a\u9ad8\uff0csoftmax\u4e0a\u5404\u4e2a\u503c\u7684\u5206\u5e03\u5c31\u8d8a\u5e73\u5747\uff0c\u601d\u8003\u6781\u7aef\u60c5\u51b5\uff0c\u5f53 {T=\\infty} {T=\\infty} \uff0c\u6b64\u65f6softmax\u7684\u503c\u662f\u5e73\u5747\u5206\u5e03\u7684\u3002 \u4e0d\u7ba1\u6e29\u5ea6 T T \u600e\u4e48\u53d6\u503c\uff0cSoft-target\u90fd\u6709\u5ffd\u7565\u76f8\u5bf9\u8f83\u5c0f\u7684 p_i p_i \uff08Teacher\u6a21\u578b\u5728\u6e29\u5ea6\u4e3aT\u65f6softmax\u8f93\u51fa\u5728\u7b2c i i \u7c7b\u4e0a\u7684\u503c)\u643a\u5e26\u7684\u4fe1\u606f\u7684\u503e\u5411\u3002 \u6240\u4ee5 \u5f53\u60f3\u4ece\u8d1f\u6807\u7b7e\u4e2d\u5b66\u5230\u4e00\u4e9b\u4fe1\u606f\u91cf\u7684\u65f6\u5019\uff0c\u6e29\u5ea6 T T \u5e94\u8c03\u9ad8\u4e00\u4e9b\uff1b \u5f53\u60f3\u51cf\u5c11\u8d1f\u6807\u7b7e\u7684\u5e72\u6270\u7684\u65f6\u5019\uff0c\u6e29\u5ea6 T T \u5e94\u8c03\u4f4e\u4e00\u4e9b\uff1b \u603b\u7684\u6765\u8bf4\uff0c T T \u7684\u9009\u62e9\u548cStudent\u6a21\u578b\u7684\u5927\u5c0f\u6709\u5173\uff0cStudent\u6a21\u578b\u53c2\u6570\u91cf\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\uff0c\u76f8\u5bf9\u6bd4\u8f83\u4f4e\u7684\u6e29\u5ea6\u5c31\u53ef\u4ee5\u4e86\u3002\u56e0\u4e3a\u53c2\u6570\u91cf\u5c0f\u7684\u6a21\u578b\u4e0d\u80fd\u5b66\u5230\u6240\u6709Teacher\u6a21\u578b\u7684\u77e5\u8bc6\uff0c\u6240\u4ee5\u53ef\u4ee5\u9002\u5f53\u5ffd\u7565\u6389\u4e00\u4e9b\u8d1f\u6807\u7b7e\u7684\u4fe1\u606f\u3002 \u6700\u540e\uff0c\u5728\u6574\u4e2a\u77e5\u8bc6\u84b8\u998f\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5148\u8ba9\u6e29\u5ea6 T T \u5347\u9ad8\uff0c\u7136\u540e\u5728\u6d4b\u8bd5\u9636\u6bb5\u6062\u590d\u201c\u4f4e\u6e29\u201c\uff08 T=1 T=1 )\uff0c\u4ece\u800c\u5c06\u539f\u6a21\u578b\u4e2d\u7684\u77e5\u8bc6\u63d0\u53d6\u51fa\u6765\uff0c\u56e0\u6b64\u5c06\u5176\u79f0\u4e3a\u662f\u84b8\u998f\u3002 \u7279\u5f81\u84b8\u998f \u672a\u5b8c\u5f85\u7eed......... \u00b6","title":"\u4ece\u6807\u7b7e\u5e73\u6ed1\u548c\u77e5\u8bc6\u84b8\u998f\u770bSoft Label"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/Soft%20label/#soft-label","text":"\u53c2\u8003\u516c\u4f17\u53f7\uff1a Smarter \u53c2\u8003\u94fe\u63a5\uff1a https://zhuanlan.zhihu.com/p/101553787 https://zhuanlan.zhihu.com/p/353472061","title":"\u4ece\u6807\u7b7e\u5e73\u6ed1\u548c\u77e5\u8bc6\u84b8\u998f\u7406\u89e3Soft Label"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/Soft%20label/#hard-label-vs-soft-label","text":"\u6211\u4eec\u5e73\u5e38\u4e00\u822c\u610f\u4e49\u4e0a\u7684\u6807\u7b7e\u591a\u4e3ahard label\uff0c\u4e3a\u4e00\u4e2a\u6807\u6ce8\u6846\u8d4b\u4e88\u5355\u4e00\u7684\u6807\u7b7e\u3002 hard label\u66f4\u5bb9\u6613\u6807\u6ce8\uff0c\u4f46\u662f\u4f1a\u4e22\u5931\u7c7b\u5185\u3001\u7c7b\u95f4\u7684\u5173\u8054\uff0c\u5e76\u4e14\u5f15\u5165\u566a\u58f0\u3002 soft label\u7ed9\u6a21\u578b\u5e26\u6765\u66f4\u5f3a\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u643a\u5e26\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u5bf9\u566a\u58f0\u66f4\u52a0\u9c81\u68d2\uff0c\u4f46\u662f\u83b7\u53d6\u96be\u5ea6\u5927\u3002 \u7531\u6b64\u5f15\u51fa label smoothing(\u6807\u7b7e\u5e73\u6ed1)","title":"Hard Label vs Soft Label"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/Soft%20label/#_1","text":"\u7b80\u5355\u7684\u89e3\u91ca\u662f\uff0c\u5b83\u5c06\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u76ee\u6807\u4ece\u201c1\u201d\u8c03\u6574\u4e3a\u201c1-label smoothing adjustment\u201d\uff0c\u8fd9\u610f\u5473\u7740\u795e\u7ecf\u7f51\u7edc\u88ab\u8bad\u7ec3\u5f97\u5bf9\u81ea\u5df1\u7684\u7b54\u6848\u4e0d\u90a3\u4e48\u81ea\u4fe1\u3002\u9ed8\u8ba4\u503c\u901a\u5e38\u662f 0.1\uff0c\u8fd9\u610f\u5473\u7740\u76ee\u6807\u7b54\u6848\u662f 0.9(1 - 0.1)\u800c\u4e0d\u662f 1\u3002 \u6b63\u5982\u56fe\u50cf\u6240\u663e\u793a\u7684\uff0c\u6807\u7b7e\u5e73\u6ed1\u4e3a\u6700\u7ec8\u7684\u6fc0\u6d3b\u4ea7\u751f\u4e86\u66f4\u7d27\u5bc6\u7684\u805a\u7c7b\u548c\u66f4\u5927\u7684\u7c7b\u522b\u95f4\u7684\u5206\u79bb\u3002","title":"\u6807\u7b7e\u5e73\u6ed1"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/Soft%20label/#_2","text":"\u6a21\u578b\u538b\u7f29\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u6a21\u578b\u538b\u7f29\u5927\u4f53\u4e0a\u53ef\u4ee5\u5206\u4e3a 5 \u79cd\uff1a \u6a21\u578b\u526a\u679d \uff1a\u5373\u79fb\u9664\u5bf9\u7ed3\u679c\u4f5c\u7528\u8f83\u5c0f\u7684\u7ec4\u4ef6\uff0c\u5982\u51cf\u5c11 head \u7684\u6570\u91cf\u548c\u53bb\u9664\u4f5c\u7528\u8f83\u5c11\u7684\u5c42\uff0c\u5171\u4eab\u53c2\u6570\u7b49\uff0cALBERT\u5c5e\u4e8e\u8fd9\u79cd\uff1b \u91cf\u5316 \uff1a\u6bd4\u5982\u5c06 float32 \u964d\u5230 float8\uff1b \u77e5\u8bc6\u84b8\u998f\uff1a\u5c06 teacher \u7684\u80fd\u529b\u84b8\u998f\u5230 student\u4e0a\uff0c\u4e00\u822c student \u4f1a\u6bd4 teacher \u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u5927\u800c\u6df1\u7684\u7f51\u7edc\u84b8\u998f\u5230\u4e00\u4e2a\u5c0f\u7684\u7f51\u7edc\uff0c\u4e5f\u53ef\u4ee5\u628a\u96c6\u6210\u7684\u7f51\u7edc\u84b8\u998f\u5230\u4e00\u4e2a\u5c0f\u7684\u7f51\u7edc\u4e0a\u3002 \u53c2\u6570\u5171\u4eab \uff1a\u901a\u8fc7\u5171\u4eab\u53c2\u6570\uff0c\u8fbe\u5230\u51cf\u5c11\u7f51\u7edc\u53c2\u6570\u7684\u76ee\u7684\uff0c\u5982 ALBERT \u5171\u4eab\u4e86 Transformer \u5c42\uff1b \u53c2\u6570\u77e9\u9635\u8fd1\u4f3c \uff1a\u901a\u8fc7\u77e9\u9635\u7684\u4f4e\u79e9\u5206\u89e3\u6216\u5176\u4ed6\u65b9\u6cd5\u8fbe\u5230\u964d\u4f4e\u77e9\u9635\u53c2\u6570\u7684\u76ee\u7684\uff1b \u4e5f\u5c31\u662f\u8bf4\uff0c\u77e5\u8bc6\u84b8\u998f\u5c31\u662f\u5148\u8bad\u7ec3\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u7684\u7f51\u7edc\uff08\u5ef6\u65f6\u957f\uff0c\u6a21\u578b\u5927\uff0c\u53c2\u6570\u591a\uff09\uff0c\u79f0\u4e3aTeacher\uff0c\u4ee5Teacher\u7684\u8f93\u5165\u8f93\u51fa\u4f5c\u4e3a\u8bad\u7ec3\u6837\u672c\u4e0e\u6807\u7b7e\u53bb\u8bad\u7ec3\u53e6\u4e00\u4e2a\u7f51\u7edc\uff08\u6a21\u578b\u5c0f\uff0c\u5ef6\u65f6\u5c0f\uff09","title":"\u77e5\u8bc6\u84b8\u998f"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/Soft%20label/#_3","text":"","title":"\u57fa\u672c\u6846\u67b6"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/Soft%20label/#studentteacherteacher","text":"\u56e0\u4e3a\u7f51\u7edc\u7684\u8f93\u51fa\u7ecf\u8fc7softmax\uff0c\u5c06\u9884\u6d4b\u7ed3\u679c\u8f6c\u5316\u4e3a\u6982\u7387\u7684\u5f62\u5f0f\uff0c\u5bf9\u4e8e\u4e00\u5f20\u56fe\u7247\uff0c\u6bcf\u79cd\u7ed3\u679c\u90fd\u6709\u5bf9\u5e94\u7684\u6982\u7387\u800c\u4e0d\u662f\u7edd\u5bf9\u7684\u4e00\u79cd\u7269\u4f53\uff0c\u800c\u5728\u4f20\u7edf\u7684\u8bad\u7ec3\u8fc7\u7a0b(Hard-target)\u4e2d\uff0c\u6240\u6709\u8d1f\u6807\u7b7e\u90fd\u88ab\u7edf\u4e00\u5bf9\u5f85\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u77e5\u8bc6\u84b8\u998f\u7684\u8bad\u7ec3\u65b9\u5f0f\u4f7f\u5f97\u6bcf\u4e2a\u6837\u672c\u7ed9Student\u6a21\u578b\u5e26\u6765\u7684\u4fe1\u606f\u91cf\u5927\u4e8e\u4f20\u7edf\u7684\u8bad\u7ec3\u65b9\u5f0f\u3002\u8fd9\u7ed9Student\u7f51\u7edc\u5230\u6765\u66f4\u591a\u7684\u53ef\u5b66\u4e60\u4fe1\u606f\u3002\u5373Student\u7684\u8bad\u7ec3\u6807\u7b7e\u4e3asoft-target\u800c\u4e0d\u662fhard label","title":"\u4e3a\u4ec0\u4e48\u4e0d\u53bb\u76f4\u63a5\u62ff\u539f\u6709\u7684\u6807\u7b7e\u6570\u636e\u8bad\u7ec3Student\uff0c\u800c\u662f\u8981\u5148\u8bad\u7ec3\u4e00\u4e2aTeacher\u518d\u62ffTeacher\u7684\u7ed3\u679c\u4f5c\u4e3a\u6807\u7b7e\uff1f"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/Soft%20label/#softmax","text":"\u539fsoftmax\uff1a $$ s = \\frac{exp(z_i)}{\\sum_jexp(z_j)} $$ \u52a0\u5165\u6e29\u5ea6T $$ s = \\frac{exp(z_i/T)}{\\sum_jexp(z_j/T)} $$ \u8fd9\u53ef\u4ee5\u63d0\u9ad8\u8d1f\u6837\u672c\u7684\u6982\u7387 \u5176\u4e2dq i \u662f\u6bcf\u4e2a\u7c7b\u522b\u8f93\u51fa\u7684\u6982\u7387\uff0cz i \u662f\u6bcf\u4e2a\u7c7b\u522b\u8f93\u51fa\u7684 logits\uff0cT\u5c31\u662f \u6e29\u5ea6 \u3002\u5f53\u6e29\u5ea6T=1\u65f6\uff0c\u8fd9\u5c31\u662f\u6807\u51c6\u7684 Softmax \u516c\u5f0f\u3002T\u8d8a\u9ad8\uff0csoftmax\u7684output probability distribution\u8d8a\u8d8b\u4e8e\u5e73\u6ed1\uff0c\u5176\u5206\u5e03\u7684\u71b5\u8d8a\u5927\uff0c\u8d1f\u6807\u7b7e\u643a\u5e26\u7684\u4fe1\u606f\u4f1a\u88ab\u76f8\u5bf9\u5730\u653e\u5927\uff0c\u6a21\u578b\u8bad\u7ec3\u5c06\u66f4\u52a0\u5173\u6ce8\u8d1f\u6807\u7b7e\u3002 \u6e29\u5ea6T\u6709\u8fd9\u6837\u51e0\u4e2a\u7279\u70b9\uff1a \u539f\u59cb\u7684softmax\u51fd\u6570\u662fT=1\u65f6\u7684\u7279\u4f8b\uff1bT<1\u65f6\uff0c\u6982\u7387\u5206\u5e03\u6bd4\u539f\u59cb\u66f4\"\u9661\u5ced\"\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53 T\\to0 T\\to0 \u65f6\uff0cSoftmax \u7684\u8f93\u51fa\u503c\u4f1a\u63a5\u8fd1\u4e8e Hard-target\uff1bT>1\u65f6\uff0c\u6982\u7387\u5206\u5e03\u6bd4\u539f\u59cb\u66f4\u201c\u5e73\u7f13\u201d\u3002 \u968f\u7740T\u7684\u589e\u52a0\uff0cSoftmax \u7684\u8f93\u51fa\u5206\u5e03\u8d8a\u6765\u8d8a\u5e73\u7f13\uff0c\u4fe1\u606f\u71b5\u4f1a\u8d8a\u6765\u8d8a\u5927\u3002\u6e29\u5ea6\u8d8a\u9ad8\uff0csoftmax\u4e0a\u5404\u4e2a\u503c\u7684\u5206\u5e03\u5c31\u8d8a\u5e73\u5747\uff0c\u601d\u8003\u6781\u7aef\u60c5\u51b5\uff0c\u5f53 {T=\\infty} {T=\\infty} \uff0c\u6b64\u65f6softmax\u7684\u503c\u662f\u5e73\u5747\u5206\u5e03\u7684\u3002 \u4e0d\u7ba1\u6e29\u5ea6 T T \u600e\u4e48\u53d6\u503c\uff0cSoft-target\u90fd\u6709\u5ffd\u7565\u76f8\u5bf9\u8f83\u5c0f\u7684 p_i p_i \uff08Teacher\u6a21\u578b\u5728\u6e29\u5ea6\u4e3aT\u65f6softmax\u8f93\u51fa\u5728\u7b2c i i \u7c7b\u4e0a\u7684\u503c)\u643a\u5e26\u7684\u4fe1\u606f\u7684\u503e\u5411\u3002 \u6240\u4ee5 \u5f53\u60f3\u4ece\u8d1f\u6807\u7b7e\u4e2d\u5b66\u5230\u4e00\u4e9b\u4fe1\u606f\u91cf\u7684\u65f6\u5019\uff0c\u6e29\u5ea6 T T \u5e94\u8c03\u9ad8\u4e00\u4e9b\uff1b \u5f53\u60f3\u51cf\u5c11\u8d1f\u6807\u7b7e\u7684\u5e72\u6270\u7684\u65f6\u5019\uff0c\u6e29\u5ea6 T T \u5e94\u8c03\u4f4e\u4e00\u4e9b\uff1b \u603b\u7684\u6765\u8bf4\uff0c T T \u7684\u9009\u62e9\u548cStudent\u6a21\u578b\u7684\u5927\u5c0f\u6709\u5173\uff0cStudent\u6a21\u578b\u53c2\u6570\u91cf\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\uff0c\u76f8\u5bf9\u6bd4\u8f83\u4f4e\u7684\u6e29\u5ea6\u5c31\u53ef\u4ee5\u4e86\u3002\u56e0\u4e3a\u53c2\u6570\u91cf\u5c0f\u7684\u6a21\u578b\u4e0d\u80fd\u5b66\u5230\u6240\u6709Teacher\u6a21\u578b\u7684\u77e5\u8bc6\uff0c\u6240\u4ee5\u53ef\u4ee5\u9002\u5f53\u5ffd\u7565\u6389\u4e00\u4e9b\u8d1f\u6807\u7b7e\u7684\u4fe1\u606f\u3002 \u6700\u540e\uff0c\u5728\u6574\u4e2a\u77e5\u8bc6\u84b8\u998f\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5148\u8ba9\u6e29\u5ea6 T T \u5347\u9ad8\uff0c\u7136\u540e\u5728\u6d4b\u8bd5\u9636\u6bb5\u6062\u590d\u201c\u4f4e\u6e29\u201c\uff08 T=1 T=1 )\uff0c\u4ece\u800c\u5c06\u539f\u6a21\u578b\u4e2d\u7684\u77e5\u8bc6\u63d0\u53d6\u51fa\u6765\uff0c\u56e0\u6b64\u5c06\u5176\u79f0\u4e3a\u662f\u84b8\u998f\u3002","title":"softmax\u5904\u7406\u540e\u7684\u6982\u7387\u6709\u4e9b\u4f1a\u5341\u5206\u63a5\u8fd1\u96f6\uff0c\u5bf9\u7f51\u7edc\u7684\u4f5c\u7528\u51e0\u4e4e\u4e3a\u96f6"},{"location":"%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/Soft%20label/#_4","text":"","title":"\u7279\u5f81\u84b8\u998f \u672a\u5b8c\u5f85\u7eed........."},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/","text":"\u4e13\u680f\u4ecb\u7ecd \u00b6 \u6b64\u680f\u4e3a\u914d\u7f6e\u73af\u5883\uff0c\u8dd1\u901a\u4ee3\u7801\uff0c\u89e3\u51b3\u70e6\u4ebabug\uff0c\u4fdd\u59c6\u7ea7\u6559\u7a0b~","title":"\u4e13\u680f\u4ecb\u7ecd"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/#_1","text":"\u6b64\u680f\u4e3a\u914d\u7f6e\u73af\u5883\uff0c\u8dd1\u901a\u4ee3\u7801\uff0c\u89e3\u51b3\u70e6\u4ebabug\uff0c\u4fdd\u59c6\u7ea7\u6559\u7a0b~","title":"\u4e13\u680f\u4ecb\u7ecd"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/","text":"Windows\u914d\u7f6elibtorch \u00b6 Visual Studio\u914d\u7f6elibtorch \u00b6 \u5b98\u7f51\u4e0b\u8f7d\u89e3\u538b\u5305 \u00b6 \u7f51\u5740\uff1a https://pytorch.org/ \u9700\u8981\u548c\u539f\u672cpytorch,cuda\u7248\u672c\u5bf9\u5e94\uff0c\u89e3\u538b \u00b6 \u6253\u5f00vs\u65b0\u5efa\u9879\u76ee\uff0c\u65b0\u5efa\u5c5e\u6027\u8868 \u00b6 \uff081\uff09C/C++->\u5e38\u89c4->\u9644\u52a0\u5305\u542b\u76ee\u5f55\u91cc\u9762\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 \u00b6 xxx \\ libtorch - win - shared - with - deps - latest \\ include \\ torch \\ csrc \\ api \\ include xxx \\ libtorch - win - shared - with - deps - latest \\ include \uff082\uff09\u94fe\u63a5\u5668->\u5e38\u89c4->\u9644\u52a0\u5e93\u76ee\u5f55 \u00b6 path_to\\libtorch\\lib \uff083\uff09\u8f93\u5165->\u9644\u52a0\u4f9d\u8d56\u9879\u91cc\u9762\u6dfb\u52a0libtorch/lib \u4e2d\u6240\u6709\u7684lib\u6587\u4ef6 \u00b6 debugx64\u5c5e\u6027 \u00b6 \uff081\uff09\u8c03\u8bd5->\u73af\u5883-> \u00b6 PATH=path_to\\libtorch\\lib;%PATH% \uff082\uff09c/c++ -> \u00b6 \u5f00\u542f\u591a\u5904\u7406\u5668\u7f16\u8bd1\uff0cSDL\u68c0\u67e5\uff1a\u5426\uff1a \u4ee3\u7801\u751f\u6210->\u8fd0\u884c\u5e93->\u591a\u7ebf\u7a0b\u8c03\u8bd5\uff08/mtd) \u8bed\u8a00->\u7b26\u5408\u6a21\u5f0f->(\u5426) \u8f93\u5165\u4ee3\u7801 #include <torch/torch.h> #include <iostream> int main () { torch :: Tensor tensor = torch :: rand ({ 9 , 9 }); std :: cout << tensor << std :: endl ; return 0 ; } \u751f\u6210\u89e3\u51b3\u65b9\u6848\u5e76\u8c03\u8bd5 \u5982\u679c\u62a5\u7f3a\u5c11VCRUNTIME140_1D.dll \u00b6 \u5bfc\u81f4\u7a0b\u5e8f\u65e0\u6cd5\u8fd0\u884c\u5c31\u8bbf\u95ee\u4e0b\u9762\u8fd9\u4e2a\u7f51\u5740\u4e0b\u8f7d\u5bf9\u5e94\u7684dll\u6587\u4ef6 https://www.dll-files.com/ \u590d\u5236\u5230C:\\windows\\system32 \u548cC:\\windows\\sysWOW64 \u6587\u4ef6\u5939\u4e0b cmake+vs\u914d\u7f6e \u00b6 \u4e0b\u8f7dcmake \u00b6 \u7f16\u5199CMakelists \u00b6 \u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u7ec8\u7aef\u8f93\u5165 touch CMakelists . txt touch main . cpp mkdir build \u6253\u5f00CMakelists,\u8f93\u5165 cmake_minimum_required ( VERSION 3.18 ) #cmake\u7248\u672c project ( libtorch_test1 ) #\u6587\u4ef6\u5939\u540d\u5b57 list ( APPEND CMAKE_PREFIX_PATH \"./libtorch\" ) #libtorch\u8def\u5f84 find_package ( Torch REQUIRED ) set ( CMAKE_CXX_STANDARD 11 ) add_executable ( libtorch_test1 main.cpp ) #\u6587\u4ef6\u5939\u4e0ecpp target_link_libraries ( libtorch_test1 \"${TORCH_LIBRARIES}\" ) set_property ( TARGET libtorch_test1 PROPERTY CXX_STANDARD 11 ) \u6253\u5f00main\uff0c\u8f93\u5165 #include <torch/torch.h> #include <iostream> int main () { torch :: Tensor tensor = torch :: rand ({ 9 , 9 }); std :: cout << tensor << std :: endl ; return 0 ; } \u8c03\u8bd5 \u00b6 \u7ec8\u7aef\u8f93\u5165 cd build cmake -G \"visual studio 15 2017 Win64\" .. #\u6839\u636e\u81ea\u5df1\u7684vs\u7f16\u8bd1\u5668\u66f4\u6539 \u4e4b\u540e\u4f1a\u5728build\u6587\u4ef6\u5939\u4e2d\u751f\u6210sln\u6587\u4ef6\uff0c\u4e4b\u540e\u5728\u7528vs\u6253\u5f00\u8be5sln \u9879\u76ee->\u8bbe\u7f6e\u4e3a\u542f\u52a8\u9879\u76ee \u4e4b\u540e\u8c03\u8bd5\uff0c\u5982\u679c\u62a5\u9519\u7f3a\u5c11dll\uff0c\u5c31\u53bblibtorch/lib\u4e2d\u628adll\u590d\u5236\u5230build/debug\u6587\u4ef6\u5939\u4e2d \u5982\u679c\u62a5\u7f3a\u5c11VCRUNTIME140_1D.dll\uff0c\u548cwindows\u4e0b\u90e8\u7f72\u7684\u89e3\u51b3\u65b9\u6cd5\u4e00\u6837","title":"windows\u4e0b\u914d\u7f6elibtorch(vs/cmake)"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#windowslibtorch","text":"","title":"Windows\u914d\u7f6elibtorch"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#visual-studiolibtorch","text":"","title":"Visual Studio\u914d\u7f6elibtorch"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#_1","text":"\u7f51\u5740\uff1a https://pytorch.org/","title":"\u5b98\u7f51\u4e0b\u8f7d\u89e3\u538b\u5305"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#pytorchcuda","text":"","title":"\u9700\u8981\u548c\u539f\u672cpytorch,cuda\u7248\u672c\u5bf9\u5e94\uff0c\u89e3\u538b"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#vs","text":"","title":"\u6253\u5f00vs\u65b0\u5efa\u9879\u76ee\uff0c\u65b0\u5efa\u5c5e\u6027\u8868"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#1cc-","text":"xxx \\ libtorch - win - shared - with - deps - latest \\ include \\ torch \\ csrc \\ api \\ include xxx \\ libtorch - win - shared - with - deps - latest \\ include","title":"\uff081\uff09C/C++-&gt;\u5e38\u89c4-&gt;\u9644\u52a0\u5305\u542b\u76ee\u5f55\u91cc\u9762\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#2-","text":"path_to\\libtorch\\lib","title":"\uff082\uff09\u94fe\u63a5\u5668-&gt;\u5e38\u89c4-&gt;\u9644\u52a0\u5e93\u76ee\u5f55"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#3-libtorchlib-lib","text":"","title":"\uff083\uff09\u8f93\u5165-&gt;\u9644\u52a0\u4f9d\u8d56\u9879\u91cc\u9762\u6dfb\u52a0libtorch/lib \u4e2d\u6240\u6709\u7684lib\u6587\u4ef6"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#debugx64","text":"","title":"debugx64\u5c5e\u6027"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#1-","text":"PATH=path_to\\libtorch\\lib;%PATH%","title":"\uff081\uff09\u8c03\u8bd5-&gt;\u73af\u5883-&gt;"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#2cc-","text":"\u5f00\u542f\u591a\u5904\u7406\u5668\u7f16\u8bd1\uff0cSDL\u68c0\u67e5\uff1a\u5426\uff1a \u4ee3\u7801\u751f\u6210->\u8fd0\u884c\u5e93->\u591a\u7ebf\u7a0b\u8c03\u8bd5\uff08/mtd) \u8bed\u8a00->\u7b26\u5408\u6a21\u5f0f->(\u5426) \u8f93\u5165\u4ee3\u7801 #include <torch/torch.h> #include <iostream> int main () { torch :: Tensor tensor = torch :: rand ({ 9 , 9 }); std :: cout << tensor << std :: endl ; return 0 ; } \u751f\u6210\u89e3\u51b3\u65b9\u6848\u5e76\u8c03\u8bd5","title":"\uff082\uff09c/c++ -&gt;"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#vcruntime140_1ddll","text":"\u5bfc\u81f4\u7a0b\u5e8f\u65e0\u6cd5\u8fd0\u884c\u5c31\u8bbf\u95ee\u4e0b\u9762\u8fd9\u4e2a\u7f51\u5740\u4e0b\u8f7d\u5bf9\u5e94\u7684dll\u6587\u4ef6 https://www.dll-files.com/ \u590d\u5236\u5230C:\\windows\\system32 \u548cC:\\windows\\sysWOW64 \u6587\u4ef6\u5939\u4e0b","title":"\u5982\u679c\u62a5\u7f3a\u5c11VCRUNTIME140_1D.dll"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#cmakevs","text":"","title":"cmake+vs\u914d\u7f6e"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#cmake","text":"","title":"\u4e0b\u8f7dcmake"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#cmakelists","text":"\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u7ec8\u7aef\u8f93\u5165 touch CMakelists . txt touch main . cpp mkdir build \u6253\u5f00CMakelists,\u8f93\u5165 cmake_minimum_required ( VERSION 3.18 ) #cmake\u7248\u672c project ( libtorch_test1 ) #\u6587\u4ef6\u5939\u540d\u5b57 list ( APPEND CMAKE_PREFIX_PATH \"./libtorch\" ) #libtorch\u8def\u5f84 find_package ( Torch REQUIRED ) set ( CMAKE_CXX_STANDARD 11 ) add_executable ( libtorch_test1 main.cpp ) #\u6587\u4ef6\u5939\u4e0ecpp target_link_libraries ( libtorch_test1 \"${TORCH_LIBRARIES}\" ) set_property ( TARGET libtorch_test1 PROPERTY CXX_STANDARD 11 ) \u6253\u5f00main\uff0c\u8f93\u5165 #include <torch/torch.h> #include <iostream> int main () { torch :: Tensor tensor = torch :: rand ({ 9 , 9 }); std :: cout << tensor << std :: endl ; return 0 ; }","title":"\u7f16\u5199CMakelists"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/LibtorchInWindows/#_2","text":"\u7ec8\u7aef\u8f93\u5165 cd build cmake -G \"visual studio 15 2017 Win64\" .. #\u6839\u636e\u81ea\u5df1\u7684vs\u7f16\u8bd1\u5668\u66f4\u6539 \u4e4b\u540e\u4f1a\u5728build\u6587\u4ef6\u5939\u4e2d\u751f\u6210sln\u6587\u4ef6\uff0c\u4e4b\u540e\u5728\u7528vs\u6253\u5f00\u8be5sln \u9879\u76ee->\u8bbe\u7f6e\u4e3a\u542f\u52a8\u9879\u76ee \u4e4b\u540e\u8c03\u8bd5\uff0c\u5982\u679c\u62a5\u9519\u7f3a\u5c11dll\uff0c\u5c31\u53bblibtorch/lib\u4e2d\u628adll\u590d\u5236\u5230build/debug\u6587\u4ef6\u5939\u4e2d \u5982\u679c\u62a5\u7f3a\u5c11VCRUNTIME140_1D.dll\uff0c\u548cwindows\u4e0b\u90e8\u7f72\u7684\u89e3\u51b3\u65b9\u6cd5\u4e00\u6837","title":"\u8c03\u8bd5"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/nano%E9%83%A8%E7%BD%B2yolov5/","text":"nano\u4e0a\u90e8\u7f72\u81ea\u5df1\u8bad\u7ec3\u7684yolov5s\u6a21\u578b \u00b6 nano\u4e0a\u90e8\u7f72\u81ea\u5df1\u8bad\u7ec3\u7684yolov5s\u6a21\u578b\uff08cuda\u914d\u7f6e,pytorch,tensorrt\u52a0\u901f\u4e00\u7ad9\u5f0f\u89e3\u51b3\uff09 \u524d\u8a00\uff1a\u521d\u59cb\u5316\u64cd\u4f5c\u53ef\u4ee5\u53c2\u7167\u5176\u4ed6\u535a\u5ba2\uff0c\u94fe\u63a5\u6211\u4e4b\u540e\u4e5f\u4f1a\u5e16\uff0c\u6b22\u8fce\u5927\u5bb6\u8bbf\u95ee\u6211\u7684CSDN\uff1a https://blog.csdn.net/weixin_45454706?spm=1011.2124.3001.5343 \u914d\u7f6ecuda \u00b6 \u66f4\u65b0\u6e90 \u8f6c\u8f7d\u81ea \u8fd9\u91cc 1.\u5907\u4efd sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak sudo gedit /etc/apt/sources.list 2.\u5220\u9664\u6240\u6709\u5185\u5bb9\uff0c\u66f4\u6362\u6210\u4e0b\u9762\u7684 deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe nano\u5185\u7f6e\u597d\u4e86cuda,\u4f46\u9700\u8981\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u624d\u80fd\u4f7f\u7528 \u6253\u5f00\u547d\u4ee4\u884c\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\u5373\u53ef \u6211\u8fd9\u91cc\u662fcuda10.2\u5927\u5bb6\u8981\u6839\u636e\u81ea\u5df1\u7684cuda\u7248\u672c\u53bb\u586b\u5199\u8def\u5f84 vi ~/.bashrc export PATH = /usr/local/cuda-10.2/bin ${ PATH :+: ${ PATH }} export LD_LIBRARY_PATH = /usr/local/cuda-10.2/lib64 ${ LD_LIBRARY_PATH :+: ${ LD_LIBRARY_PATH }} export CUDA_ROOT = /usr/local/cuda source ~/.bashrc \u67e5\u770b\u662f\u5426\u914d\u7f6e\u6210\u529f nvcc -V \u5982\u679c\u663e\u793a\u51fa\u81ea\u5df1\u7684cuda\u7248\u672c\u53f7\u5373\u4e3a\u914d\u7f6e\u6210\u529f \u66f4\u65b0pip sudo apt-get install python3-pip python3-dev python3 -m pip install \u8fd9\u91cc\u6211\u770b\u8fd9\u4e2a\u535a\u5ba2\u8981sudo vim /usr/bin/pip3\u4fee\u6539pip3\uff0c\u4f46\u662f\u6211\u6539\u4e86\u4ee5\u540epip3 install jtop\u4f1a\u62a5\u9519\uff0c\u6539\u56de\u6765\u5c31\u53c8\u53ef\u4ee5\u4e86\uff0c\u5927\u5bb6\u6309\u9700\u4fee\u6539\u5427\u3002 \u4e4b\u540e\u7684\u4e00\u90e8\u5206\u8f6c\u8f7d\u81ea \u8fd9\u91cc \u8fd9\u7bc7\u6587\u7ae0\u5341\u5206\u8be6\u7ec6\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u4e00\u770b \u5b89\u88c5jtop\u5e93\u8fd9\u4e2a\u53ef\u4ee5\u76d1\u63a7\u81ea\u5df1\u7684\u8bbe\u5907cpugpu\u5de5\u4f5c\u72b6\u6001 sudo -H pip3 install jetson-stats sudo jtop \u914d\u7f6e\u9700\u8981\u7528\u5230\u7684\u5e93 sudo apt-get install build-essential make cmake cmake-curses-gui sudo apt-get install git g++ pkg-config curl sudo apt-get install libatlas-base-dev gfortran libcanberra-gtk-module libcanberra-gtk3-module sudo apt-get install libhdf5-serial-dev hdf5-tools sudo apt-get install nano locate screen \u5b89\u88c5\u6240\u9700\u8981\u7684\u4f9d\u8d56\u73af\u5883 sudo apt-get install libfreetype6-dev sudo apt-get install protobuf-compiler libprotobuf-dev openssl sudo apt-get install libssl-dev libcurl4-openssl-dev sudo apt-get install cython3 \u5b89\u88c5opencv\u7684\u7cfb\u7edf\u7ea7\u4f9d\u8d56,\u4e00\u4e9b\u7f16\u89e3\u7801\u7684\u5e93\uff1a sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev sudo apt-get install libxvidcore-dev libavresample-dev sudo apt-get install libtiff-dev libjpeg-dev libpng-dev \u66f4\u65b0CMake\uff0c\u8fd9\u4e00\u6b65\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3aarm\u67b6\u6784\u7684\u5f88\u591a\u4e1c\u897f\u90fd\u8981\u4ece\u6e90\u7801\u7f16\u8bd1 wget http://www.cmake.org/files/v3.13/cmake-3.13.0.tar.gz #\u4e0b\u8f7d\uff0c\u7248\u672c\u53f7\u53ef\u5230\u5b98\u7f51\u4e0a\u67e5 tar xpvf cmake-3.13.0.tar.gz cmake-3.13.0/ #\u89e3\u538b cd cmake-3.13.0/ ./bootstrap --system-curl make -j4 #\u7f16\u8bd1 echo 'export PATH=~/cmake-3.13.0/bin/:$PATH' >> ~/.bashrc source ~/.bashrc #\u66f4\u65b0.bashrc \u8fd9\u91cc\u53ef\u4ee5\u5b89\u88c5python\u7684\u865a\u62df\u73af\u5883\u8fdb\u884c\u7ba1\u7406\uff08\u6709\u4e00\u4e2aarm\u67b6\u6784\u4e0b\u7684anaconda\u4f46\u662f\u6211\u4eec\u5b66\u957f\u8bf4\u4e0d\u597d\u7528\uff0c\u6211\u4e5f\u5c31\u6ca1\u53bb\u6df1\u5165\u7814\u7a76\uff09\uff0c\u8fd9\u91cc\u6211\u8fd8\u662f\u5728\u4e3b\u73af\u5883\u4e0b \u914d\u7f6epytorch,pytorchvision,cmake, \u00b6 \u4e0b\u8f7dpytorch cuda10.2\u5bf9\u5e94\u7684torch\u7248\u672c\u662f1.6.0\uff0c\u5927\u5bb6\u6309\u7167\u81ea\u5df1\u7684\u7248\u672c\u53bb\u4e0b\u8f7d\u5bf9\u5e94\u7684torch\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff0c\u7ec4\u957f\u4e5f\u63d0\u4f9b\u4e86\u8f6e\u5b50\u5927\u5bb6\u53bb\u53d6\u5373\u53ef pip3 installtorch-1.6.0a0+b31f58d-cp36-cp36m-linux_aarch64.whl \u4f1a\u663e\u793a\u8fd9\u4e2a\u9519\u8bef \u68c0\u67e5\u662f\u5426\u6210\u529f\u5b89\u88c5 python3 import torch \u5982\u679c\u6ca1\u6709\u62a5\u9519\u5373\u6210\u529f\u5b89\u88c5 \u4e0b\u8f7dtorchvision torch1.6.0\u5bf9\u5e94\u7684torchvision\u7248\u672c\u662f0.7.0 \u7531\u4e8e\u76f4\u63a5pip\u7684torchvision\u7248\u672c\u592a\u4f4e\u6240\u4ee5\u8981\u4ece\u6e90\u7801\u7f16\u8bd1 sudo apt-get install libjpeg-dev zlib1g-dev git clone --branch v0.7.0 https://github.com/pytorch/vision torchvision cd torchvision export BUILD_VERSION = 0 .7.0 sudo python3 setup.py install \u540c\u6837\u7684\u65b9\u6cd5\u67e5\u770b\u662f\u5426\u6210\u529f\u5b89\u88c5 python3 import torchvision \u8bad\u7ec3\u6a21\u578b \u00b6 yolov5s\u7684\u8bad\u7ec3\uff0c\u8fd9\u91cc\u53ef\u4ee5\u53c2\u7167\u5176\u4ed6\u535a\u6587 \u6211\u5efa\u8bae\u5148\u5728\u4e3b\u673a\u4e0a\u8bad\u7ec3\u5b8c\u6210\u5728\u62f7\u5230nano\u4e0a\uff0c\u9760nano\u8bad\u7ec3\u53ef\u80fd\u4e0d\u592a\u884c yolov5s\u90e8\u7f72 \u00b6 clone yolov5\u6e90\u7801 \u5b89\u88c5requirement\u91cc\u7684\u6240\u9700\u8981\u7684\u73af\u5883\uff0c\u6ce8\u610f\u8981\u7528pip3\uff0c\u6309\u9700\u4e0b\u8f7d\uff0c\u770b\u81ea\u5df1\u5c11\u5565\u5c31\u4e0b\u5565\uff0c\u5982\u679c\u4e4b\u540e\u8981\u8f6connx\u4e5f\u8981\u4e0b\u8f7donnx\u5e93 pip3 install matplotlib == 3 . 2 . 2 pip3 install scipy == 1 . 4 . 1 . pip3 install numpy == 1 . 19 . 4 pip3 install cython \u53ef\u4ee5\u5148\u5728nano\u4e0a\u9884\u6d4b\u4e00\u4e0b\u56fe\u7247\uff0c\u6548\u679c\u8fd8\u53ef\u4ee5\uff0c\u542f\u52a8\u6a21\u578b\u8981\u5f88\u4e45\uff0c\u9884\u6d4b\u6548\u679c\u8fd8\u53ef\u4ee5 cd yolov5-master python3 detection.py --source /path/to/xxx.jpg --weights /path/to/best.pt --conf-thres 0 .7 \u4e4b\u540e\u5c31\u53ef\u4ee5\u5728\u81ea\u5df1\u7684inference\u4e2d\u7684output\u4e2d\u770b\u5230\u81ea\u5df1\u9884\u6d4b\u7684\u56fe\u7247\u4e86\u3002 \u63a5\u7740\u8c03\u7528\u6444\u50cf\u5934\u8fdb\u884c\u89c6\u9891\u9884\u6d4b\uff0c\u7531\u4e8e\u6211\u7528\u7684\u662f\u5927\u6052\u7684usb\u76f8\u673a\uff08600\uff0c800\uff09\uff0c\u7528\u7684\u662f\u5927\u6052\u5b98\u65b9\u7684api,\u52a0\u5165\u5230infer.py\u4e2d\u6548\u679c\u8fd8\u884c\uff0c\u5927\u69825fps,\u6548\u679c\u662f\u4e00\u5361\u4e00\u5361\u7684ppt tensorrt\u52a0\u901f \u00b6 \u8fd9\u624d\u662f\u91cd\u5934\u620f\uff01 nano\u6709\u81ea\u5e26\u7684tensorrt,\u63a5\u4e0b\u6765\u6211\u4eec\u5b89\u88c5pycuda pip3 install pycuda \u8fd9\u65f6\u6211\u4eec\u8981\u7528\u5230\u4e00\u4e2a\u5927\u4f6c\u7684\u5f00\u6e90\uff1a git clone https://github.com/wang-xinyu/tensorrtx.git \u6309\u7167readme\u4e2d\u7684\u6559\u7a0b\u5c31\u53ef\u4ee5\u5f00\u5fc3\u5730\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u4e86\uff01\u6211\u628a\u5b98\u65b9\u7684\u6559\u7a0b\u8d34\u5230\u4e86\u4e0b\u9762\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u53bbreadme\u6587\u4ef6\u4e2d\u8be6\u7ec6\u4e86\u89e3 \u6ce8\u610f\uff01\uff1a 1.\u5c06\u5934\u6587\u4ef6\u4e2d\u7684class_num\u66f4\u6539\u4e3a\u81ea\u5df1\u7684\u7c7b\u522b\u6570 2.\u5efa\u8bae\u628a\u81ea\u5df1\u7684.pt\u6587\u4ef6\u91cd\u547d\u540d\u4e3ayolov5s.pt\uff0c\u5f53\u7136\u5982\u679c\u4f60\u8981\u7528\u81ea\u5df1\u540d\u5b57\u522b\u5fd8\u4e86\u6539\u6e90\u7801\u4e2d\u7684\u5bf9\u5e94\u540d\u5b57\uff08\u5982\u679c\u8981\u66f4\u6539\u8f93\u5165\u56fe\u50cf\u5927\u5c0f\u4e5f\u8981\u5728\u5934\u6587\u4ef6yololayer.h\u4ee5\u53capython\u9884\u6d4byolov5_trt.py\u4e2d\u66f4\u6539) 3.yolov5_trt\u6e90\u7801\u4e2d\u7684\u56fe\u7247\u8def\u5f84\u4e5f\u8981\u6539\uff0c\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u6444\u50cf\u5934\u8c03\u7528\u52a0\u8fdb\u53bb\u9884\u6d4b How to Run, yolov5s as example 1. generate yolov5s.wts from pytorch with yolov5s.pt, or download .wts from model zoo git clone https://github.com/wang-xinyu/tensorrtx.git git clone https://github.com/ultralytics/yolov5.git // download its weights 'yolov5s.pt' // copy tensorrtx/yolov5/gen_wts.py into ultralytics/yolov5 // ensure the file name is yolov5s.pt and yolov5s.wts in gen_wts.py // go to ultralytics/yolov5 python gen_wts.py // a file 'yolov5s.wts' will be generated. 2. build tensorrtx/yolov5 and run // put yolov5s.wts into tensorrtx/yolov5 // go to tensorrtx/yolov5 // ensure the macro NET in yolov5.cpp is s mkdir build cd build cmake .. make sudo ./yolov5 -s // serialize model to plan file i.e. 'yolov5s.engine' sudo ./yolov5 -d ../samples // deserialize plan file and run inference, the images in samples will be processed. 3. check the images generated, as follows. _zidane.jpg and _bus.jpg 4. optional, load and run the tensorrt model in python // install python-tensorrt, pycuda, etc. // ensure the yolov5s.engine and libmyplugins.so have been built python yolov5_trt.py \u6a21\u578b\u5728\u8f7d\u5165\u7684\u65f6\u5019\u4f1a\u5f88\u6162\uff0c\u5e76\u663e\u793awaring\u5185\u5b58\u4e0d\u8db3\uff0c\u8fd9\u4e2a\u4e00\u76f4\u6ca1\u6709\u60f3\u5230\u597d\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u5927\u5bb6\u5982\u679c\u77e5\u9053\u53ef\u4ee5\u544a\u8bc9\u6211-_- python\u7248\u89c6\u9891\u9884\u6d4b\u4ece\u4e4b\u524d\u76845fps\u63d0\u5347\u5230\u4e8620fps,\u4eba\u773c\u770b\u4e0d\u51fa\u5dee\u522b\u4e86\uff0c\u57fa\u672c\u53ef\u4ee5\u505a\u5230\u5b9e\u65f6\u3002 c++\u90e8\u7f72\u7684\u89c6\u9891\u9884\u6d4b\u8f7d\u5165\u6a21\u578b\u4e0e\u9884\u6d4b\u90fd\u6bd4python\u5feb\uff0c25fps\uff0c\u4e14\u6ca1\u6709\u5185\u5b58\u4e0d\u8db3\u7684warning\uff01","title":"nano\u90e8\u7f72yolov5"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/nano%E9%83%A8%E7%BD%B2yolov5/#nanoyolov5s","text":"nano\u4e0a\u90e8\u7f72\u81ea\u5df1\u8bad\u7ec3\u7684yolov5s\u6a21\u578b\uff08cuda\u914d\u7f6e,pytorch,tensorrt\u52a0\u901f\u4e00\u7ad9\u5f0f\u89e3\u51b3\uff09 \u524d\u8a00\uff1a\u521d\u59cb\u5316\u64cd\u4f5c\u53ef\u4ee5\u53c2\u7167\u5176\u4ed6\u535a\u5ba2\uff0c\u94fe\u63a5\u6211\u4e4b\u540e\u4e5f\u4f1a\u5e16\uff0c\u6b22\u8fce\u5927\u5bb6\u8bbf\u95ee\u6211\u7684CSDN\uff1a https://blog.csdn.net/weixin_45454706?spm=1011.2124.3001.5343","title":"nano\u4e0a\u90e8\u7f72\u81ea\u5df1\u8bad\u7ec3\u7684yolov5s\u6a21\u578b"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/nano%E9%83%A8%E7%BD%B2yolov5/#cuda","text":"\u66f4\u65b0\u6e90 \u8f6c\u8f7d\u81ea \u8fd9\u91cc 1.\u5907\u4efd sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak sudo gedit /etc/apt/sources.list 2.\u5220\u9664\u6240\u6709\u5185\u5bb9\uff0c\u66f4\u6362\u6210\u4e0b\u9762\u7684 deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universe deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universe deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universe deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe nano\u5185\u7f6e\u597d\u4e86cuda,\u4f46\u9700\u8981\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u624d\u80fd\u4f7f\u7528 \u6253\u5f00\u547d\u4ee4\u884c\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\u5373\u53ef \u6211\u8fd9\u91cc\u662fcuda10.2\u5927\u5bb6\u8981\u6839\u636e\u81ea\u5df1\u7684cuda\u7248\u672c\u53bb\u586b\u5199\u8def\u5f84 vi ~/.bashrc export PATH = /usr/local/cuda-10.2/bin ${ PATH :+: ${ PATH }} export LD_LIBRARY_PATH = /usr/local/cuda-10.2/lib64 ${ LD_LIBRARY_PATH :+: ${ LD_LIBRARY_PATH }} export CUDA_ROOT = /usr/local/cuda source ~/.bashrc \u67e5\u770b\u662f\u5426\u914d\u7f6e\u6210\u529f nvcc -V \u5982\u679c\u663e\u793a\u51fa\u81ea\u5df1\u7684cuda\u7248\u672c\u53f7\u5373\u4e3a\u914d\u7f6e\u6210\u529f \u66f4\u65b0pip sudo apt-get install python3-pip python3-dev python3 -m pip install \u8fd9\u91cc\u6211\u770b\u8fd9\u4e2a\u535a\u5ba2\u8981sudo vim /usr/bin/pip3\u4fee\u6539pip3\uff0c\u4f46\u662f\u6211\u6539\u4e86\u4ee5\u540epip3 install jtop\u4f1a\u62a5\u9519\uff0c\u6539\u56de\u6765\u5c31\u53c8\u53ef\u4ee5\u4e86\uff0c\u5927\u5bb6\u6309\u9700\u4fee\u6539\u5427\u3002 \u4e4b\u540e\u7684\u4e00\u90e8\u5206\u8f6c\u8f7d\u81ea \u8fd9\u91cc \u8fd9\u7bc7\u6587\u7ae0\u5341\u5206\u8be6\u7ec6\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u4e00\u770b \u5b89\u88c5jtop\u5e93\u8fd9\u4e2a\u53ef\u4ee5\u76d1\u63a7\u81ea\u5df1\u7684\u8bbe\u5907cpugpu\u5de5\u4f5c\u72b6\u6001 sudo -H pip3 install jetson-stats sudo jtop \u914d\u7f6e\u9700\u8981\u7528\u5230\u7684\u5e93 sudo apt-get install build-essential make cmake cmake-curses-gui sudo apt-get install git g++ pkg-config curl sudo apt-get install libatlas-base-dev gfortran libcanberra-gtk-module libcanberra-gtk3-module sudo apt-get install libhdf5-serial-dev hdf5-tools sudo apt-get install nano locate screen \u5b89\u88c5\u6240\u9700\u8981\u7684\u4f9d\u8d56\u73af\u5883 sudo apt-get install libfreetype6-dev sudo apt-get install protobuf-compiler libprotobuf-dev openssl sudo apt-get install libssl-dev libcurl4-openssl-dev sudo apt-get install cython3 \u5b89\u88c5opencv\u7684\u7cfb\u7edf\u7ea7\u4f9d\u8d56,\u4e00\u4e9b\u7f16\u89e3\u7801\u7684\u5e93\uff1a sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev sudo apt-get install libxvidcore-dev libavresample-dev sudo apt-get install libtiff-dev libjpeg-dev libpng-dev \u66f4\u65b0CMake\uff0c\u8fd9\u4e00\u6b65\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3aarm\u67b6\u6784\u7684\u5f88\u591a\u4e1c\u897f\u90fd\u8981\u4ece\u6e90\u7801\u7f16\u8bd1 wget http://www.cmake.org/files/v3.13/cmake-3.13.0.tar.gz #\u4e0b\u8f7d\uff0c\u7248\u672c\u53f7\u53ef\u5230\u5b98\u7f51\u4e0a\u67e5 tar xpvf cmake-3.13.0.tar.gz cmake-3.13.0/ #\u89e3\u538b cd cmake-3.13.0/ ./bootstrap --system-curl make -j4 #\u7f16\u8bd1 echo 'export PATH=~/cmake-3.13.0/bin/:$PATH' >> ~/.bashrc source ~/.bashrc #\u66f4\u65b0.bashrc \u8fd9\u91cc\u53ef\u4ee5\u5b89\u88c5python\u7684\u865a\u62df\u73af\u5883\u8fdb\u884c\u7ba1\u7406\uff08\u6709\u4e00\u4e2aarm\u67b6\u6784\u4e0b\u7684anaconda\u4f46\u662f\u6211\u4eec\u5b66\u957f\u8bf4\u4e0d\u597d\u7528\uff0c\u6211\u4e5f\u5c31\u6ca1\u53bb\u6df1\u5165\u7814\u7a76\uff09\uff0c\u8fd9\u91cc\u6211\u8fd8\u662f\u5728\u4e3b\u73af\u5883\u4e0b","title":"\u914d\u7f6ecuda"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/nano%E9%83%A8%E7%BD%B2yolov5/#pytorchpytorchvisioncmake","text":"\u4e0b\u8f7dpytorch cuda10.2\u5bf9\u5e94\u7684torch\u7248\u672c\u662f1.6.0\uff0c\u5927\u5bb6\u6309\u7167\u81ea\u5df1\u7684\u7248\u672c\u53bb\u4e0b\u8f7d\u5bf9\u5e94\u7684torch\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff0c\u7ec4\u957f\u4e5f\u63d0\u4f9b\u4e86\u8f6e\u5b50\u5927\u5bb6\u53bb\u53d6\u5373\u53ef pip3 installtorch-1.6.0a0+b31f58d-cp36-cp36m-linux_aarch64.whl \u4f1a\u663e\u793a\u8fd9\u4e2a\u9519\u8bef \u68c0\u67e5\u662f\u5426\u6210\u529f\u5b89\u88c5 python3 import torch \u5982\u679c\u6ca1\u6709\u62a5\u9519\u5373\u6210\u529f\u5b89\u88c5 \u4e0b\u8f7dtorchvision torch1.6.0\u5bf9\u5e94\u7684torchvision\u7248\u672c\u662f0.7.0 \u7531\u4e8e\u76f4\u63a5pip\u7684torchvision\u7248\u672c\u592a\u4f4e\u6240\u4ee5\u8981\u4ece\u6e90\u7801\u7f16\u8bd1 sudo apt-get install libjpeg-dev zlib1g-dev git clone --branch v0.7.0 https://github.com/pytorch/vision torchvision cd torchvision export BUILD_VERSION = 0 .7.0 sudo python3 setup.py install \u540c\u6837\u7684\u65b9\u6cd5\u67e5\u770b\u662f\u5426\u6210\u529f\u5b89\u88c5 python3 import torchvision","title":"\u914d\u7f6epytorch,pytorchvision,cmake,"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/nano%E9%83%A8%E7%BD%B2yolov5/#_1","text":"yolov5s\u7684\u8bad\u7ec3\uff0c\u8fd9\u91cc\u53ef\u4ee5\u53c2\u7167\u5176\u4ed6\u535a\u6587 \u6211\u5efa\u8bae\u5148\u5728\u4e3b\u673a\u4e0a\u8bad\u7ec3\u5b8c\u6210\u5728\u62f7\u5230nano\u4e0a\uff0c\u9760nano\u8bad\u7ec3\u53ef\u80fd\u4e0d\u592a\u884c","title":"\u8bad\u7ec3\u6a21\u578b"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/nano%E9%83%A8%E7%BD%B2yolov5/#yolov5s","text":"clone yolov5\u6e90\u7801 \u5b89\u88c5requirement\u91cc\u7684\u6240\u9700\u8981\u7684\u73af\u5883\uff0c\u6ce8\u610f\u8981\u7528pip3\uff0c\u6309\u9700\u4e0b\u8f7d\uff0c\u770b\u81ea\u5df1\u5c11\u5565\u5c31\u4e0b\u5565\uff0c\u5982\u679c\u4e4b\u540e\u8981\u8f6connx\u4e5f\u8981\u4e0b\u8f7donnx\u5e93 pip3 install matplotlib == 3 . 2 . 2 pip3 install scipy == 1 . 4 . 1 . pip3 install numpy == 1 . 19 . 4 pip3 install cython \u53ef\u4ee5\u5148\u5728nano\u4e0a\u9884\u6d4b\u4e00\u4e0b\u56fe\u7247\uff0c\u6548\u679c\u8fd8\u53ef\u4ee5\uff0c\u542f\u52a8\u6a21\u578b\u8981\u5f88\u4e45\uff0c\u9884\u6d4b\u6548\u679c\u8fd8\u53ef\u4ee5 cd yolov5-master python3 detection.py --source /path/to/xxx.jpg --weights /path/to/best.pt --conf-thres 0 .7 \u4e4b\u540e\u5c31\u53ef\u4ee5\u5728\u81ea\u5df1\u7684inference\u4e2d\u7684output\u4e2d\u770b\u5230\u81ea\u5df1\u9884\u6d4b\u7684\u56fe\u7247\u4e86\u3002 \u63a5\u7740\u8c03\u7528\u6444\u50cf\u5934\u8fdb\u884c\u89c6\u9891\u9884\u6d4b\uff0c\u7531\u4e8e\u6211\u7528\u7684\u662f\u5927\u6052\u7684usb\u76f8\u673a\uff08600\uff0c800\uff09\uff0c\u7528\u7684\u662f\u5927\u6052\u5b98\u65b9\u7684api,\u52a0\u5165\u5230infer.py\u4e2d\u6548\u679c\u8fd8\u884c\uff0c\u5927\u69825fps,\u6548\u679c\u662f\u4e00\u5361\u4e00\u5361\u7684ppt","title":"yolov5s\u90e8\u7f72"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/nano%E9%83%A8%E7%BD%B2yolov5/#tensorrt","text":"\u8fd9\u624d\u662f\u91cd\u5934\u620f\uff01 nano\u6709\u81ea\u5e26\u7684tensorrt,\u63a5\u4e0b\u6765\u6211\u4eec\u5b89\u88c5pycuda pip3 install pycuda \u8fd9\u65f6\u6211\u4eec\u8981\u7528\u5230\u4e00\u4e2a\u5927\u4f6c\u7684\u5f00\u6e90\uff1a git clone https://github.com/wang-xinyu/tensorrtx.git \u6309\u7167readme\u4e2d\u7684\u6559\u7a0b\u5c31\u53ef\u4ee5\u5f00\u5fc3\u5730\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u4e86\uff01\u6211\u628a\u5b98\u65b9\u7684\u6559\u7a0b\u8d34\u5230\u4e86\u4e0b\u9762\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u53bbreadme\u6587\u4ef6\u4e2d\u8be6\u7ec6\u4e86\u89e3 \u6ce8\u610f\uff01\uff1a 1.\u5c06\u5934\u6587\u4ef6\u4e2d\u7684class_num\u66f4\u6539\u4e3a\u81ea\u5df1\u7684\u7c7b\u522b\u6570 2.\u5efa\u8bae\u628a\u81ea\u5df1\u7684.pt\u6587\u4ef6\u91cd\u547d\u540d\u4e3ayolov5s.pt\uff0c\u5f53\u7136\u5982\u679c\u4f60\u8981\u7528\u81ea\u5df1\u540d\u5b57\u522b\u5fd8\u4e86\u6539\u6e90\u7801\u4e2d\u7684\u5bf9\u5e94\u540d\u5b57\uff08\u5982\u679c\u8981\u66f4\u6539\u8f93\u5165\u56fe\u50cf\u5927\u5c0f\u4e5f\u8981\u5728\u5934\u6587\u4ef6yololayer.h\u4ee5\u53capython\u9884\u6d4byolov5_trt.py\u4e2d\u66f4\u6539) 3.yolov5_trt\u6e90\u7801\u4e2d\u7684\u56fe\u7247\u8def\u5f84\u4e5f\u8981\u6539\uff0c\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u6444\u50cf\u5934\u8c03\u7528\u52a0\u8fdb\u53bb\u9884\u6d4b How to Run, yolov5s as example 1. generate yolov5s.wts from pytorch with yolov5s.pt, or download .wts from model zoo git clone https://github.com/wang-xinyu/tensorrtx.git git clone https://github.com/ultralytics/yolov5.git // download its weights 'yolov5s.pt' // copy tensorrtx/yolov5/gen_wts.py into ultralytics/yolov5 // ensure the file name is yolov5s.pt and yolov5s.wts in gen_wts.py // go to ultralytics/yolov5 python gen_wts.py // a file 'yolov5s.wts' will be generated. 2. build tensorrtx/yolov5 and run // put yolov5s.wts into tensorrtx/yolov5 // go to tensorrtx/yolov5 // ensure the macro NET in yolov5.cpp is s mkdir build cd build cmake .. make sudo ./yolov5 -s // serialize model to plan file i.e. 'yolov5s.engine' sudo ./yolov5 -d ../samples // deserialize plan file and run inference, the images in samples will be processed. 3. check the images generated, as follows. _zidane.jpg and _bus.jpg 4. optional, load and run the tensorrt model in python // install python-tensorrt, pycuda, etc. // ensure the yolov5s.engine and libmyplugins.so have been built python yolov5_trt.py \u6a21\u578b\u5728\u8f7d\u5165\u7684\u65f6\u5019\u4f1a\u5f88\u6162\uff0c\u5e76\u663e\u793awaring\u5185\u5b58\u4e0d\u8db3\uff0c\u8fd9\u4e2a\u4e00\u76f4\u6ca1\u6709\u60f3\u5230\u597d\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u5927\u5bb6\u5982\u679c\u77e5\u9053\u53ef\u4ee5\u544a\u8bc9\u6211-_- python\u7248\u89c6\u9891\u9884\u6d4b\u4ece\u4e4b\u524d\u76845fps\u63d0\u5347\u5230\u4e8620fps,\u4eba\u773c\u770b\u4e0d\u51fa\u5dee\u522b\u4e86\uff0c\u57fa\u672c\u53ef\u4ee5\u505a\u5230\u5b9e\u65f6\u3002 c++\u90e8\u7f72\u7684\u89c6\u9891\u9884\u6d4b\u8f7d\u5165\u6a21\u578b\u4e0e\u9884\u6d4b\u90fd\u6bd4python\u5feb\uff0c25fps\uff0c\u4e14\u6ca1\u6709\u5185\u5b58\u4e0d\u8db3\u7684warning\uff01","title":"tensorrt\u52a0\u901f"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/vscode%E9%85%8D%E7%BD%AEopencv/","text":"vscode\u914d\u7f6eopencv4.1.1\uff08c++)\u73af\u5883 \u00b6 \u6240\u9700\u73af\u5883 vscode cmake mingw-w64 mingw\u4e0b\u8f7d \u00b6 mingw\u4e0b\u8f7d\u5730\u5740: https://sourceforge.net/projects/mingw-w64/files/ \u5efa\u8bae\u76f4\u63a5\u4e0b\u8f7d\u5b98\u65b9\u7ed9\u7684\u7f16\u8bd1\u597d\u7684\u7248\u672c \u5982\u679c\u4f7f\u7528online installer\u4f1a\u51fa\u73b0 the file has been downloaded incorrectly \u7684\u9519 \u5c06bin\u6587\u4ef6\u5939\u52a0\u5165\u73af\u5883\u53d8\u91cf H:\\mingw\\mingw64\\bin \u5728\u7ec8\u7aef\u8f93\u5165g++ -verion, gdb --version\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f \u91cd\u8981\u7684\u70b9!!,\u4e00\u5b9a\u8981\u5c06mingw\u7684bin\u6587\u4ef6\u653e\u5230\u73af\u5883\u53d8\u91cf\u7b2c\u4e00\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u4e4b\u524d\u6dfb\u52a0\u8fc7git\u7684\u73af\u5883\u53d8\u91cf,\u4e8c\u8005\u4e4b\u95f4\u6709\u91cd\u540d\u7684libstdc++-6.dll\uff0c\u5bfc\u81f4\u7f16\u8bd1\u51fa\u73b0\u201dno such file or directory\u201c opencv\u914d\u7f6e \u00b6 \u65b9\u6cd5\u4e00 \u4f7f\u7528\u9884\u7f16\u8bd1\u597d\u7684opencv\u5e93\uff0c\u7701\u53bb\u7f16\u8bd1\u7684\u9ebb\u70e6 \u00b6 opencv\u9884\u7f16\u8bd1\u5e93\u4e0b\u8f7d\u5730\u5740\uff1a https://github.com/huihut/OpenCV-MinGW-Build \u6ce8\u610f \u4e00\u5b9a\u8981\u6309\u7167\u5bf9\u5e94\u7684configuration\u6838\u5bf9mingw\u7248\u672c\uff0c\u5426\u5219\u4f1a\u7f16\u8bd1\u4f1a\u51fa\u9519 \u914d\u7f6e\u73af\u5883\u53d8\u91cf \u4f8b\u5982\uff1a H:\\Packages\\OpenCV-MinGW-Build-OpenCV-4.1.1-x64\\x64\\mingw\\bin \u65b9\u6cd5\u4e8c \u81ea\u5df1\u7f16\u8bd1opencv\u5e93 \u00b6 \u521b\u5efabuild\u6587\u4ef6\u5939\u5b58\u653e\u7f16\u8bd1\u6587\u4ef6\uff0c\u6253\u5f00cmake\u9009\u62e9source\u548cbuild\u6587\u4ef6\u5939\u8fdb\u884c\u7f16\u8bd1\uff0c\u4e0d\u51fa\u610f\u5916\u4f1a\u51fa\u73b0\u4e00\u5806\u7ea2\u8272\u4fe1\u606f\uff0c\u6700\u540e\u663e\u793aConfigure done\uff0c\u662f\u6b63\u5e38\u7684\u3002\u5982\u679c\u6267\u884c\u65f6\u4e2d\u65ad\uff0c\u5219\u5b58\u5728\u5176\u4ed6\u95ee\u9898\u3002\u5728\u6267\u884c\u5b8c\u540e\uff0c\u52fe\u9009 ENABLE_CXX11 \uff0c(\u53ef\u9009BUILD_opencv_world\uff0cBUILD_EXAMPLES)\uff0c\u4e0d\u52fe\u9009WITH_MSMF\u3002 \u4e00\u822c\u4f1a\u51fa\u73b0ffmpeg\u4e0b\u8f7d\u5931\u8d25\u7684\u95ee\u9898\uff0c\u662f\u7531\u4e8e\u65e0\u6cd5\u8bbf\u95eegithub\u5bfc\u81f4\u7684\uff0c\u53ef\u4ee5\u53d1\u73b0\u5728source\u6587\u4ef6\u5939\u4e0b\u7684.cache/\u6709\u4e09\u4e2a\u5927\u5c0f\u4e3a0kb\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u81ea\u884c\u627eCMakeDownloadLog.txt\u4e2d\u7684\u4e0b\u8f7d\u7f51\u5740\u8fdb\u884c\u8fdb\u884c\u4e0b\u8f7d\uff0c\u4e0b\u8f7d\u540e\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 certutil -hashfile xxx MD5 xxx\u4ee3\u8868\u90a3\u4e09\u4e2a\u6587\u4ef6 \u67e5\u770b\u6587\u4ef6md\u7801\u4e0e\u5bf9\u5e940kb\u6587\u4ef6\u540d\u662f\u5426\u4e00\u81f4\uff0c \u4e4b\u540e\u5c06\u6587\u4ef6\u540d\u5b57\u6539\u4e3a\u539f0kb\u6587\u4ef6 \u4e4b\u540e\u518d\u70b9\u51fbconfig \u6ca1\u6709\u62a5\u9519\u540e\u70b9\u51fbgenerate \u4e4b\u540e\u5728build\u6587\u4ef6\u5939\u4e0b\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165minGW32-make -j 4 \u5b8c\u6210\u540e\u8f93\u5165minGW32-make install \u5c06bin\u76ee\u5f55\u52a0\u5165\u73af\u5883\u53d8\u91cf \u914d\u7f6evscode\u73af\u5883 \u00b6 \u5b89\u88c5c/c++ extension,\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002 \u4e4b\u540e\u4e3b\u8981\u914d\u7f6e3\u4e2ajson \u70b9\u51fb\u751f\u6210\u6d3b\u52a8\u6587\u4ef6\u9009\u62e9g++\u4f1a\u751f\u6210tasks.json \u4e3b\u8981\u66f4\u6539\"args\"\u7684\u5185\u5bb9\uff0c\u6dfb\u52a0 \"args\" : [ \"-fdiagnostics-color=always\" , \"-g\" , \"${file}\" , \"-o\" , \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\" , \"-I\" , \"${workspaceFolder}/include\" , \"${workspaceFolder}/lib/basic.cpp\" , \"-I\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64//include\" , \"-I\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64/include/opencv2\" , \"-L\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64/x64/mingw/lib\" , \"-llibopencv_calib3d411\" , \"-llibopencv_core411\" , \"-llibopencv_dnn411\" , \"-llibopencv_features2d411\" , \"-llibopencv_flann411\" , \"-llibopencv_highgui411\" , \"-llibopencv_imgcodecs411\" , \"-llibopencv_imgproc411\" , \"-llibopencv_ml411\" , \"-llibopencv_objdetect411\" , \"-llibopencv_photo411\" , \"-llibopencv_stitching411\" , \"-llibopencv_video411\" , \"-llibopencv_videoio411\" ], \u5728\u8c03\u8bd5\u6309\u94ae\u7684\u53f3\u8fb9\u70b9\u51fb\u8bbe\u7f6e\u914d\u7f6e\u8c03\u8bd5\u6587\u4ef6\u4f1a\u751f\u6210launch.json \u4e0d\u7528\u66f4\u6539 ctrl+shift+P\u641c\u7d22c/c++ UI\u914d\u7f6e\u4f1a\u751f\u6210c_cpp_properties.json \u5728includePath\u4e0b\u6dfb\u52a0\u5f97\u5230 \"includePath\" : [ \"${workspaceFolder}/**\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64/include\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64/include/opencv2\" , \"${workspaceFolder}/include/**\" ], \u73af\u5883\u914d\u7f6e\u597d\uff0c\u53ef\u4ee5\u6d4b\u8bd5\u4e00\u4e0b\u4ee3\u7801\uff0c\u5982\u679c ps::\u4f7f\u7528msys2\u914d\u7f6emingw\u7684\u5fc3\u9178\u5386\u7a0b \u6839\u636evscode\u548cmsys2\u7684\u5b98\u65b9\u6587\u6863\u4e00\u6b65\u4e00\u6b65\u914d\u7f6e https://code.visualstudio.com/docs/languages/cpp \u4e0b\u8f7dmsys2 https://www.msys2.org/ \u662f\u4e00\u4e2a\u5305\u7ba1\u7406\u5668\uff0c\u770b\u8d77\u6765\u5f88\u65b9\u4fbf \u4e0b\u8f7d\u5b8c\u6210\u540e\u5728msys2\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 pacman -S --needed base-devel pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-gdb mingw-w64-x86_64-make \u4e4b\u540e\u68c0\u67e5\u5b89\u88c5 g++ --version; gdb --version \u4e00\u5207\u6b63\u5e38 msys\u5c45\u7136\u4e5f\u53ef\u4ee5\u4e0b\u8f7dopencv\u5305\uff0c\u4f46\u662f\u6211\u53ea\u627e\u5230\u4e86\u6700\u65b0\u7248opencv4.6(\u53ef\u80fd\u4f1a\u5728\u5f00\u53d1\u8fc7\u7a0b\u9047\u5230\u4e0d\u7a33\u5b9a\u95ee\u9898) pacman -S mingw-w64-x86_64-opencv \u5b89\u88c5\u5b8c\u53ef\u4ee5\u770b\u5230dll\u90fd\u5728mingw64\\bin \u91cc\u4e86\uff0c\u7cfb\u7edf\u53d8\u91cf\u8def\u5f84\u5c31\u4e0d\u7528\u518d\u914d\u4e86\u3002\u8981\u914d\u7684\u5934\u6587\u4ef6\u5728mingw64\\include\uff0c\u5e93\u6587\u4ef6\u5728mingw64\\lib,\u7b80\u76f4\u4e0d\u8981\u592a\u723d\u3002 \u4e4b\u540e\u6309\u7167\u7b2c\u4e8c\u6b65\u627e\u5230\u5bf9\u5e94\u7684\u8def\u5f84\u914d\u7f6evscode\u7684json\u5373\u53ef","title":"windows+vscode\u914d\u7f6eopencv4.1.1"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/vscode%E9%85%8D%E7%BD%AEopencv/#vscodeopencv411c","text":"\u6240\u9700\u73af\u5883 vscode cmake mingw-w64","title":"vscode\u914d\u7f6eopencv4.1.1\uff08c++)\u73af\u5883"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/vscode%E9%85%8D%E7%BD%AEopencv/#mingw","text":"mingw\u4e0b\u8f7d\u5730\u5740: https://sourceforge.net/projects/mingw-w64/files/ \u5efa\u8bae\u76f4\u63a5\u4e0b\u8f7d\u5b98\u65b9\u7ed9\u7684\u7f16\u8bd1\u597d\u7684\u7248\u672c \u5982\u679c\u4f7f\u7528online installer\u4f1a\u51fa\u73b0 the file has been downloaded incorrectly \u7684\u9519 \u5c06bin\u6587\u4ef6\u5939\u52a0\u5165\u73af\u5883\u53d8\u91cf H:\\mingw\\mingw64\\bin \u5728\u7ec8\u7aef\u8f93\u5165g++ -verion, gdb --version\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f \u91cd\u8981\u7684\u70b9!!,\u4e00\u5b9a\u8981\u5c06mingw\u7684bin\u6587\u4ef6\u653e\u5230\u73af\u5883\u53d8\u91cf\u7b2c\u4e00\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u4e4b\u524d\u6dfb\u52a0\u8fc7git\u7684\u73af\u5883\u53d8\u91cf,\u4e8c\u8005\u4e4b\u95f4\u6709\u91cd\u540d\u7684libstdc++-6.dll\uff0c\u5bfc\u81f4\u7f16\u8bd1\u51fa\u73b0\u201dno such file or directory\u201c","title":"mingw\u4e0b\u8f7d"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/vscode%E9%85%8D%E7%BD%AEopencv/#opencv","text":"","title":"opencv\u914d\u7f6e"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/vscode%E9%85%8D%E7%BD%AEopencv/#opencv_1","text":"opencv\u9884\u7f16\u8bd1\u5e93\u4e0b\u8f7d\u5730\u5740\uff1a https://github.com/huihut/OpenCV-MinGW-Build \u6ce8\u610f \u4e00\u5b9a\u8981\u6309\u7167\u5bf9\u5e94\u7684configuration\u6838\u5bf9mingw\u7248\u672c\uff0c\u5426\u5219\u4f1a\u7f16\u8bd1\u4f1a\u51fa\u9519 \u914d\u7f6e\u73af\u5883\u53d8\u91cf \u4f8b\u5982\uff1a H:\\Packages\\OpenCV-MinGW-Build-OpenCV-4.1.1-x64\\x64\\mingw\\bin","title":"\u65b9\u6cd5\u4e00 \u4f7f\u7528\u9884\u7f16\u8bd1\u597d\u7684opencv\u5e93\uff0c\u7701\u53bb\u7f16\u8bd1\u7684\u9ebb\u70e6"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/vscode%E9%85%8D%E7%BD%AEopencv/#opencv_2","text":"\u521b\u5efabuild\u6587\u4ef6\u5939\u5b58\u653e\u7f16\u8bd1\u6587\u4ef6\uff0c\u6253\u5f00cmake\u9009\u62e9source\u548cbuild\u6587\u4ef6\u5939\u8fdb\u884c\u7f16\u8bd1\uff0c\u4e0d\u51fa\u610f\u5916\u4f1a\u51fa\u73b0\u4e00\u5806\u7ea2\u8272\u4fe1\u606f\uff0c\u6700\u540e\u663e\u793aConfigure done\uff0c\u662f\u6b63\u5e38\u7684\u3002\u5982\u679c\u6267\u884c\u65f6\u4e2d\u65ad\uff0c\u5219\u5b58\u5728\u5176\u4ed6\u95ee\u9898\u3002\u5728\u6267\u884c\u5b8c\u540e\uff0c\u52fe\u9009 ENABLE_CXX11 \uff0c(\u53ef\u9009BUILD_opencv_world\uff0cBUILD_EXAMPLES)\uff0c\u4e0d\u52fe\u9009WITH_MSMF\u3002 \u4e00\u822c\u4f1a\u51fa\u73b0ffmpeg\u4e0b\u8f7d\u5931\u8d25\u7684\u95ee\u9898\uff0c\u662f\u7531\u4e8e\u65e0\u6cd5\u8bbf\u95eegithub\u5bfc\u81f4\u7684\uff0c\u53ef\u4ee5\u53d1\u73b0\u5728source\u6587\u4ef6\u5939\u4e0b\u7684.cache/\u6709\u4e09\u4e2a\u5927\u5c0f\u4e3a0kb\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u81ea\u884c\u627eCMakeDownloadLog.txt\u4e2d\u7684\u4e0b\u8f7d\u7f51\u5740\u8fdb\u884c\u8fdb\u884c\u4e0b\u8f7d\uff0c\u4e0b\u8f7d\u540e\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 certutil -hashfile xxx MD5 xxx\u4ee3\u8868\u90a3\u4e09\u4e2a\u6587\u4ef6 \u67e5\u770b\u6587\u4ef6md\u7801\u4e0e\u5bf9\u5e940kb\u6587\u4ef6\u540d\u662f\u5426\u4e00\u81f4\uff0c \u4e4b\u540e\u5c06\u6587\u4ef6\u540d\u5b57\u6539\u4e3a\u539f0kb\u6587\u4ef6 \u4e4b\u540e\u518d\u70b9\u51fbconfig \u6ca1\u6709\u62a5\u9519\u540e\u70b9\u51fbgenerate \u4e4b\u540e\u5728build\u6587\u4ef6\u5939\u4e0b\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165minGW32-make -j 4 \u5b8c\u6210\u540e\u8f93\u5165minGW32-make install \u5c06bin\u76ee\u5f55\u52a0\u5165\u73af\u5883\u53d8\u91cf","title":"\u65b9\u6cd5\u4e8c \u81ea\u5df1\u7f16\u8bd1opencv\u5e93"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/vscode%E9%85%8D%E7%BD%AEopencv/#vscode","text":"\u5b89\u88c5c/c++ extension,\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002 \u4e4b\u540e\u4e3b\u8981\u914d\u7f6e3\u4e2ajson \u70b9\u51fb\u751f\u6210\u6d3b\u52a8\u6587\u4ef6\u9009\u62e9g++\u4f1a\u751f\u6210tasks.json \u4e3b\u8981\u66f4\u6539\"args\"\u7684\u5185\u5bb9\uff0c\u6dfb\u52a0 \"args\" : [ \"-fdiagnostics-color=always\" , \"-g\" , \"${file}\" , \"-o\" , \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\" , \"-I\" , \"${workspaceFolder}/include\" , \"${workspaceFolder}/lib/basic.cpp\" , \"-I\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64//include\" , \"-I\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64/include/opencv2\" , \"-L\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64/x64/mingw/lib\" , \"-llibopencv_calib3d411\" , \"-llibopencv_core411\" , \"-llibopencv_dnn411\" , \"-llibopencv_features2d411\" , \"-llibopencv_flann411\" , \"-llibopencv_highgui411\" , \"-llibopencv_imgcodecs411\" , \"-llibopencv_imgproc411\" , \"-llibopencv_ml411\" , \"-llibopencv_objdetect411\" , \"-llibopencv_photo411\" , \"-llibopencv_stitching411\" , \"-llibopencv_video411\" , \"-llibopencv_videoio411\" ], \u5728\u8c03\u8bd5\u6309\u94ae\u7684\u53f3\u8fb9\u70b9\u51fb\u8bbe\u7f6e\u914d\u7f6e\u8c03\u8bd5\u6587\u4ef6\u4f1a\u751f\u6210launch.json \u4e0d\u7528\u66f4\u6539 ctrl+shift+P\u641c\u7d22c/c++ UI\u914d\u7f6e\u4f1a\u751f\u6210c_cpp_properties.json \u5728includePath\u4e0b\u6dfb\u52a0\u5f97\u5230 \"includePath\" : [ \"${workspaceFolder}/**\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64/include\" , \"H:/Packages/OpenCV-MinGW-Build-OpenCV-4.1.1-x64/include/opencv2\" , \"${workspaceFolder}/include/**\" ], \u73af\u5883\u914d\u7f6e\u597d\uff0c\u53ef\u4ee5\u6d4b\u8bd5\u4e00\u4e0b\u4ee3\u7801\uff0c\u5982\u679c ps::\u4f7f\u7528msys2\u914d\u7f6emingw\u7684\u5fc3\u9178\u5386\u7a0b \u6839\u636evscode\u548cmsys2\u7684\u5b98\u65b9\u6587\u6863\u4e00\u6b65\u4e00\u6b65\u914d\u7f6e https://code.visualstudio.com/docs/languages/cpp \u4e0b\u8f7dmsys2 https://www.msys2.org/ \u662f\u4e00\u4e2a\u5305\u7ba1\u7406\u5668\uff0c\u770b\u8d77\u6765\u5f88\u65b9\u4fbf \u4e0b\u8f7d\u5b8c\u6210\u540e\u5728msys2\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 pacman -S --needed base-devel pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-gdb mingw-w64-x86_64-make \u4e4b\u540e\u68c0\u67e5\u5b89\u88c5 g++ --version; gdb --version \u4e00\u5207\u6b63\u5e38 msys\u5c45\u7136\u4e5f\u53ef\u4ee5\u4e0b\u8f7dopencv\u5305\uff0c\u4f46\u662f\u6211\u53ea\u627e\u5230\u4e86\u6700\u65b0\u7248opencv4.6(\u53ef\u80fd\u4f1a\u5728\u5f00\u53d1\u8fc7\u7a0b\u9047\u5230\u4e0d\u7a33\u5b9a\u95ee\u9898) pacman -S mingw-w64-x86_64-opencv \u5b89\u88c5\u5b8c\u53ef\u4ee5\u770b\u5230dll\u90fd\u5728mingw64\\bin \u91cc\u4e86\uff0c\u7cfb\u7edf\u53d8\u91cf\u8def\u5f84\u5c31\u4e0d\u7528\u518d\u914d\u4e86\u3002\u8981\u914d\u7684\u5934\u6587\u4ef6\u5728mingw64\\include\uff0c\u5e93\u6587\u4ef6\u5728mingw64\\lib,\u7b80\u76f4\u4e0d\u8981\u592a\u723d\u3002 \u4e4b\u540e\u6309\u7167\u7b2c\u4e8c\u6b65\u627e\u5230\u5bf9\u5e94\u7684\u8def\u5f84\u914d\u7f6evscode\u7684json\u5373\u53ef","title":"\u914d\u7f6evscode\u73af\u5883"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/%E5%9F%BA%E7%A1%80/","text":"\u5f00\u6e90\u534f\u8bae VScode\u5feb\u6377\u952e ctrl+B:\u6253\u5f00\u5173\u95ed\u8d44\u6e90\u7ba1\u7406\u5668 ctrl+shift+B:\u751f\u6210\u6d3b\u52a8\u4efb\u52a1 Ctrl+shift+P:\u641c\u7d22 python\u57fa\u672c\u60ed\u600d \u00b6 Numpy\u5b9e\u73b0\u77e9\u9635\u8f6c\u7f6e\u7684\u51e0\u79cd\u65b9\u6cd5 Numpy\u77e9\u9635\u62fc\u63a5","title":"\u57fa\u7840"},{"location":"%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/%E5%9F%BA%E7%A1%80/#python","text":"Numpy\u5b9e\u73b0\u77e9\u9635\u8f6c\u7f6e\u7684\u51e0\u79cd\u65b9\u6cd5 Numpy\u77e9\u9635\u62fc\u63a5","title":"python\u57fa\u672c\u60ed\u600d"}]}